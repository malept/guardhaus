name: CI

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches:
      - main

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run 'cargo check'
        run: cargo check

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [macOS, windows]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: mise run test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Test Suite (Linux, Code Coverage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Should speed up cargo-tarpaulin installation
      - name: Install cargo-binstall
        run: mise use cargo-binstall
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo-tarpaulin
        run: mise run test:coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml

  build:
    name: Build Only
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        include:
          - os: ubuntu
            target: aarch64-linux-android
            cross: true
          - os: ubuntu
            target: arm-linux-androideabi
            cross: true
          - os: ubuntu
            target: armv7-unknown-linux-gnueabihf
            cross: true
          - os: ubuntu
            target: powerpc64-unknown-linux-gnu
            cross: true
          - os: ubuntu
            target: x86_64-unknown-linux-musl
            cross: true
          - os: ubuntu
            target: i686-unknown-linux-gnu
            cross: false
          - os: macOS
            target: aarch64-apple-ios
            cross: false
          - os: macOS
            target: x86_64-apple-ios
            cross: false
    steps:
      - name: Install OpenSSL (32-bit)
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt-get install --yes --no-install-recommends libssl-dev:i386
      - uses: actions/checkout@v4
      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
          mise_toml: |
            [tools]
            rust = { version = "stable", profile = "minimal", targets = "${{ matrix.target }}" }
            "ubi:cross-rs/cross" = "0.1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build with Cross
        run: cross build --release --target ${{ matrix.target }}
        env:
          PKG_CONFIG_ALLOW_CROSS: 1

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linters
        run: mise run lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Fetch all git branches
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Install Rust via mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docs
        run: cargo doc

      - name: Publish to GitHub Pages
        uses: malept/github-action-gh-pages@v1.4.0
        if: github.event_name == 'push'
        with:
          defaultBranch: main
          docsPath: target/doc
          redirectURLSuffix: guardhaus/
          versionDocs: true
        env:
          GH_PAGES_SSH_DEPLOY_KEY: ${{ secrets.GH_PAGES_SSH_DEPLOY_KEY }}
