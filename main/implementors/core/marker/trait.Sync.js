(function() {var implementors = {};
implementors["base64"] = [{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for DecodeError","synthetic":true,"types":[]},{"text":"impl Sync for CharacterSet","synthetic":true,"types":[]},{"text":"impl Sync for LineEnding","synthetic":true,"types":[]},{"text":"impl Sync for LineWrap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DisplayError","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl Sync for Bytes","synthetic":true,"types":[]},{"text":"impl Sync for BytesMut","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Sync for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T, P&gt; !Sync for CompareAndSetError&lt;'g, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; !Sync for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for LocalHandle","synthetic":true,"types":[]},{"text":"impl !Sync for Guard","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send + Sync&gt; Sync for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl Sync for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for ArrayQueue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for SegQueue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl !Sync for Backoff","synthetic":true,"types":[]},{"text":"impl !Sync for Parker","synthetic":true,"types":[]},{"text":"impl Sync for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Sync for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Unparker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send + Sync&gt; Sync for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Sync&gt; Sync for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Sync&gt; Sync for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'env&gt; Sync for Scope&lt;'env&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'scope, T&gt; Sync for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":false,"types":[]}];
implementors["crypto_hash"] = [{"text":"impl Sync for Hasher","synthetic":true,"types":[]},{"text":"impl Sync for Algorithm","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Sync for FnvHasher","synthetic":true,"types":[]}];
implementors["foreign_types_shared"] = [{"text":"impl !Sync for Opaque","synthetic":true,"types":[]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Sync for Async&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AsyncSink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Empty&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, R&gt; Sync for Lazy&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for FutureResult&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Sync for LoopFn&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Sync for AndThen&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Flatten&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;A as Future&gt;::Item as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Fuse&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Join&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C&gt; Sync for Join3&lt;A, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C, D&gt; Sync for Join4&lt;A, B, C, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C, D, E&gt; Sync for Join5&lt;A, B, C, D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as Future&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Sync for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Sync for MapErr&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, E&gt; Sync for FromErr&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Sync for OrElse&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for SelectNext&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Select2&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Sync for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Sync for Inspect&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for CatchUnwind&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for JoinAll&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as IntoIterator&gt;::Item as IntoFuture&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as IntoIterator&gt;::Item as IntoFuture&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SelectAll&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SelectOk&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Shared&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Error: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Item: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SharedItem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SharedError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for ExecuteError&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for Loop&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ExecuteErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Sync for IterOk&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for IterResult&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Repeat&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Sync for AndThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Sync for Chain&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Concat&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Concat2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Empty&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for Filter&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for FilterMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Flatten&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; Sync for Fold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Sync for ForEach&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Sync for FromErr&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Fuse&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for StreamFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for Inspect&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for InspectErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for Map&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for MapErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Sync for Merge&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as Stream&gt;::Error: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Once&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Sync for OrElse&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Peekable&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Sync for Select&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Skip&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P, R&gt; Sync for SkipWhile&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Take&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P, R&gt; Sync for TakeWhile&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Sync for Then&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Sync for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Sync for Zip&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S1 as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Forward&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Buffered&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as Stream&gt;::Item as IntoFuture&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as Stream&gt;::Item as IntoFuture&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for BufferUnordered&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as Stream&gt;::Item as IntoFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for CatchUnwind&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Chunks&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Error: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Collect&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for Wait&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SplitStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SplitSink&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReuniteError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I1, I2&gt; Sync for MergedItem&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; !Sync for IterMut&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Buffer&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for Wait&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, U, F, Fut&gt; Sync for With&lt;S, U, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, U, F, St&gt; Sync for WithFlatMap&lt;S, U, F, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Flush&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Send&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for SendAll&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for SinkMapErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Sync for SinkFromErr&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Fanout&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Sink&gt;::SinkItem: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Sink&gt;::SinkItem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Task","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Spawn&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnparkEvent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BiLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for BiLockGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BiLockAcquire&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BiLockAcquired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Canceled","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for SpawnHandle&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Execute&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Error: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Item, Error&gt; Sync for SpawnHandle&lt;Item, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Execute&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Error: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Item, Error&gt; !Sync for SpawnHandle&lt;Item, Error&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for Execute&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !Sync for SpawnHandle&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !Sync for Execute&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for FuturesUnordered&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for AtomicTask","synthetic":false,"types":[]},{"text":"impl Sync for NotifyHandle","synthetic":false,"types":[]}];
implementors["futures_cpupool"] = [{"text":"impl Sync for CpuPool","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for CpuFuture&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["guardhaus"] = [{"text":"impl Sync for AuthenticationInfo","synthetic":true,"types":[]},{"text":"impl Sync for Digest","synthetic":true,"types":[]},{"text":"impl Sync for Username","synthetic":true,"types":[]},{"text":"impl Sync for NonceCount","synthetic":true,"types":[]},{"text":"impl Sync for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl Sync for Qop","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Sync for FromHexError","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Sync for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Sync for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Sync for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Header&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl Sync for Uri","synthetic":true,"types":[]},{"text":"impl Sync for Body","synthetic":true,"types":[]},{"text":"impl Sync for Chunk","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !Sync for Request&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !Sync for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Method","synthetic":true,"types":[]},{"text":"impl Sync for StatusCode","synthetic":true,"types":[]},{"text":"impl Sync for HttpVersion","synthetic":true,"types":[]},{"text":"impl !Sync for HttpConnector","synthetic":true,"types":[]},{"text":"impl&lt;C, B&nbsp;=&nbsp;Body&gt; !Sync for Client&lt;C, B&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FutureResponse","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Sync for Config&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UseDefaultConnector","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SendRequest&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Handshake&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for ResponseFuture","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UriError","synthetic":true,"types":[]},{"text":"impl Sync for Canceled","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for EntityTag","synthetic":true,"types":[]},{"text":"impl Sync for HttpDate","synthetic":true,"types":[]},{"text":"impl Sync for Quality","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for QualityItem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AcceptCharset","synthetic":true,"types":[]},{"text":"impl Sync for AcceptEncoding","synthetic":true,"types":[]},{"text":"impl Sync for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl Sync for AcceptRanges","synthetic":true,"types":[]},{"text":"impl Sync for Accept","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlAllowCredentials","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlAllowHeaders","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlAllowMethods","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlExposeHeaders","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlMaxAge","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlRequestHeaders","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlRequestMethod","synthetic":true,"types":[]},{"text":"impl Sync for Allow","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Authorization&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Basic","synthetic":true,"types":[]},{"text":"impl Sync for Bearer","synthetic":true,"types":[]},{"text":"impl Sync for CacheControl","synthetic":true,"types":[]},{"text":"impl Sync for Connection","synthetic":true,"types":[]},{"text":"impl Sync for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Sync for ContentEncoding","synthetic":true,"types":[]},{"text":"impl Sync for ContentLanguage","synthetic":true,"types":[]},{"text":"impl Sync for ContentLength","synthetic":true,"types":[]},{"text":"impl Sync for ContentLocation","synthetic":true,"types":[]},{"text":"impl Sync for ContentRange","synthetic":true,"types":[]},{"text":"impl Sync for ContentType","synthetic":true,"types":[]},{"text":"impl Sync for Cookie","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CookieIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Date","synthetic":true,"types":[]},{"text":"impl Sync for ETag","synthetic":true,"types":[]},{"text":"impl Sync for Expires","synthetic":true,"types":[]},{"text":"impl Sync for From","synthetic":true,"types":[]},{"text":"impl Sync for Host","synthetic":true,"types":[]},{"text":"impl Sync for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl Sync for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl Sync for LastEventId","synthetic":true,"types":[]},{"text":"impl Sync for LastModified","synthetic":true,"types":[]},{"text":"impl Sync for Link","synthetic":true,"types":[]},{"text":"impl Sync for LinkValue","synthetic":true,"types":[]},{"text":"impl Sync for Location","synthetic":true,"types":[]},{"text":"impl Sync for Origin","synthetic":true,"types":[]},{"text":"impl Sync for Prefer","synthetic":true,"types":[]},{"text":"impl Sync for PreferenceApplied","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for ProxyAuthorization&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Referer","synthetic":true,"types":[]},{"text":"impl Sync for Server","synthetic":true,"types":[]},{"text":"impl Sync for SetCookie","synthetic":true,"types":[]},{"text":"impl Sync for StrictTransportSecurity","synthetic":true,"types":[]},{"text":"impl Sync for Te","synthetic":true,"types":[]},{"text":"impl Sync for TransferEncoding","synthetic":true,"types":[]},{"text":"impl Sync for Upgrade","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]},{"text":"impl Sync for UserAgent","synthetic":true,"types":[]},{"text":"impl Sync for Warning","synthetic":true,"types":[]},{"text":"impl Sync for Raw","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Sync for Formatter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Headers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for HeadersItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for HeaderView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Charset","synthetic":true,"types":[]},{"text":"impl Sync for Encoding","synthetic":true,"types":[]},{"text":"impl Sync for RangeUnit","synthetic":true,"types":[]},{"text":"impl Sync for AccessControlAllowOrigin","synthetic":true,"types":[]},{"text":"impl Sync for CacheDirective","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionOption","synthetic":true,"types":[]},{"text":"impl Sync for DispositionType","synthetic":true,"types":[]},{"text":"impl Sync for DispositionParam","synthetic":true,"types":[]},{"text":"impl Sync for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl Sync for Expect","synthetic":true,"types":[]},{"text":"impl Sync for IfMatch","synthetic":true,"types":[]},{"text":"impl Sync for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl Sync for IfRange","synthetic":true,"types":[]},{"text":"impl Sync for RelationType","synthetic":true,"types":[]},{"text":"impl Sync for MediaDesc","synthetic":true,"types":[]},{"text":"impl Sync for Pragma","synthetic":true,"types":[]},{"text":"impl Sync for Preference","synthetic":true,"types":[]},{"text":"impl Sync for Range","synthetic":true,"types":[]},{"text":"impl Sync for ByteRangeSpec","synthetic":true,"types":[]},{"text":"impl Sync for ReferrerPolicy","synthetic":true,"types":[]},{"text":"impl Sync for RetryAfter","synthetic":true,"types":[]},{"text":"impl Sync for ProtocolName","synthetic":true,"types":[]},{"text":"impl Sync for Vary","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedValue","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Http&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; !Sync for Server&lt;S, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; Sync for Serve&lt;I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for AddrIncoming","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; Sync for Connection&lt;I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&gt;::Future: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as HyperService&gt;::ResponseBody as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as HyperService&gt;::ResponseBody: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for Parts&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Sync for IoVec","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl Sync for LanguageTag","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl !Sync for group","synthetic":true,"types":[]},{"text":"impl Sync for utimbuf","synthetic":true,"types":[]},{"text":"impl Sync for timeval","synthetic":true,"types":[]},{"text":"impl Sync for timespec","synthetic":true,"types":[]},{"text":"impl Sync for rlimit","synthetic":true,"types":[]},{"text":"impl Sync for rusage","synthetic":true,"types":[]},{"text":"impl Sync for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for hostent","synthetic":true,"types":[]},{"text":"impl !Sync for iovec","synthetic":true,"types":[]},{"text":"impl Sync for pollfd","synthetic":true,"types":[]},{"text":"impl Sync for winsize","synthetic":true,"types":[]},{"text":"impl Sync for linger","synthetic":true,"types":[]},{"text":"impl !Sync for sigval","synthetic":true,"types":[]},{"text":"impl Sync for itimerval","synthetic":true,"types":[]},{"text":"impl Sync for tms","synthetic":true,"types":[]},{"text":"impl !Sync for servent","synthetic":true,"types":[]},{"text":"impl !Sync for protoent","synthetic":true,"types":[]},{"text":"impl Sync for in_addr","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Sync for addrinfo","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Sync for fd_set","synthetic":true,"types":[]},{"text":"impl !Sync for tm","synthetic":true,"types":[]},{"text":"impl Sync for sched_param","synthetic":true,"types":[]},{"text":"impl !Sync for Dl_info","synthetic":true,"types":[]},{"text":"impl !Sync for lconv","synthetic":true,"types":[]},{"text":"impl Sync for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Sync for ifaddrs","synthetic":true,"types":[]},{"text":"impl Sync for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Sync for arpreq","synthetic":true,"types":[]},{"text":"impl Sync for arpreq_old","synthetic":true,"types":[]},{"text":"impl Sync for arphdr","synthetic":true,"types":[]},{"text":"impl !Sync for mmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for epoll_event","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Sync for utsname","synthetic":true,"types":[]},{"text":"impl !Sync for sigevent","synthetic":true,"types":[]},{"text":"impl Sync for rlimit64","synthetic":true,"types":[]},{"text":"impl !Sync for glob_t","synthetic":true,"types":[]},{"text":"impl !Sync for passwd","synthetic":true,"types":[]},{"text":"impl !Sync for spwd","synthetic":true,"types":[]},{"text":"impl Sync for dqblk","synthetic":true,"types":[]},{"text":"impl Sync for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Sync for itimerspec","synthetic":true,"types":[]},{"text":"impl Sync for fsid_t","synthetic":true,"types":[]},{"text":"impl Sync for packet_mreq","synthetic":true,"types":[]},{"text":"impl Sync for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Sync for if_nameindex","synthetic":true,"types":[]},{"text":"impl Sync for msginfo","synthetic":true,"types":[]},{"text":"impl Sync for sembuf","synthetic":true,"types":[]},{"text":"impl Sync for input_event","synthetic":true,"types":[]},{"text":"impl Sync for input_id","synthetic":true,"types":[]},{"text":"impl Sync for input_absinfo","synthetic":true,"types":[]},{"text":"impl Sync for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Sync for input_mask","synthetic":true,"types":[]},{"text":"impl Sync for ff_replay","synthetic":true,"types":[]},{"text":"impl Sync for ff_trigger","synthetic":true,"types":[]},{"text":"impl Sync for ff_envelope","synthetic":true,"types":[]},{"text":"impl Sync for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Sync for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_effect","synthetic":true,"types":[]},{"text":"impl !Sync for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for ucred","synthetic":true,"types":[]},{"text":"impl !Sync for mntent","synthetic":true,"types":[]},{"text":"impl !Sync for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Sync for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Sync for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for arpd_request","synthetic":true,"types":[]},{"text":"impl Sync for inotify_event","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_response","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Sync for regmatch_t","synthetic":true,"types":[]},{"text":"impl Sync for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Sync for dirent","synthetic":true,"types":[]},{"text":"impl Sync for dirent64","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Sync for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Sync for mq_attr","synthetic":true,"types":[]},{"text":"impl Sync for statx","synthetic":true,"types":[]},{"text":"impl Sync for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Sync for aiocb","synthetic":true,"types":[]},{"text":"impl Sync for __exit_status","synthetic":true,"types":[]},{"text":"impl Sync for __timeval","synthetic":true,"types":[]},{"text":"impl !Sync for glob64_t","synthetic":true,"types":[]},{"text":"impl !Sync for msghdr","synthetic":true,"types":[]},{"text":"impl Sync for cmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for termios","synthetic":true,"types":[]},{"text":"impl Sync for mallinfo","synthetic":true,"types":[]},{"text":"impl Sync for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Sync for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Sync for nlattr","synthetic":true,"types":[]},{"text":"impl !Sync for rtentry","synthetic":true,"types":[]},{"text":"impl Sync for timex","synthetic":true,"types":[]},{"text":"impl Sync for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Sync for regex_t","synthetic":true,"types":[]},{"text":"impl Sync for utmpx","synthetic":true,"types":[]},{"text":"impl Sync for sigset_t","synthetic":true,"types":[]},{"text":"impl Sync for sysinfo","synthetic":true,"types":[]},{"text":"impl Sync for msqid_ds","synthetic":true,"types":[]},{"text":"impl Sync for sigaction","synthetic":true,"types":[]},{"text":"impl Sync for statfs","synthetic":true,"types":[]},{"text":"impl Sync for flock","synthetic":true,"types":[]},{"text":"impl Sync for flock64","synthetic":true,"types":[]},{"text":"impl Sync for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Sync for stack_t","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl Sync for stat64","synthetic":true,"types":[]},{"text":"impl Sync for statfs64","synthetic":true,"types":[]},{"text":"impl Sync for statvfs64","synthetic":true,"types":[]},{"text":"impl Sync for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Sync for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for user","synthetic":true,"types":[]},{"text":"impl !Sync for mcontext_t","synthetic":true,"types":[]},{"text":"impl Sync for ipc_perm","synthetic":true,"types":[]},{"text":"impl Sync for shmid_ds","synthetic":true,"types":[]},{"text":"impl Sync for termios2","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Sync for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for ucontext_t","synthetic":true,"types":[]},{"text":"impl Sync for statvfs","synthetic":true,"types":[]},{"text":"impl Sync for max_align_t","synthetic":true,"types":[]},{"text":"impl Sync for sem_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Sync for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Sync for in6_addr","synthetic":true,"types":[]},{"text":"impl Sync for DIR","synthetic":true,"types":[]},{"text":"impl Sync for FILE","synthetic":true,"types":[]},{"text":"impl Sync for fpos_t","synthetic":true,"types":[]},{"text":"impl Sync for timezone","synthetic":true,"types":[]},{"text":"impl Sync for fpos64_t","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Sync for GuardSend","synthetic":true,"types":[]},{"text":"impl !Sync for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, G:&nbsp;GetThreadId + Sync, T:&nbsp;?Sized + Send&gt; Sync for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Sync, T:&nbsp;?Sized + Send + Sync&gt; Sync for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Sync for LogRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LogMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LogLocation","synthetic":true,"types":[]},{"text":"impl Sync for MaxLogLevelFilter","synthetic":true,"types":[]},{"text":"impl Sync for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Sync for ShutdownLoggerError","synthetic":true,"types":[]},{"text":"impl Sync for LogLevel","synthetic":true,"types":[]},{"text":"impl Sync for LogLevelFilter","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Sync for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Sync for Poll","synthetic":true,"types":[]},{"text":"impl Sync for PollOpt","synthetic":true,"types":[]},{"text":"impl Sync for Ready","synthetic":true,"types":[]},{"text":"impl Sync for Token","synthetic":true,"types":[]},{"text":"impl Sync for Events","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnixReady","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl Sync for Registration","synthetic":false,"types":[]},{"text":"impl Sync for SetReadiness","synthetic":false,"types":[]}];
implementors["mio_uds"] = [{"text":"impl Sync for UnixStream","synthetic":true,"types":[]},{"text":"impl Sync for UnixListener","synthetic":true,"types":[]},{"text":"impl Sync for UnixDatagram","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !Sync for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for UdpBuilder","synthetic":true,"types":[]}];
implementors["openssl"] = [{"text":"impl Sync for KeyError","synthetic":true,"types":[]},{"text":"impl Sync for AesKey","synthetic":true,"types":[]},{"text":"impl Sync for TimeDiff","synthetic":true,"types":[]},{"text":"impl Sync for MsbOption","synthetic":true,"types":[]},{"text":"impl Sync for CMSOptions","synthetic":true,"types":[]},{"text":"impl !Sync for ConfMethod","synthetic":true,"types":[]},{"text":"impl Sync for PointConversionForm","synthetic":true,"types":[]},{"text":"impl Sync for Asn1Flag","synthetic":true,"types":[]},{"text":"impl !Sync for Seal","synthetic":true,"types":[]},{"text":"impl !Sync for Open","synthetic":true,"types":[]},{"text":"impl Sync for ErrorStack","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Index&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DigestBytes","synthetic":true,"types":[]},{"text":"impl Sync for SignatureAlgorithms","synthetic":true,"types":[]},{"text":"impl Sync for Nid","synthetic":true,"types":[]},{"text":"impl Sync for OcspFlag","synthetic":true,"types":[]},{"text":"impl Sync for OcspResponseStatus","synthetic":true,"types":[]},{"text":"impl Sync for OcspCertStatus","synthetic":true,"types":[]},{"text":"impl Sync for OcspRevokedStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OcspStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParsedPkcs12","synthetic":true,"types":[]},{"text":"impl Sync for Pkcs12Builder","synthetic":true,"types":[]},{"text":"impl Sync for KeyIvPair","synthetic":true,"types":[]},{"text":"impl Sync for Pkcs7Flags","synthetic":true,"types":[]},{"text":"impl Sync for Id","synthetic":true,"types":[]},{"text":"impl Sync for Params","synthetic":true,"types":[]},{"text":"impl Sync for Public","synthetic":true,"types":[]},{"text":"impl Sync for Private","synthetic":true,"types":[]},{"text":"impl Sync for Padding","synthetic":true,"types":[]},{"text":"impl Sync for RsaPrivateKeyBuilder","synthetic":true,"types":[]},{"text":"impl Sync for Sha1","synthetic":true,"types":[]},{"text":"impl Sync for Sha224","synthetic":true,"types":[]},{"text":"impl Sync for Sha256","synthetic":true,"types":[]},{"text":"impl Sync for Sha384","synthetic":true,"types":[]},{"text":"impl Sync for Sha512","synthetic":true,"types":[]},{"text":"impl Sync for RsaPssSaltlen","synthetic":true,"types":[]},{"text":"impl Sync for SrtpProfileId","synthetic":true,"types":[]},{"text":"impl Sync for ConnectConfiguration","synthetic":true,"types":[]},{"text":"impl Sync for SslAcceptor","synthetic":true,"types":[]},{"text":"impl Sync for SslAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Sync for SslConnector","synthetic":true,"types":[]},{"text":"impl Sync for SslConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ErrorCode","synthetic":true,"types":[]},{"text":"impl Sync for SslOptions","synthetic":true,"types":[]},{"text":"impl Sync for SslMode","synthetic":true,"types":[]},{"text":"impl Sync for SslVerifyMode","synthetic":true,"types":[]},{"text":"impl Sync for SslSessionCacheMode","synthetic":true,"types":[]},{"text":"impl Sync for ExtensionContext","synthetic":true,"types":[]},{"text":"impl Sync for SslFiletype","synthetic":true,"types":[]},{"text":"impl Sync for StatusType","synthetic":true,"types":[]},{"text":"impl Sync for NameType","synthetic":true,"types":[]},{"text":"impl Sync for SniError","synthetic":true,"types":[]},{"text":"impl Sync for SslAlert","synthetic":true,"types":[]},{"text":"impl Sync for AlpnError","synthetic":true,"types":[]},{"text":"impl Sync for ClientHelloResponse","synthetic":true,"types":[]},{"text":"impl Sync for SslVersion","synthetic":true,"types":[]},{"text":"impl Sync for SslContextBuilder","synthetic":true,"types":[]},{"text":"impl Sync for CipherBits","synthetic":true,"types":[]},{"text":"impl !Sync for SslCipher","synthetic":true,"types":[]},{"text":"impl !Sync for SslCipherRef","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for MidHandshakeSslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SslStreamBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ShutdownState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ShutdownResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for X509Builder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for X509v3Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for X509NameBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for X509NameEntries&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for X509ReqBuilder","synthetic":true,"types":[]},{"text":"impl Sync for X509VerifyResult","synthetic":true,"types":[]},{"text":"impl Sync for X509CheckFlags","synthetic":true,"types":[]},{"text":"impl Sync for BasicConstraints","synthetic":true,"types":[]},{"text":"impl Sync for KeyUsage","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedKeyUsage","synthetic":true,"types":[]},{"text":"impl Sync for SubjectKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Sync for AuthorityKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Sync for SubjectAlternativeName","synthetic":true,"types":[]},{"text":"impl Sync for Asn1GeneralizedTime","synthetic":false,"types":[]},{"text":"impl Sync for Asn1GeneralizedTimeRef","synthetic":false,"types":[]},{"text":"impl Sync for Asn1Time","synthetic":false,"types":[]},{"text":"impl Sync for Asn1TimeRef","synthetic":false,"types":[]},{"text":"impl Sync for Asn1String","synthetic":false,"types":[]},{"text":"impl Sync for Asn1StringRef","synthetic":false,"types":[]},{"text":"impl Sync for Asn1Integer","synthetic":false,"types":[]},{"text":"impl Sync for Asn1IntegerRef","synthetic":false,"types":[]},{"text":"impl Sync for Asn1BitString","synthetic":false,"types":[]},{"text":"impl Sync for Asn1BitStringRef","synthetic":false,"types":[]},{"text":"impl Sync for Asn1Object","synthetic":false,"types":[]},{"text":"impl Sync for Asn1ObjectRef","synthetic":false,"types":[]},{"text":"impl Sync for BigNumContext","synthetic":false,"types":[]},{"text":"impl Sync for BigNumContextRef","synthetic":false,"types":[]},{"text":"impl Sync for BigNum","synthetic":false,"types":[]},{"text":"impl Sync for BigNumRef","synthetic":false,"types":[]},{"text":"impl Sync for CmsContentInfo","synthetic":false,"types":[]},{"text":"impl Sync for CmsContentInfoRef","synthetic":false,"types":[]},{"text":"impl Sync for Conf","synthetic":false,"types":[]},{"text":"impl Sync for ConfRef","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for Deriver&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Dh&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for DhRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Dsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for DsaRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for EcGroup","synthetic":false,"types":[]},{"text":"impl Sync for EcGroupRef","synthetic":false,"types":[]},{"text":"impl Sync for EcPoint","synthetic":false,"types":[]},{"text":"impl Sync for EcPointRef","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for EcKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for EcKeyRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for EcdsaSig","synthetic":false,"types":[]},{"text":"impl Sync for EcdsaSigRef","synthetic":false,"types":[]},{"text":"impl Sync for Error","synthetic":false,"types":[]},{"text":"impl Sync for MessageDigest","synthetic":false,"types":[]},{"text":"impl Sync for Hasher","synthetic":false,"types":[]},{"text":"impl Sync for OcspBasicResponse","synthetic":false,"types":[]},{"text":"impl Sync for OcspBasicResponseRef","synthetic":false,"types":[]},{"text":"impl Sync for OcspCertId","synthetic":false,"types":[]},{"text":"impl Sync for OcspCertIdRef","synthetic":false,"types":[]},{"text":"impl Sync for OcspResponse","synthetic":false,"types":[]},{"text":"impl Sync for OcspResponseRef","synthetic":false,"types":[]},{"text":"impl Sync for OcspRequest","synthetic":false,"types":[]},{"text":"impl Sync for OcspRequestRef","synthetic":false,"types":[]},{"text":"impl Sync for OcspOneReq","synthetic":false,"types":[]},{"text":"impl Sync for OcspOneReqRef","synthetic":false,"types":[]},{"text":"impl Sync for Pkcs12","synthetic":false,"types":[]},{"text":"impl Sync for Pkcs12Ref","synthetic":false,"types":[]},{"text":"impl Sync for Pkcs7","synthetic":false,"types":[]},{"text":"impl Sync for Pkcs7Ref","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for PKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for PKeyRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Rsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for RsaRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for Signer&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for Verifier&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Sync for SrtpProtectionProfile","synthetic":false,"types":[]},{"text":"impl Sync for SrtpProtectionProfileRef","synthetic":false,"types":[]},{"text":"impl Sync for SslMethod","synthetic":false,"types":[]},{"text":"impl Sync for SslContext","synthetic":false,"types":[]},{"text":"impl Sync for SslContextRef","synthetic":false,"types":[]},{"text":"impl Sync for SslSession","synthetic":false,"types":[]},{"text":"impl Sync for SslSessionRef","synthetic":false,"types":[]},{"text":"impl Sync for Ssl","synthetic":false,"types":[]},{"text":"impl Sync for SslRef","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable + Sync&gt; Sync for Stack&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable + Sync&gt; Sync for StackRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for OpensslString","synthetic":false,"types":[]},{"text":"impl Sync for OpensslStringRef","synthetic":false,"types":[]},{"text":"impl Sync for Cipher","synthetic":false,"types":[]},{"text":"impl Sync for Crypter","synthetic":false,"types":[]},{"text":"impl Sync for X509VerifyParam","synthetic":false,"types":[]},{"text":"impl Sync for X509VerifyParamRef","synthetic":false,"types":[]},{"text":"impl Sync for X509StoreBuilder","synthetic":false,"types":[]},{"text":"impl Sync for X509StoreBuilderRef","synthetic":false,"types":[]},{"text":"impl Sync for X509Store","synthetic":false,"types":[]},{"text":"impl Sync for X509StoreRef","synthetic":false,"types":[]},{"text":"impl Sync for X509StoreContext","synthetic":false,"types":[]},{"text":"impl Sync for X509StoreContextRef","synthetic":false,"types":[]},{"text":"impl Sync for X509","synthetic":false,"types":[]},{"text":"impl Sync for X509Ref","synthetic":false,"types":[]},{"text":"impl Sync for X509Extension","synthetic":false,"types":[]},{"text":"impl Sync for X509ExtensionRef","synthetic":false,"types":[]},{"text":"impl Sync for X509Name","synthetic":false,"types":[]},{"text":"impl Sync for X509NameRef","synthetic":false,"types":[]},{"text":"impl Sync for X509NameEntry","synthetic":false,"types":[]},{"text":"impl Sync for X509NameEntryRef","synthetic":false,"types":[]},{"text":"impl Sync for X509Req","synthetic":false,"types":[]},{"text":"impl Sync for X509ReqRef","synthetic":false,"types":[]},{"text":"impl Sync for GeneralName","synthetic":false,"types":[]},{"text":"impl Sync for GeneralNameRef","synthetic":false,"types":[]},{"text":"impl Sync for X509Algorithm","synthetic":false,"types":[]},{"text":"impl Sync for X509AlgorithmRef","synthetic":false,"types":[]},{"text":"impl Sync for X509Object","synthetic":false,"types":[]},{"text":"impl Sync for X509ObjectRef","synthetic":false,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Sync for AES_KEY","synthetic":true,"types":[]},{"text":"impl !Sync for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl !Sync for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl !Sync for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl !Sync for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl !Sync for X509_VAL","synthetic":true,"types":[]},{"text":"impl !Sync for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_void","synthetic":true,"types":[]},{"text":"impl Sync for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Sync for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Sync for EC_POINT","synthetic":true,"types":[]},{"text":"impl Sync for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Sync for bio_st","synthetic":true,"types":[]},{"text":"impl Sync for BIO","synthetic":true,"types":[]},{"text":"impl Sync for BIGNUM","synthetic":true,"types":[]},{"text":"impl Sync for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Sync for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Sync for BN_CTX","synthetic":true,"types":[]},{"text":"impl Sync for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Sync for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Sync for EVP_MD","synthetic":true,"types":[]},{"text":"impl Sync for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Sync for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Sync for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Sync for DH","synthetic":true,"types":[]},{"text":"impl Sync for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for DSA","synthetic":true,"types":[]},{"text":"impl Sync for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for RSA","synthetic":true,"types":[]},{"text":"impl Sync for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EC_KEY","synthetic":true,"types":[]},{"text":"impl Sync for X509","synthetic":true,"types":[]},{"text":"impl Sync for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Sync for X509_CRL","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Sync for X509_NAME","synthetic":true,"types":[]},{"text":"impl Sync for X509_STORE","synthetic":true,"types":[]},{"text":"impl Sync for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Sync for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Sync for CONF","synthetic":true,"types":[]},{"text":"impl Sync for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Sync for ENGINE","synthetic":true,"types":[]},{"text":"impl Sync for SSL","synthetic":true,"types":[]},{"text":"impl Sync for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Sync for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS12","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Sync for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Sync for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Sync for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Sync for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Sync for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Sync for X509_REQ","synthetic":true,"types":[]},{"text":"impl Sync for X509_CINF","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Sync for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Sync for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Sync for Condvar","synthetic":true,"types":[]},{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Sync for Once","synthetic":true,"types":[]},{"text":"impl Sync for RawMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawRwLock","synthetic":true,"types":[]},{"text":"impl Sync for RawThreadId","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Sync for ParkToken","synthetic":true,"types":[]},{"text":"impl Sync for UnparkResult","synthetic":true,"types":[]},{"text":"impl Sync for UnparkToken","synthetic":true,"types":[]},{"text":"impl Sync for SpinWait","synthetic":true,"types":[]},{"text":"impl Sync for FilterOp","synthetic":true,"types":[]},{"text":"impl Sync for ParkResult","synthetic":true,"types":[]},{"text":"impl Sync for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Sync for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Sync for IsaacRng","synthetic":true,"types":[]},{"text":"impl Sync for Isaac64Rng","synthetic":true,"types":[]},{"text":"impl Sync for ChaChaRng","synthetic":true,"types":[]},{"text":"impl Sync for XorShiftRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, R&gt; Sync for Generator&lt;'a, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for AsciiGenerator&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Open01&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Closed01&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StdRng","synthetic":true,"types":[]},{"text":"impl !Sync for ThreadRng","synthetic":true,"types":[]},{"text":"impl&lt;Sup&gt; Sync for RandSample&lt;Sup&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Weighted&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for WeightedChoice&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for Range&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Gamma","synthetic":true,"types":[]},{"text":"impl Sync for ChiSquared","synthetic":true,"types":[]},{"text":"impl Sync for FisherF","synthetic":true,"types":[]},{"text":"impl Sync for StudentT","synthetic":true,"types":[]},{"text":"impl Sync for StandardNormal","synthetic":true,"types":[]},{"text":"impl Sync for Normal","synthetic":true,"types":[]},{"text":"impl Sync for LogNormal","synthetic":true,"types":[]},{"text":"impl Sync for Exp1","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for JitterRng","synthetic":true,"types":[]},{"text":"impl Sync for TimerError","synthetic":true,"types":[]},{"text":"impl Sync for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Sync for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ReseedWithDefault","synthetic":true,"types":[]}];
implementors["relay"] = [{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Waiting&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Canceled","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Sync for ScopedKey&lt;T&gt;","synthetic":false,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Sync for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Sync for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T, I&gt; Sync for Slab&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Sync for Entry&lt;'a, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Sync for VacantEntry&lt;'a, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Sync for Iter&lt;'a, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; !Sync for IterMut&lt;'a, T, I&gt;","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["take"] = [{"text":"impl&lt;T&gt; !Sync for Take&lt;T&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Sync for Duration","synthetic":true,"types":[]},{"text":"impl Sync for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Sync for Timespec","synthetic":true,"types":[]},{"text":"impl Sync for PreciseTime","synthetic":true,"types":[]},{"text":"impl Sync for SteadyTime","synthetic":true,"types":[]},{"text":"impl Sync for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for FrameTooBig","synthetic":true,"types":[]},{"text":"impl Sync for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Sync for Spawn","synthetic":true,"types":[]},{"text":"impl !Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Runtime","synthetic":true,"types":[]},{"text":"impl Sync for Shutdown","synthetic":true,"types":[]},{"text":"impl Sync for TaskExecutor","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl !Sync for Runtime","synthetic":true,"types":[]},{"text":"impl !Sync for Handle","synthetic":true,"types":[]}];
implementors["tokio_codec"] = [{"text":"impl Sync for BytesCodec","synthetic":true,"types":[]},{"text":"impl Sync for LinesCodec","synthetic":true,"types":[]}];
implementors["tokio_core"] = [{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for TcpStreamNew","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for Incoming","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Sync for UdpFramed&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Timeout","synthetic":true,"types":[]},{"text":"impl Sync for Interval","synthetic":true,"types":[]},{"text":"impl !Sync for Core","synthetic":true,"types":[]},{"text":"impl Sync for CoreId","synthetic":true,"types":[]},{"text":"impl Sync for Remote","synthetic":true,"types":[]},{"text":"impl !Sync for Handle","synthetic":true,"types":[]}];
implementors["tokio_current_thread"] = [{"text":"impl&lt;P&nbsp;=&nbsp;ParkThread&gt; !Sync for CurrentThread&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for TaskExecutor","synthetic":true,"types":[]},{"text":"impl Sync for Turn","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !Sync for Entered&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RunError","synthetic":true,"types":[]},{"text":"impl Sync for RunTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for TurnError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BlockError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for Handle","synthetic":true,"types":[]}];
implementors["tokio_executor"] = [{"text":"impl !Sync for Enter","synthetic":true,"types":[]},{"text":"impl Sync for EnterError","synthetic":true,"types":[]},{"text":"impl Sync for SpawnError","synthetic":true,"types":[]},{"text":"impl Sync for DefaultExecutor","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl !Sync for ParkThread","synthetic":true,"types":[]},{"text":"impl Sync for ParkError","synthetic":true,"types":[]},{"text":"impl Sync for UnparkThread","synthetic":true,"types":[]}];
implementors["tokio_fs"] = [{"text":"impl&lt;P&gt; Sync for CreateDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for CreateDirAllFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OpenOptions","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Sync for HardLinkFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for MetadataFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for ReadFile&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DirEntry","synthetic":true,"types":[]},{"text":"impl Sync for ReadDir","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for ReadDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for ReadLinkFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for RemoveDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for RemoveFileFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Sync for RenameFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for SetPermissionsFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Stderr","synthetic":true,"types":[]},{"text":"impl Sync for Stdin","synthetic":true,"types":[]},{"text":"impl Sync for Stdout","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for SymlinkMetadataFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, C&gt; Sync for WriteFile&lt;P, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CloneFuture","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for CreateFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for MetadataFuture","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for OpenFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SeekFuture","synthetic":true,"types":[]},{"text":"impl Sync for File","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Sync for SymlinkFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_io"] = [{"text":"impl&lt;R, W&gt; Sync for Copy&lt;R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Flush&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Sync for Read&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Sync for ReadExact&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for ReadToEnd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for ReadUntil&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Shutdown&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Sync for WriteAll&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Lines&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReadHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WriteHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_proto"] = [{"text":"impl&lt;Kind, P&gt; Sync for TcpClient&lt;Kind, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Kind: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Kind, P&gt; !Sync for Connect&lt;Kind, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Kind, P&gt; Sync for TcpServer&lt;Kind, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Kind: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; !Sync for ClientService&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Multiplex","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; !Sync for ClientService&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Body&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Message&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for StreamingPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Sync for Frame&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyIn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyOut: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Error: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::In: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Stream: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for StreamingMultiplex&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Sync for Frame&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Multiplex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Sync for MultiplexMessage&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S, E&gt; !Sync for ClientProxy&lt;R, S, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for Response&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_reactor"] = [{"text":"impl Sync for Background","synthetic":true,"types":[]},{"text":"impl Sync for Shutdown","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Reactor","synthetic":true,"types":[]},{"text":"impl Sync for Handle","synthetic":true,"types":[]},{"text":"impl Sync for Turn","synthetic":true,"types":[]},{"text":"impl Sync for SetFallbackError","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Sync for Registration","synthetic":false,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for UnboundedSendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedTrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UnboundedRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl Sync for Permit","synthetic":true,"types":[]},{"text":"impl Sync for AcquireError","synthetic":true,"types":[]},{"text":"impl Sync for TryAcquireError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Ref&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Lock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for LockGuard&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Sync for Semaphore","synthetic":false,"types":[]},{"text":"impl Sync for AtomicTask","synthetic":false,"types":[]}];
implementors["tokio_tcp"] = [{"text":"impl Sync for Incoming","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for ConnectFuture","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]}];
implementors["tokio_threadpool"] = [{"text":"impl Sync for BlockingError","synthetic":true,"types":[]},{"text":"impl !Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Sender","synthetic":true,"types":[]},{"text":"impl Sync for Shutdown","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for SpawnHandle&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ThreadPool","synthetic":true,"types":[]},{"text":"impl !Sync for Worker","synthetic":true,"types":[]},{"text":"impl Sync for WorkerId","synthetic":true,"types":[]},{"text":"impl !Sync for DefaultPark","synthetic":true,"types":[]},{"text":"impl Sync for DefaultUnpark","synthetic":true,"types":[]},{"text":"impl Sync for ParkError","synthetic":true,"types":[]}];
implementors["tokio_timer"] = [{"text":"impl Sync for Delay","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DelayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Clock","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ThrottleError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Sync for Handle","synthetic":true,"types":[]},{"text":"impl&lt;T, N&gt; Sync for Timer&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Turn","synthetic":true,"types":[]}];
implementors["tokio_udp"] = [{"text":"impl&lt;C&gt; Sync for UdpFramed&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]}];
implementors["tokio_uds"] = [{"text":"impl Sync for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Sync for UnixDatagramFramed&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Incoming","synthetic":true,"types":[]},{"text":"impl Sync for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for SendDgram&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ConnectFuture","synthetic":true,"types":[]},{"text":"impl Sync for UnixStream","synthetic":true,"types":[]},{"text":"impl Sync for UCred","synthetic":true,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;'a, T&gt; Sync for Locked&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for TryLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Sync for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Ascii&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["want"] = [{"text":"impl Sync for Giver","synthetic":true,"types":[]},{"text":"impl Sync for Taker","synthetic":true,"types":[]},{"text":"impl Sync for SharedGiver","synthetic":true,"types":[]},{"text":"impl Sync for Closed","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()