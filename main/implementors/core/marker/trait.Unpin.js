(function() {var implementors = {};
implementors["base64"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl Unpin for LineEnding","synthetic":true,"types":[]},{"text":"impl Unpin for LineWrap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayError","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for BytesMut","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Unpin for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stealer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Injector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Unpin for Atomic&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T, P&gt; Unpin for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Owned&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; Unpin for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Collector","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; Unpin for ArrayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SegQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Unpin for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Backoff","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for AtomicCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parker","synthetic":true,"types":[]},{"text":"impl Unpin for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for ShardedLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Unpin for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Unpin for ScopedThreadBuilder&lt;'scope, 'env&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'env: 'scope,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Unpin for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]}];
implementors["crypto_hash"] = [{"text":"impl Unpin for Hasher","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Unpin for FnvHasher","synthetic":true,"types":[]}];
implementors["foreign_types_shared"] = [{"text":"impl Unpin for Opaque","synthetic":true,"types":[]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Unpin for Async&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AsyncSink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Empty&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, R&gt; Unpin for Lazy&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for FutureResult&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Unpin for LoopFn&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Unpin for AndThen&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Flatten&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;A as Future&gt;::Item as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Fuse&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Join&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C&gt; Unpin for Join3&lt;A, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C, D&gt; Unpin for Join4&lt;A, B, C, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, C, D, E&gt; Unpin for Join5&lt;A, B, C, D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as Future&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Unpin for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Unpin for MapErr&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, E&gt; Unpin for FromErr&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Unpin for OrElse&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for SelectNext&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Select2&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Unpin for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Unpin for Inspect&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for CatchUnwind&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for JoinAll&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as IntoIterator&gt;::Item as IntoFuture&gt;::Future: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as IntoIterator&gt;::Item as IntoFuture&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SelectAll&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SelectOk&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Shared&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SharedItem&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SharedError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for ExecuteError&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Loop&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ExecuteErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for IterOk&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for IterResult&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Repeat&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Unpin for AndThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Unpin for Chain&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Concat&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Concat2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Empty&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for Filter&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for FilterMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Flatten&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; Unpin for Fold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Unpin for ForEach&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Unpin for FromErr&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Fuse&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for StreamFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for Inspect&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for InspectErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for Map&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for MapErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Unpin for Merge&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as Stream&gt;::Error: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Once&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Unpin for OrElse&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Peekable&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Unpin for Select&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Skip&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P, R&gt; Unpin for SkipWhile&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Take&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P, R&gt; Unpin for TakeWhile&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as IntoFuture&gt;::Future: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Unpin for Then&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Unpin for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Unpin for Zip&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S1 as Stream&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Forward&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Buffered&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as Stream&gt;::Item as IntoFuture&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BufferUnordered&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for CatchUnwind&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Chunks&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Collect&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SplitSink&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I1, I2&gt; Unpin for MergedItem&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for FuturesUnordered&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; Unpin for IterMut&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Buffer&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, U, F, Fut&gt; Unpin for With&lt;S, U, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoFuture&gt;::Future: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, U, F, St&gt; Unpin for WithFlatMap&lt;S, U, F, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Flush&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Send&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Sink&gt;::SinkItem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for SendAll&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Unpin for SinkMapErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Unpin for SinkFromErr&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Fanout&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Sink&gt;::SinkItem: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Sink&gt;::SinkItem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Spawn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NotifyHandle","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicTask","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkEvent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BiLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for BiLockGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BiLockAcquire&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BiLockAcquired&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for SpawnHandle&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Execute&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Item, Error&gt; Unpin for SpawnHandle&lt;Item, Error&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Execute&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Item, Error&gt; Unpin for SpawnHandle&lt;Item, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Execute&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for SpawnHandle&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Execute&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["futures_cpupool"] = [{"text":"impl Unpin for CpuPool","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for CpuFuture&lt;T, E&gt;","synthetic":true,"types":[]}];
implementors["guardhaus"] = [{"text":"impl Unpin for AuthenticationInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Username","synthetic":true,"types":[]},{"text":"impl Unpin for NonceCount","synthetic":true,"types":[]},{"text":"impl Unpin for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Qop","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Unpin for FromHexError","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Unpin for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Request&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Response&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Header&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl Unpin for Uri","synthetic":true,"types":[]},{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Chunk","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Request&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Response&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for HttpVersion","synthetic":true,"types":[]},{"text":"impl Unpin for HttpConnector","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Unpin for Client&lt;C, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FutureResponse","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Unpin for Config&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UseDefaultConnector","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Stream&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Handshake&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UriError","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for EntityTag","synthetic":true,"types":[]},{"text":"impl Unpin for HttpDate","synthetic":true,"types":[]},{"text":"impl Unpin for Quality","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for QualityItem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptCharset","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptRanges","synthetic":true,"types":[]},{"text":"impl Unpin for Accept","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowMethods","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlExposeHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlMaxAge","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlRequestHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlRequestMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Allow","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Authorization&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Basic","synthetic":true,"types":[]},{"text":"impl Unpin for Bearer","synthetic":true,"types":[]},{"text":"impl Unpin for CacheControl","synthetic":true,"types":[]},{"text":"impl Unpin for Connection","synthetic":true,"types":[]},{"text":"impl Unpin for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Unpin for ContentEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ContentLanguage","synthetic":true,"types":[]},{"text":"impl Unpin for ContentLength","synthetic":true,"types":[]},{"text":"impl Unpin for ContentLocation","synthetic":true,"types":[]},{"text":"impl Unpin for ContentRange","synthetic":true,"types":[]},{"text":"impl Unpin for ContentType","synthetic":true,"types":[]},{"text":"impl Unpin for Cookie","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CookieIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for ETag","synthetic":true,"types":[]},{"text":"impl Unpin for Expires","synthetic":true,"types":[]},{"text":"impl Unpin for From","synthetic":true,"types":[]},{"text":"impl Unpin for Host","synthetic":true,"types":[]},{"text":"impl Unpin for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl Unpin for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl Unpin for LastEventId","synthetic":true,"types":[]},{"text":"impl Unpin for LastModified","synthetic":true,"types":[]},{"text":"impl Unpin for Link","synthetic":true,"types":[]},{"text":"impl Unpin for LinkValue","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for Prefer","synthetic":true,"types":[]},{"text":"impl Unpin for PreferenceApplied","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ProxyAuthorization&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Referer","synthetic":true,"types":[]},{"text":"impl Unpin for Server","synthetic":true,"types":[]},{"text":"impl Unpin for SetCookie","synthetic":true,"types":[]},{"text":"impl Unpin for StrictTransportSecurity","synthetic":true,"types":[]},{"text":"impl Unpin for Te","synthetic":true,"types":[]},{"text":"impl Unpin for TransferEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Upgrade","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]},{"text":"impl Unpin for UserAgent","synthetic":true,"types":[]},{"text":"impl Unpin for Warning","synthetic":true,"types":[]},{"text":"impl Unpin for Raw","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Formatter&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Headers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HeadersItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HeaderView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Charset","synthetic":true,"types":[]},{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for RangeUnit","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowOrigin","synthetic":true,"types":[]},{"text":"impl Unpin for CacheDirective","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionOption","synthetic":true,"types":[]},{"text":"impl Unpin for DispositionType","synthetic":true,"types":[]},{"text":"impl Unpin for DispositionParam","synthetic":true,"types":[]},{"text":"impl Unpin for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for Expect","synthetic":true,"types":[]},{"text":"impl Unpin for IfMatch","synthetic":true,"types":[]},{"text":"impl Unpin for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl Unpin for IfRange","synthetic":true,"types":[]},{"text":"impl Unpin for RelationType","synthetic":true,"types":[]},{"text":"impl Unpin for MediaDesc","synthetic":true,"types":[]},{"text":"impl Unpin for Pragma","synthetic":true,"types":[]},{"text":"impl Unpin for Preference","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl Unpin for ByteRangeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for ReferrerPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for RetryAfter","synthetic":true,"types":[]},{"text":"impl Unpin for ProtocolName","synthetic":true,"types":[]},{"text":"impl Unpin for Vary","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedValue","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Http&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; Unpin for Server&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; Unpin for Serve&lt;I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AddrIncoming","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; Unpin for Connection&lt;I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&gt;::Future: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as HyperService&gt;::ResponseBody as Stream&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as HyperService&gt;::ResponseBody: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Parts&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Unpin for IoVec","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl Unpin for LanguageTag","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Unpin for GuardSend","synthetic":true,"types":[]},{"text":"impl Unpin for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for Mutex&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutex&lt;R, G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for RwLock&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Unpin for LogRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LogMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LogLocation","synthetic":true,"types":[]},{"text":"impl Unpin for MaxLogLevelFilter","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevel","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevelFilter","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Unpin for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Unpin for Poll","synthetic":true,"types":[]},{"text":"impl Unpin for Registration","synthetic":true,"types":[]},{"text":"impl Unpin for SetReadiness","synthetic":true,"types":[]},{"text":"impl Unpin for PollOpt","synthetic":true,"types":[]},{"text":"impl Unpin for Ready","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]},{"text":"impl Unpin for Events","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnixReady","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_uds"] = [{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl Unpin for TcpBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for UdpBuilder","synthetic":true,"types":[]}];
implementors["openssl"] = [{"text":"impl Unpin for KeyError","synthetic":true,"types":[]},{"text":"impl Unpin for AesKey","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTime","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for TimeDiff","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Time","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1TimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1String","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1StringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Integer","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1IntegerRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitString","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Object","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for MsbOption","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContext","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for BigNum","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumRef","synthetic":true,"types":[]},{"text":"impl Unpin for CMSOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfoRef","synthetic":true,"types":[]},{"text":"impl Unpin for ConfMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Conf","synthetic":true,"types":[]},{"text":"impl Unpin for ConfRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deriver&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dh&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DhRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PointConversionForm","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Flag","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroup","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroupRef","synthetic":true,"types":[]},{"text":"impl Unpin for EcPoint","synthetic":true,"types":[]},{"text":"impl Unpin for EcPointRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSig","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSigRef","synthetic":true,"types":[]},{"text":"impl Unpin for Seal","synthetic":true,"types":[]},{"text":"impl Unpin for Open","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorStack","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Index&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDigest","synthetic":true,"types":[]},{"text":"impl Unpin for Hasher","synthetic":true,"types":[]},{"text":"impl Unpin for DigestBytes","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureAlgorithms","synthetic":true,"types":[]},{"text":"impl Unpin for Nid","synthetic":true,"types":[]},{"text":"impl Unpin for OcspFlag","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRevokedStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OcspStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertId","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertIdRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequest","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequestRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReq","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Ref","synthetic":true,"types":[]},{"text":"impl Unpin for ParsedPkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Builder","synthetic":true,"types":[]},{"text":"impl Unpin for KeyIvPair","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Params","synthetic":true,"types":[]},{"text":"impl Unpin for Public","synthetic":true,"types":[]},{"text":"impl Unpin for Private","synthetic":true,"types":[]},{"text":"impl Unpin for Padding","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPrivateKeyBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Sha1","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPssSaltlen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Signer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Verifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfile","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfileRef","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProfileId","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptor","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnector","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for SslOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SslMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslMethod","synthetic":true,"types":[]},{"text":"impl Unpin for SslVerifyMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionCacheMode","synthetic":true,"types":[]},{"text":"impl Unpin for ExtensionContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslFiletype","synthetic":true,"types":[]},{"text":"impl Unpin for StatusType","synthetic":true,"types":[]},{"text":"impl Unpin for NameType","synthetic":true,"types":[]},{"text":"impl Unpin for SniError","synthetic":true,"types":[]},{"text":"impl Unpin for SslAlert","synthetic":true,"types":[]},{"text":"impl Unpin for AlpnError","synthetic":true,"types":[]},{"text":"impl Unpin for ClientHelloResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SslVersion","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for SslContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for CipherBits","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipher","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipherRef","synthetic":true,"types":[]},{"text":"impl Unpin for SslSession","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionRef","synthetic":true,"types":[]},{"text":"impl Unpin for Ssl","synthetic":true,"types":[]},{"text":"impl Unpin for SslRef","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MidHandshakeSslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStreamBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stack&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StackRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslString","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Cipher","synthetic":true,"types":[]},{"text":"impl Unpin for Crypter","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContext","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Builder","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509Ref","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509v3Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509Extension","synthetic":true,"types":[]},{"text":"impl Unpin for X509ExtensionRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Name","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509NameEntries&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntry","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntryRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Req","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyResult","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralName","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralNameRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for X509AlgorithmRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Object","synthetic":true,"types":[]},{"text":"impl Unpin for X509ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509CheckFlags","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParam","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParamRef","synthetic":true,"types":[]},{"text":"impl Unpin for BasicConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for KeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedKeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for AuthorityKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectAlternativeName","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilderRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Store","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreRef","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Unpin for AES_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl Unpin for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VAL","synthetic":true,"types":[]},{"text":"impl Unpin for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_void","synthetic":true,"types":[]},{"text":"impl Unpin for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Unpin for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Unpin for EC_POINT","synthetic":true,"types":[]},{"text":"impl Unpin for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for bio_st","synthetic":true,"types":[]},{"text":"impl Unpin for BIO","synthetic":true,"types":[]},{"text":"impl Unpin for BIGNUM","synthetic":true,"types":[]},{"text":"impl Unpin for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Unpin for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for DH","synthetic":true,"types":[]},{"text":"impl Unpin for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for DSA","synthetic":true,"types":[]},{"text":"impl Unpin for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for RSA","synthetic":true,"types":[]},{"text":"impl Unpin for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Unpin for CONF","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for ENGINE","synthetic":true,"types":[]},{"text":"impl Unpin for SSL","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS12","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CINF","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for RawMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawRwLock","synthetic":true,"types":[]},{"text":"impl Unpin for RawThreadId","synthetic":true,"types":[]},{"text":"impl Unpin for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Unpin for ParkToken","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkResult","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkToken","synthetic":true,"types":[]},{"text":"impl Unpin for SpinWait","synthetic":true,"types":[]},{"text":"impl Unpin for FilterOp","synthetic":true,"types":[]},{"text":"impl Unpin for ParkResult","synthetic":true,"types":[]},{"text":"impl Unpin for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Unpin for IsaacRng","synthetic":true,"types":[]},{"text":"impl Unpin for Isaac64Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaChaRng","synthetic":true,"types":[]},{"text":"impl Unpin for XorShiftRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, R&gt; Unpin for Generator&lt;'a, T, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for AsciiGenerator&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Open01&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Closed01&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StdRng","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadRng","synthetic":true,"types":[]},{"text":"impl&lt;Sup&gt; Unpin for RandSample&lt;Sup&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Weighted&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for WeightedChoice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for Range&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Gamma","synthetic":true,"types":[]},{"text":"impl Unpin for ChiSquared","synthetic":true,"types":[]},{"text":"impl Unpin for FisherF","synthetic":true,"types":[]},{"text":"impl Unpin for StudentT","synthetic":true,"types":[]},{"text":"impl Unpin for StandardNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Normal","synthetic":true,"types":[]},{"text":"impl Unpin for LogNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Exp1","synthetic":true,"types":[]},{"text":"impl Unpin for Exp","synthetic":true,"types":[]},{"text":"impl Unpin for JitterRng","synthetic":true,"types":[]},{"text":"impl Unpin for TimerError","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Unpin for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReseedWithDefault","synthetic":true,"types":[]}];
implementors["relay"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Waiting&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Unpin for ScopedKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Unpin for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Always","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T, I&gt; Unpin for Slab&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Unpin for Entry&lt;'a, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Unpin for VacantEntry&lt;'a, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Unpin for Iter&lt;'a, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Unpin for IterMut&lt;'a, T, I&gt;","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["take"] = [{"text":"impl&lt;T&gt; Unpin for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Unpin for Timespec","synthetic":true,"types":[]},{"text":"impl Unpin for PreciseTime","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTime","synthetic":true,"types":[]},{"text":"impl Unpin for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for FrameTooBig","synthetic":true,"types":[]},{"text":"impl Unpin for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Unpin for Spawn","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl Unpin for TaskExecutor","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["tokio_codec"] = [{"text":"impl Unpin for BytesCodec","synthetic":true,"types":[]},{"text":"impl Unpin for LinesCodec","synthetic":true,"types":[]}];
implementors["tokio_core"] = [{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStreamNew","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for Incoming","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for UdpFramed&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Timeout","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl Unpin for Core","synthetic":true,"types":[]},{"text":"impl Unpin for CoreId","synthetic":true,"types":[]},{"text":"impl Unpin for Remote","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["tokio_current_thread"] = [{"text":"impl&lt;P&gt; Unpin for CurrentThread&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TaskExecutor","synthetic":true,"types":[]},{"text":"impl Unpin for Turn","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for Entered&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RunError","synthetic":true,"types":[]},{"text":"impl Unpin for RunTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for TurnError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BlockError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["tokio_executor"] = [{"text":"impl Unpin for Enter","synthetic":true,"types":[]},{"text":"impl Unpin for EnterError","synthetic":true,"types":[]},{"text":"impl Unpin for SpawnError","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultExecutor","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Unpin for ParkThread","synthetic":true,"types":[]},{"text":"impl Unpin for ParkError","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkThread","synthetic":true,"types":[]}];
implementors["tokio_fs"] = [{"text":"impl&lt;P&gt; Unpin for CreateDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for CreateDirAllFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OpenOptions","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Unpin for HardLinkFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for MetadataFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for ReadFile&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ReadDir","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for ReadDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for ReadLinkFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for RemoveDirFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for RemoveFileFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Unpin for RenameFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for SetPermissionsFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Stderr","synthetic":true,"types":[]},{"text":"impl Unpin for Stdin","synthetic":true,"types":[]},{"text":"impl Unpin for Stdout","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for SymlinkMetadataFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, C&gt; Unpin for WriteFile&lt;P, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CloneFuture","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for CreateFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataFuture","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for OpenFuture&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SeekFuture","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl&lt;P, Q&gt; Unpin for SymlinkFuture&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_io"] = [{"text":"impl&lt;R, W&gt; Unpin for Copy&lt;R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Flush&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Unpin for Read&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Unpin for ReadExact&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ReadToEnd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ReadUntil&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Shutdown&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Unpin for WriteAll&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Lines&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_proto"] = [{"text":"impl&lt;Kind, P&gt; Unpin for TcpClient&lt;Kind, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Kind: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Kind, P&gt; Unpin for Connect&lt;Kind, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Kind: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Kind, P&gt; Unpin for TcpServer&lt;Kind, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Kind: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for ClientService&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Multiplex","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for ClientService&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Body&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Message&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for StreamingPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Unpin for Frame&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyIn: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyOut: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::In: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Stream: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for StreamingMultiplex&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Unpin for Frame&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Multiplex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyIn: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::BodyOut: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::In: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Out: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Dispatch&gt;::Stream: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B, E&gt; Unpin for MultiplexMessage&lt;T, B, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S, E&gt; Unpin for ClientProxy&lt;R, S, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Response&lt;T, E&gt;","synthetic":true,"types":[]}];
implementors["tokio_reactor"] = [{"text":"impl Unpin for Background","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Registration","synthetic":true,"types":[]},{"text":"impl Unpin for Reactor","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl Unpin for Turn","synthetic":true,"types":[]},{"text":"impl Unpin for SetFallbackError","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Unpin for Lock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LockGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for UnboundedSendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedTrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UnboundedRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl Unpin for Semaphore","synthetic":true,"types":[]},{"text":"impl Unpin for Permit","synthetic":true,"types":[]},{"text":"impl Unpin for AcquireError","synthetic":true,"types":[]},{"text":"impl Unpin for TryAcquireError","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicTask","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_tcp"] = [{"text":"impl Unpin for Incoming","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectFuture","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]}];
implementors["tokio_threadpool"] = [{"text":"impl Unpin for BlockingError","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Sender","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for SpawnHandle&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for Worker","synthetic":true,"types":[]},{"text":"impl Unpin for WorkerId","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultPark","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultUnpark","synthetic":true,"types":[]},{"text":"impl Unpin for ParkError","synthetic":true,"types":[]}];
implementors["tokio_timer"] = [{"text":"impl Unpin for Delay","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DelayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Clock","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThrottleError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl&lt;T, N&gt; Unpin for Timer&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Turn","synthetic":true,"types":[]}];
implementors["tokio_udp"] = [{"text":"impl&lt;C&gt; Unpin for UdpFramed&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]}];
implementors["tokio_uds"] = [{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Unpin for UnixDatagramFramed&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Incoming","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RecvDgram&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for SendDgram&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectFuture","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]},{"text":"impl Unpin for UCred","synthetic":true,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; Unpin for TryLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Locked&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Unpin for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Ascii&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["want"] = [{"text":"impl Unpin for Giver","synthetic":true,"types":[]},{"text":"impl Unpin for Taker","synthetic":true,"types":[]},{"text":"impl Unpin for SharedGiver","synthetic":true,"types":[]},{"text":"impl Unpin for Closed","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()