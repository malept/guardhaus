(function() {var implementors = {};
implementors["bytes"] = [{"text":"impl Deref for Bytes","synthetic":false,"types":[]},{"text":"impl Deref for BytesMut","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Deref for Owned&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Deref for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Deref for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Deref for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Deref for SharedItem&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Deref for SharedError&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Deref for BiLockGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for BiLockAcquired&lt;T&gt;","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Deref for AcceptCharset","synthetic":false,"types":[]},{"text":"impl Deref for AcceptEncoding","synthetic":false,"types":[]},{"text":"impl Deref for AcceptLanguage","synthetic":false,"types":[]},{"text":"impl Deref for AcceptRanges","synthetic":false,"types":[]},{"text":"impl Deref for Accept","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlAllowHeaders","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlAllowMethods","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlExposeHeaders","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlMaxAge","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlRequestHeaders","synthetic":false,"types":[]},{"text":"impl Deref for AccessControlRequestMethod","synthetic":false,"types":[]},{"text":"impl Deref for Allow","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Scheme&gt; Deref for Authorization&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Deref for CacheControl","synthetic":false,"types":[]},{"text":"impl Deref for Connection","synthetic":false,"types":[]},{"text":"impl Deref for ContentEncoding","synthetic":false,"types":[]},{"text":"impl Deref for ContentLanguage","synthetic":false,"types":[]},{"text":"impl Deref for ContentLength","synthetic":false,"types":[]},{"text":"impl Deref for ContentLocation","synthetic":false,"types":[]},{"text":"impl Deref for ContentRange","synthetic":false,"types":[]},{"text":"impl Deref for ContentType","synthetic":false,"types":[]},{"text":"impl Deref for Date","synthetic":false,"types":[]},{"text":"impl Deref for ETag","synthetic":false,"types":[]},{"text":"impl Deref for Expires","synthetic":false,"types":[]},{"text":"impl Deref for From","synthetic":false,"types":[]},{"text":"impl Deref for IfModifiedSince","synthetic":false,"types":[]},{"text":"impl Deref for IfUnmodifiedSince","synthetic":false,"types":[]},{"text":"impl Deref for LastEventId","synthetic":false,"types":[]},{"text":"impl Deref for LastModified","synthetic":false,"types":[]},{"text":"impl Deref for Location","synthetic":false,"types":[]},{"text":"impl Deref for Prefer","synthetic":false,"types":[]},{"text":"impl Deref for PreferenceApplied","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Scheme&gt; Deref for ProxyAuthorization&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Deref for Referer","synthetic":false,"types":[]},{"text":"impl Deref for Server","synthetic":false,"types":[]},{"text":"impl Deref for SetCookie","synthetic":false,"types":[]},{"text":"impl Deref for Te","synthetic":false,"types":[]},{"text":"impl Deref for TransferEncoding","synthetic":false,"types":[]},{"text":"impl Deref for Upgrade","synthetic":false,"types":[]},{"text":"impl Deref for UserAgent","synthetic":false,"types":[]},{"text":"impl Deref for Chunk","synthetic":false,"types":[]}];
implementors["iovec"] = [{"text":"impl Deref for IoVec","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Deref for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Deref for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, G:&nbsp;GetThreadId + 'a, T:&nbsp;?Sized + 'a&gt; Deref for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, G:&nbsp;GetThreadId + 'a, T:&nbsp;?Sized + 'a&gt; Deref for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Deref for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Deref for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + 'a&gt; Deref for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Deref for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Deref for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Deref for UnixReady","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl Deref for Asn1GeneralizedTime","synthetic":false,"types":[]},{"text":"impl Deref for Asn1Time","synthetic":false,"types":[]},{"text":"impl Deref for Asn1String","synthetic":false,"types":[]},{"text":"impl Deref for Asn1Integer","synthetic":false,"types":[]},{"text":"impl Deref for Asn1BitString","synthetic":false,"types":[]},{"text":"impl Deref for Asn1Object","synthetic":false,"types":[]},{"text":"impl Deref for BigNumContext","synthetic":false,"types":[]},{"text":"impl Deref for BigNum","synthetic":false,"types":[]},{"text":"impl Deref for CmsContentInfo","synthetic":false,"types":[]},{"text":"impl Deref for Conf","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for Dh&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for Dsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Deref for EcGroup","synthetic":false,"types":[]},{"text":"impl Deref for EcPoint","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for EcKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Deref for EcdsaSig","synthetic":false,"types":[]},{"text":"impl Deref for DigestBytes","synthetic":false,"types":[]},{"text":"impl Deref for OcspBasicResponse","synthetic":false,"types":[]},{"text":"impl Deref for OcspCertId","synthetic":false,"types":[]},{"text":"impl Deref for OcspResponse","synthetic":false,"types":[]},{"text":"impl Deref for OcspRequest","synthetic":false,"types":[]},{"text":"impl Deref for OcspOneReq","synthetic":false,"types":[]},{"text":"impl Deref for Pkcs12","synthetic":false,"types":[]},{"text":"impl Deref for Pkcs7","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for PKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for Rsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Deref for SrtpProtectionProfile","synthetic":false,"types":[]},{"text":"impl Deref for SslConnectorBuilder","synthetic":false,"types":[]},{"text":"impl Deref for ConnectConfiguration","synthetic":false,"types":[]},{"text":"impl Deref for SslAcceptorBuilder","synthetic":false,"types":[]},{"text":"impl Deref for SslContext","synthetic":false,"types":[]},{"text":"impl Deref for SslCipher","synthetic":false,"types":[]},{"text":"impl Deref for SslSession","synthetic":false,"types":[]},{"text":"impl Deref for Ssl","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable&gt; Deref for Stack&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Deref for OpensslString","synthetic":false,"types":[]},{"text":"impl Deref for OpensslStringRef","synthetic":false,"types":[]},{"text":"impl Deref for X509VerifyParam","synthetic":false,"types":[]},{"text":"impl Deref for X509StoreBuilder","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for X509Lookup&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Deref for X509LookupMethod&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Deref for X509Store","synthetic":false,"types":[]},{"text":"impl Deref for X509StoreContext","synthetic":false,"types":[]},{"text":"impl Deref for X509","synthetic":false,"types":[]},{"text":"impl Deref for X509Extension","synthetic":false,"types":[]},{"text":"impl Deref for X509Name","synthetic":false,"types":[]},{"text":"impl Deref for X509NameEntry","synthetic":false,"types":[]},{"text":"impl Deref for X509Req","synthetic":false,"types":[]},{"text":"impl Deref for GeneralName","synthetic":false,"types":[]},{"text":"impl Deref for X509Algorithm","synthetic":false,"types":[]},{"text":"impl Deref for X509Object","synthetic":false,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Deref for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Deref for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["tokio_proto"] = [{"text":"impl&lt;T, B&gt; Deref for Message&lt;T, B&gt;","synthetic":false,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Deref for LockGuard&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; Deref for Ref&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;'a, T&gt; Deref for Locked&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Deref for Ascii&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Deref for UniCase&lt;S&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()