var searchIndex = {};
searchIndex["base64"] = {"doc":"","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",0,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",0,null],[4,"LineEnding","","",null,null],[13,"LF","","",1,null],[13,"CRLF","","",1,null],[4,"LineWrap","","",null,null],[13,"NoWrap","","",2,null],[13,"Wrap","","",2,null],[4,"DecodeError","","",null,null],[13,"InvalidByte","","",3,null],[13,"InvalidLength","","",3,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String. Convenience for `encode_config(input, base64::STANDARD);`.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"decode","","Decode from string reference as octets. Returns a Result containing a Vec. Convenience `decode_config(input, base64::STANDARD);`.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,{"inputs":[{"name":"t"},{"name":"config"}],"output":{"name":"string"}}],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the supplied buffer to avoid allocations.",null,{"inputs":[{"name":"t"},{"name":"config"},{"name":"string"}],"output":null}],[5,"decode_config","","Decode from string reference as octets. Returns a Result containing a Vec.",null,{"inputs":[{"name":"t"},{"name":"config"}],"output":{"name":"result"}}],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the supplied buffer to avoid allocation. Returns a Result containing an empty tuple, aka ().",null,{"inputs":[{"name":"t"},{"name":"config"},{"name":"vec"}],"output":{"name":"result"}}],[7,"STANDARD","","",null,null],[7,"MIME","","",null,null],[7,"URL_SAFE","","",null,null],[7,"URL_SAFE_NO_PAD","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"characterset"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"lineending"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"linewrap"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[{"name":"characterset"},{"name":"bool"},{"name":"bool"},{"name":"linewrap"}],"output":{"name":"config"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DecodeError"],[3,"Config"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"inputs":[{"name":"u32"}],"output":{"name":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"inputs":[{"name":"self"},{"name":"flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"option"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigendian"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"option"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",0,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a continuous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",null,null],[3,"Iter","","Iterator over the bytes contained by the buffer.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner value.",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an underlying buffer.",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the inner value.",null,null],[11,"from_buf","bytes","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_buf","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","bytes::buf","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Chain` sequencing the provided values.",3,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"chain"}}],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"u"}}],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"u"}}],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",3,null],[11,"remaining","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes","","",3,null],[11,"advance","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_vec","","",3,null],[11,"remaining_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes_mut","","",3,null],[11,"advance_mut","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_vec_mut","","",3,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"read","","",5,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"limit","","Returns the maximum number of bytes that can be read.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit","","Sets the maximum number of bytes that can be read.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"remaining","","",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes","","",6,null],[11,"advance","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","","Advance the internal cursor of the Buf",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[8,"BufMut","","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}],[8,"FromBuf","","Conversion from a [`Buf`]",null,null],[10,"from_buf","","Creates a value from a buffer.",10,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"IntoBuf","","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"new","bytes","Creates a new empty `Bytes`",1,{"inputs":[],"output":{"name":"bytes"}}],[11,"from_static","","Creates a new `Bytes` from a static slice.",1,null],[11,"len","","Returns the number of bytes contained in this `Bytes`.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"slice_from","","Returns a slice of self for the index range `[begin..self.len())`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"split_to","","Splits the bytes into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clear","","Clears the buffer, removing all data.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"try_mut","","Attempt to convert into a `BytesMut` handle.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"extend_from_slice","","Append given bytes to this object.",1,null],[11,"into_buf","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"as_ref","","",1,null],[11,"deref","","",1,null],[11,"from","","",1,{"inputs":[{"name":"bytesmut"}],"output":{"name":"bytes"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"bytes"}}],[11,"from","","",1,null],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"bytes"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"ordering"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"bytes"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"borrow","","",1,null],[11,"into_iter","","",1,null],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"with_capacity","","Create a new `BytesMut` with the specified capacity.",2,{"inputs":[{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"new","","Create a new `BytesMut` with default capacity.",2,{"inputs":[],"output":{"name":"bytesmut"}}],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold without reallocating.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"freeze","","Convert `self` into an immutable `Bytes`",2,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"take","","Remove the bytes from the current view, returning them in a new `BytesMut` handle.",2,{"inputs":[{"name":"self"}],"output":{"name":"bytesmut"}}],[11,"split_to","","Splits the buffer into two at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clear","","Clears the buffer, removing all data.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"set_len","","Sets the length of the buffer",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted into the given `BytesMut`.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"extend_from_slice","","Append given bytes to this object.",2,null],[11,"remaining_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"advance_mut","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_mut","","",2,null],[11,"put_slice","","",2,null],[11,"put_u8","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","",2,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"into_buf","","",2,null],[11,"as_ref","","",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"from","","",2,{"inputs":[{"name":"vec"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,{"inputs":[{"name":"bytes"}],"output":{"name":"bytesmut"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"ordering"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"bytesmut"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"borrow","","",2,null],[11,"write_str","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","",2,{"inputs":[{"name":"self"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bytesmut"}}],[11,"into_iter","","",2,null],[11,"extend","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"extend","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","bytes","Advance the internal cursor of the Buf",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[8,"BufMut","bytes","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}],[8,"IntoBuf","bytes","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"bigendian"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"littleendian"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"hash","","",13,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"option"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"option"}}],[11,"read_u16","","",12,null],[11,"read_u32","","",12,null],[11,"read_u64","","",12,null],[11,"read_uint","","",12,null],[11,"write_u16","","",12,null],[11,"write_u32","","",12,null],[11,"write_u64","","",12,null],[11,"write_uint","","",12,null],[11,"read_u16","","",13,null],[11,"read_u32","","",13,null],[11,"read_u64","","",13,null],[11,"read_uint","","",13,null],[11,"write_u16","","",13,null],[11,"write_u32","","",13,null],[11,"write_u64","","",13,null],[11,"write_uint","","",13,null],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}]],"paths":[[8,"ByteOrder"],[3,"Bytes"],[3,"BytesMut"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["crypto_hash"] = {"doc":"A set of cryptographic hash functions provided by the operating system, when available.","items":[[3,"Hasher","crypto_hash","Generator of digests using a cryptographic hash function.",null,null],[4,"Algorithm","","Available cryptographic hash functions.",null,null],[13,"MD5","","Popular message digest algorithm, only available for backwards compatibility purposes.",0,null],[13,"SHA1","","SHA-1 algorithm from NIST FIPS, only available for backwards compatibility purposes.",0,null],[13,"SHA256","","SHA-2 family algorithm (256 bits).",0,null],[13,"SHA512","","SHA-2 family algorithm (512 bits).",0,null],[5,"digest","","Helper function for `Hasher` which generates a cryptographic digest from the given data and algorithm.",null,null],[5,"hex_digest","","Helper function for `Hasher` which generates a cryptographic digest serialized in hexadecimal from the given data and algorithm.",null,null],[11,"new","","Create a new `Hasher` for the given `Algorithm`.",1,{"inputs":[{"name":"algorithm"}],"output":{"name":"hasher"}}],[11,"finish","","Generate a digest from the data written to the `Hasher`.",1,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"algorithm"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Algorithm"],[3,"Hasher"]]};
searchIndex["foreign_types"] = {"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,null],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,null],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",null,null]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success type of this `Async` value with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"asyncsink"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `merge` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to succesfully complete. unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use Future::shared() method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is clonable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is clonable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","Splits out the homogenous type from an either of tuples.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",32,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[6,"BoxFuture","","A type alias for `Box<Future + Send>`",null,null],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",34,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",34,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",34,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",34,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"boxed","","Convenience function for turning this future into a trait object which is also `Send`.",34,{"inputs":[{"name":"self"}],"output":{"name":"boxfuture"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",34,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",34,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",34,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",34,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",34,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",34,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",34,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",34,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",34,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",34,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",34,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",34,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",34,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",35,null],[16,"Item","","The item that the future may resolve with.",35,null],[16,"Error","","The error that the future may resolve with.",35,null],[10,"into_future","","Consumes this object and produces a future.",35,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",36,null],[16,"Error","","Possible errors during conversion.",36,null],[10,"future_from","","Consume the given value, beginning the conversion.",36,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"executeerrorkind"}],"output":{"name":"bool"}}],[11,"new","","Create a new `ExecuteError`",38,{"inputs":[{"name":"executeerrorkind"},{"name":"f"}],"output":{"name":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",38,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",38,{"inputs":[{"name":"self"}],"output":{"name":"f"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"FuturesUnordered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",39,null],[13,"Second","","An item from the second stream",39,null],[13,"Both","","Items from both streams",39,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iter"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",40,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",41,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",42,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",42,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",42,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",42,null],[11,"poll_complete","","",42,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",42,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",46,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",47,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",47,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",47,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",47,null],[11,"poll_complete","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",48,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",48,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",48,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",48,null],[11,"poll_complete","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",49,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",49,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",49,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",49,null],[11,"poll_complete","","",49,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",49,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",49,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",53,null],[11,"poll_complete","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",54,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",55,null],[11,"poll_complete","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",61,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",62,null],[11,"poll_complete","","",62,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",62,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",62,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",63,null],[11,"poll_complete","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",64,null],[11,"poll_complete","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",65,null],[11,"poll_complete","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",66,null],[11,"poll_complete","","",66,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",66,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",66,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",67,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",72,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",73,null],[11,"poll_complete","","",73,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",73,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",73,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",73,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",73,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",73,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",74,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"next","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",77,null],[11,"poll_complete","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Constructs a new, empty `FuturesUnordered`",78,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained by the queue.",78,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",78,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",78,{"inputs":[{"name":"self"}],"output":null}],[6,"BoxStream","","A type alias for `Box<Stream + Send>`",null,null],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",79,null],[16,"Error","","The type of error this stream may generate.",79,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",79,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",79,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"boxed","","Convenience function for turning this stream into a trait object.",79,{"inputs":[{"name":"self"}],"output":{"name":"boxstream"}}],[11,"into_future","","Converts this stream into a `Future`.",79,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",79,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",79,{"inputs":[{"name":"self"}],"output":{"name":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",79,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",79,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",79,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",79,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",79,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",79,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",79,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",79,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",79,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",79,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",79,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",79,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",79,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",79,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",79,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",79,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",79,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",79,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",79,null],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",80,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",80,null],[11,"poll_complete","","",80,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",80,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",81,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",81,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",81,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",82,null],[11,"poll_complete","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",83,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",83,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",83,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",84,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",85,null],[11,"poll_complete","","",85,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",85,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",86,null],[11,"poll_complete","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",87,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",87,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"BoxSink","","A type alias for `Box<Stream + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",88,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",88,null],[10,"start_send","","Begin the process of sending a value to the sink.",88,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"with","","Composes a function in front of the sink.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",88,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",88,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",88,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",89,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a new future, returning the fused future and task.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",90,{"inputs":[{"name":"self"}],"output":null}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",91,{"inputs":[{"name":"self"},{"name":"run"}],"output":null}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",92,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",92,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",92,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",93,{"inputs":[{"name":"self"}],"output":{"name":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",93,{"inputs":[{"name":"self"}],"output":null}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the correponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",95,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",96,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",94,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",94,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",97,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",97,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",98,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",98,{"inputs":[{"name":"self"}],"output":null}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",103,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start_send","","",99,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",99,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",99,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send","","Sends the provided message along this channel.",100,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"start_send","","",100,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",100,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",100,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",99,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",101,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",101,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",102,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",102,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","futures::sync","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",104,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",104,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",104,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",105,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",105,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",106,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",107,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",107,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",107,{"inputs":[{"name":"self"}],"output":null}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",108,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",108,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",108,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",109,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",109,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",109,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",110,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",110,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send","","Sends the provided message along this channel.",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",111,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",111,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",112,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",112,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Canceled","","Represents that the `Sender` dropped before sending a message.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",113,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",113,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",114,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",114,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",116,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",116,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",117,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Poll","futures","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"from","futures::executor","",118,{"inputs":[{"name":"nodetohandle"}],"output":{"name":"notifyhandle"}}],[11,"fmt","futures::task","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",119,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",120,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",120,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",120,{"inputs":[{"name":"self"},{"name":"arc"}],"output":null}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",120,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",120,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",120,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",120,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",120,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",120,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",121,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","futures::task","",122,{"inputs":[{"name":"self"}],"output":{"name":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",122,{"inputs":[{"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","futures::executor","",118,{"inputs":[{"name":"arc"}],"output":{"name":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",92,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",92,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","futures::task","",123,{"inputs":[{"name":"self"}],"output":{"name":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",123,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns `true` when called from within the context of the task.",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",120,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",120,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",120,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",120,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",120,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",120,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",120,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",118,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",118,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",118,{"inputs":[{"name":"t"}],"output":{"name":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[4,"MergedItem"],[3,"Iter"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[8,"Stream"],[3,"With"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"NotifyHandle"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"Task"]]};
searchIndex["futures_cpupool"] = {"doc":"A simple crate for executing work on a thread pool, and getting back a future.","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",null,null],[3,"Builder","","Thread pool configuration object",null,null],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn` function, which proxies the futures running on the thread pool.",null,null],[11,"new","","Creates a new thread pool with `size` worker threads associated with it.",0,{"inputs":[{"name":"usize"}],"output":{"name":"cpupool"}}],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal to the number of CPUs on the host.",0,{"inputs":[],"output":{"name":"cpupool"}}],[11,"spawn","","Spawns a future to run on this thread pool, returning a future representing the produced value.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cpufuture"}}],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cpufuture"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"cpupool"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",1,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Create a builder a number of workers equal to the number of CPUs on the host.",2,{"inputs":[],"output":{"name":"builder"}}],[11,"pool_size","","Set size of a future CpuPool",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"name_prefix","","Set thread name prefix of a future CpuPool",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"after_start","","Execute function `f` right after each thread is started but before running any jobs on it",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"before_stop","","Execute function `f` before each worker thread stops",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"create","","Create CpuPool with configured parameters",2,{"inputs":[{"name":"self"}],"output":{"name":"cpupool"}}]],"paths":[[3,"CpuPool"],[3,"CpuFuture"],[3,"Builder"]]};
searchIndex["guardhaus"] = {"doc":"Guardhaus is an HTTP authentication/authorization library.","items":[[0,"authentication_info","guardhaus","An implementation of the `Authentication-Info` header.",null,null],[3,"AuthenticationInfo","guardhaus::authentication_info","Parameters for the `Authentication-Info` header.",null,null],[12,"digest","","The digest of the entity body, parameter name `digest` in RFC 2069, `rspauth` otherwise",0,null],[12,"next_nonce","","`nextnonce` - per RFC 7616, \"the nonce the server wishes the client to use for a future authentication response.\"",0,null],[12,"qop","","Quality of protection",0,null],[12,"client_nonce","","Cryptographic nonce from the client",0,null],[12,"nonce_count","","Nonce count, parameter name `nc`",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"authenticationinfo"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"authenticationinfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"authenticationinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",0,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",0,{"inputs":[{"name":"raw"}],"output":{"name":"hyperresult"}}],[11,"fmt_header","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"digest","guardhaus","An HTTP Digest implementation for Hyper's `Authorization` header.",null,null],[3,"Digest","guardhaus::digest","Parameters for the `Authorization` header when using the `Digest` scheme.",null,null],[12,"username","","Either the user name or the user hash (if `userhash` is `true` - see RFC 7616, section 3.4.4).",1,null],[12,"realm","","Authentication realm.",1,null],[12,"nonce","","Cryptographic nonce.",1,null],[12,"nonce_count","","Nonce count, parameter name `nc`. Optional only in RFC 2067 mode.",1,null],[12,"response","","The hexadecimal digest of the payload as described by the RFCs.",1,null],[12,"request_uri","","Either the absolute path or URI of the HTTP request, parameter name `uri`.",1,null],[12,"algorithm","","The hash algorithm to use when generating the `response`.",1,null],[12,"qop","","Quality of protection. Optional only in RFC 2067 mode.",1,null],[12,"client_nonce","","Cryptographic nonce from the client. Optional only in RFC 2067 mode.",1,null],[12,"opaque","","Optional opaque string.",1,null],[12,"charset","","The character set to use when generating the A1 value or the userhash. Added for RFC 7616.",1,null],[12,"userhash","","Whether `username` is a userhash. Added for RFC 7616.",1,null],[4,"Username","","Represents a `username` (or user hash, if the header's `userhash` parameter is `true`).",null,null],[13,"Plain","","Either an ASCII-encoded username, or a userhash (if the header's `userhash` parameter is `true`).",2,null],[13,"Encoded","","An RFC 5987-encoded username.",2,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"username"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"username"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"username"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"digest"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","",1,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"userhash","","Generates a userhash, as defined in RFC 7616, section 3.4.4.",1,{"inputs":[{"name":"hashalgorithm"},{"name":"vec"},{"name":"string"}],"output":{"name":"string"}}],[11,"validate_userhash","","Validates a userhash (as defined in RFC 7616, section 3.4.4), given a `Digest` header.",1,{"inputs":[{"name":"self"},{"name":"username"}],"output":{"name":"bool"}}],[11,"simple_hashed_a1","","Generates a simple hexadecimal digest from an A1 value and given algorithm.",1,{"inputs":[{"name":"hashalgorithm"},{"name":"username"},{"name":"string"},{"name":"string"}],"output":{"name":"string"}}],[11,"using_password","","Generates a digest, given an HTTP request and a password.",1,null],[11,"using_hashed_a1","","Generates a digest, given an HTTP request and a hexadecimal digest of an A1 string.",1,null],[11,"validate_using_password","","Validates a `Digest.response`, given an HTTP request and a password.",1,null],[11,"validate_using_userhash_and_password","","Validates a `Digest.username` and `Digest.response`, given an HTTP request, a username, and a password. If a userhash is specified, that is validated first.",1,null],[11,"validate_using_hashed_a1","","Validates a `Digest.response`, given an HTTP request and a hexadecimal digest of an A1 string.",1,null],[0,"types","guardhaus","Common authentication types.",null,null],[3,"NonceCount","guardhaus::types","Convenience type for nonce counts.",null,null],[12,"0","","",3,null],[4,"HashAlgorithm","","Allowable hash algorithms for the `algorithm` parameter.",null,null],[13,"MD5","","`MD5`",4,null],[13,"MD5Session","","`MD5-sess`",4,null],[13,"SHA256","","`SHA-256`",4,null],[13,"SHA256Session","","`SHA-256-sess`",4,null],[13,"SHA512256","","`SHA-512-256`",4,null],[13,"SHA512256Session","","`SHA-512-256-sess`",4,null],[4,"Qop","","Allowable values for the `qop`, or \"quality of protection\" parameter.",null,null],[13,"Auth","","`auth`",5,null],[13,"AuthInt","","`auth-int`",5,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"hashalgorithm"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"hashalgorithm"}],"output":{"name":"bool"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hex_digest","","Generate a hexadecimal representation of the output of a cryptographic hash function, given `data` and the algorithm.",4,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"noncecount"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"noncecount"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"noncecount"}],"output":{"name":"bool"}}],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_parameters","","Extracts an `NonceCount` object from a map of header parameters. Returns an error if the value is not a valid nonce count.",3,{"inputs":[{"name":"hashmap"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"qop"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"qop"}],"output":{"name":"bool"}}],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_parameters","","Extracts a `Qop` object from a map of header parameters. Returns an error if the value is not a valid qop value.",5,{"inputs":[{"name":"hashmap"}],"output":{"name":"result"}}]],"paths":[[3,"AuthenticationInfo"],[3,"Digest"],[4,"Username"],[3,"NonceCount"],[4,"HashAlgorithm"],[4,"Qop"]]};
searchIndex["hex"] = {"doc":"","items":[[4,"FromHexError","hex","",null,null],[13,"InvalidHexCharacter","","",0,null],[12,"c","hex::FromHexError","",0,null],[12,"index","","",0,null],[13,"InvalidHexLength","hex","",0,null],[8,"ToHex","","",null,null],[10,"to_hex","","",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"write_hex","","",1,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[8,"FromHex","","",null,null],[16,"Error","","",2,null],[10,"from_hex","","",2,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"fromhexerror"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"fromhexerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"fromhexerror"}],"output":{"name":"bool"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["httparse"] = {"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for parsing.",null,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"invalidchunksize"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_complete","","Convenience method to check if status is complete.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_partial","","Convenience method to check if status is partial.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is `Partial`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["hyper"] = {"doc":"Hyper","items":[[3,"Uri","hyper","The Request-URI of a Request's StartLine.",null,null],[3,"Body","","A `Stream` for `Chunk`s used in requests and responses.",null,null],[3,"Chunk","","A piece of a message body.",null,null],[3,"Request","","A client request to a remote server.",null,null],[3,"Response","","A response for a client request to a remote server.",null,null],[4,"Method","","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",0,null],[13,"Get","","GET",0,null],[13,"Post","","POST",0,null],[13,"Put","","PUT",0,null],[13,"Delete","","DELETE",0,null],[13,"Head","","HEAD",0,null],[13,"Trace","","TRACE",0,null],[13,"Connect","","CONNECT",0,null],[13,"Patch","","PATCH",0,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",0,null],[4,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",1,null],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",1,null],[13,"Processing","","102 Processing [RFC2518]",1,null],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",1,null],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",1,null],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",1,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",1,null],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",1,null],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",1,null],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",1,null],[13,"MultiStatus","","207 Multi-Status [RFC4918]",1,null],[13,"AlreadyReported","","208 Already Reported [RFC5842]",1,null],[13,"ImUsed","","226 IM Used [RFC3229]",1,null],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",1,null],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",1,null],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",1,null],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",1,null],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",1,null],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",1,null],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",1,null],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",1,null],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",1,null],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",1,null],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",1,null],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",1,null],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",1,null],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",1,null],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",1,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",1,null],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",1,null],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",1,null],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",1,null],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",1,null],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",1,null],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",1,null],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",1,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",1,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",1,null],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",1,null],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but RFC2324]",1,null],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",1,null],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",1,null],[13,"Locked","","423 Locked [RFC4918]",1,null],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",1,null],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",1,null],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",1,null],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",1,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",1,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",1,null],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",1,null],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",1,null],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",1,null],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",1,null],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",1,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",1,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",1,null],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",1,null],[13,"LoopDetected","","508 Loop Detected [RFC5842]",1,null],[13,"NotExtended","","510 Not Extended [RFC2774]",1,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",1,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",1,null],[4,"HttpVersion","","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",2,null],[13,"Http10","","`HTTP/1.0`",2,null],[13,"Http11","","`HTTP/1.1`",2,null],[13,"H2","","`HTTP/2.0` over TLS",2,null],[13,"H2c","","`HTTP/2.0` over cleartext",2,null],[0,"client","","HTTP Client",null,null],[8,"Service","hyper::client","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",3,null],[16,"Response","","Responses given by the service.",3,null],[16,"Error","","Errors produced by the service.",3,null],[16,"Future","","The future response value.",3,null],[10,"call","","Process the request and return the response asynchronously.",3,null],[3,"Response","","A response for a client request to a remote server.",null,null],[3,"Request","","A client request to a remote server.",null,null],[3,"HttpConnector","","A connector for the `http` scheme.",null,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"FutureResponse","","A `Future` that will resolve to an HTTP Response.",null,null],[3,"Config","","Configuration for a Client",null,null],[3,"UseDefaultConnector","","Phantom type used to signal that `Config` should create a `HttpConnector`.",null,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"httpconnector"}}],[11,"new","","Construct a new HttpConnector.",4,{"inputs":[{"name":"usize"},{"name":"handle"}],"output":{"name":"httpconnector"}}],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"call","","",4,null],[8,"Connect","","A connector creates an Io to a remote address..",null,null],[16,"Output","","The connected Io Stream.",5,null],[16,"Future","","A Future that will resolve to the connected Stream.",5,null],[10,"connect","","Connect to a remote address.",5,null],[11,"new","","Create a new Client with the default config.",6,{"inputs":[{"name":"handle"}],"output":{"name":"client"}}],[11,"configure","","Configure a Client.",6,{"inputs":[],"output":{"name":"config"}}],[11,"handle","","Return a reference to a handle to the event loop this Client is associated with.",6,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"get","","Send a GET Request using this Client.",6,{"inputs":[{"name":"self"},{"name":"uri"}],"output":{"name":"futureresponse"}}],[11,"request","","Send a constructed Request using this Client.",6,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"futureresponse"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"call","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"usedefaultconnector"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"config"}}],[11,"body","","Set the body stream to be used by the `Client`.",9,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"connector","","Set the `Connect` type to be used.",9,{"inputs":[{"name":"self"},{"name":"cc"}],"output":{"name":"config"}}],[11,"keep_alive","","Enable or disable keep-alive mechanics.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"config"}}],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"config"}}],[11,"build","","Construct the Client with this configuration.",9,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"client"}}],[11,"build","","Construct the Client with this configuration.",9,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"client"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[0,"error","hyper","Error and Result module.",null,null],[3,"UriError","hyper::error","An error parsing a `Uri`.",null,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",10,null],[13,"Uri","","An invalid `Uri`, such as `exam ple.domain`.",10,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",10,null],[13,"Header","","An invalid `Header`.",10,null],[13,"TooLarge","","A message head is too large to be reasonable.",10,null],[13,"Incomplete","","A message reached EOF, but is not complete.",10,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",10,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",10,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",10,null],[13,"Utf8","","Parsing a field as string failed",10,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",10,{"inputs":[{"name":"urierror"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","hyper","",0,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result if executed multiple times.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"method"}}],[0,"header","","Headers container, and common header fields.",null,null],[3,"LanguageTag","hyper::header","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",11,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",11,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",11,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",11,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",11,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",11,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",11,null],[3,"EntityTag","","An entity tag, defined in RFC7232",null,null],[12,"weak","","Weakness indicator for the tag",12,null],[3,"HttpDate","","A timestamp with HTTP formatting and parsing",null,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[3,"QualityItem","","Represents an item with a quality value as defined in RFC7231.",null,null],[12,"item","","The actual contents of the field.",13,null],[12,"quality","","The quality (client or server preference) for the value.",13,null],[3,"Accept","","`Accept` header, defined in RFC7231",null,null],[12,"0","","",14,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",null,null],[12,"0","","",15,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",null,null],[12,"0","","",16,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",null,null],[12,"0","","",17,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",null,null],[12,"0","","",18,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",null,null],[12,"0","","",19,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",null,null],[12,"0","","",20,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",null,null],[12,"0","","",21,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",null,null],[12,"0","","",22,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",null,null],[12,"0","","",23,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",null,null],[12,"0","","",24,null],[3,"Allow","","`Allow` header, defined in RFC7231",null,null],[12,"0","","",25,null],[3,"Authorization","","`Authorization` header, defined in RFC7235",null,null],[12,"0","","",26,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",27,null],[12,"password","","The password. `None` if the `:` delimiter character was not part of the parsed input.",27,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",28,null],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",null,null],[12,"0","","",29,null],[3,"Connection","","`Connection` header, defined in RFC7230",null,null],[12,"0","","",30,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",null,null],[12,"disposition","","The disposition",31,null],[12,"parameters","","Disposition parameters",31,null],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",null,null],[12,"0","","",32,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",null,null],[12,"0","","",33,null],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",null,null],[12,"0","","",34,null],[3,"ContentLocation","","`Content-Location` header, defined in RFC7231",null,null],[12,"0","","",35,null],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",null,null],[12,"0","","",36,null],[3,"ContentType","","`Content-Type` header, defined in RFC7231",null,null],[12,"0","","",37,null],[3,"Cookie","","`Cookie` header, defined in RFC6265",null,null],[3,"CookieIter","","Iterator for cookie.",null,null],[3,"Date","","`Date` header, defined in RFC7231",null,null],[12,"0","","",38,null],[3,"ETag","","`ETag` header, defined in RFC7232",null,null],[12,"0","","",39,null],[3,"Expires","","`Expires` header, defined in RFC7234",null,null],[12,"0","","",40,null],[3,"From","","`From` header, defined in RFC7231",null,null],[12,"0","","",41,null],[3,"Host","","The `Host` header.",null,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",null,null],[12,"0","","",42,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",null,null],[12,"0","","",43,null],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",null,null],[12,"0","","",44,null],[3,"Location","","`Location` header, defined in RFC7231",null,null],[3,"Origin","","The `Origin` header.",null,null],[3,"Prefer","","`Prefer` header, defined in RFC7240",null,null],[12,"0","","",45,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",null,null],[12,"0","","",46,null],[3,"Referer","","`Referer` header, defined in RFC7231",null,null],[3,"Server","","`Server` header, defined in RFC7231",null,null],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",null,null],[12,"0","","",47,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",48,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header field, during which the UA regards the host (from whom the message was received) as a Known HSTS Host.",48,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",null,null],[12,"0","","",49,null],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",null,null],[12,"0","","",50,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",51,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",51,null],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",null,null],[3,"Warning","","`Warning` header, defined in RFC7234",null,null],[12,"code","","The 3 digit warn code.",52,null],[12,"agent","","The name or pseudonym of the server adding this header.",52,null],[12,"text","","The warning message describing the error.",52,null],[12,"date","","An optional warning date.",52,null],[3,"Link","","The `Link` header, defined in RFC5988",null,null],[3,"LinkValue","","A single `link-value` of a `Link` header, based on: RFC5988",null,null],[3,"Raw","","A raw header value.",null,null],[3,"Formatter","","A formatter used to serialize headers to an output stream.",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",53,null],[13,"Iso_8859_1","","ISO-8859-1",53,null],[13,"Iso_8859_2","","ISO-8859-2",53,null],[13,"Iso_8859_3","","ISO-8859-3",53,null],[13,"Iso_8859_4","","ISO-8859-4",53,null],[13,"Iso_8859_5","","ISO-8859-5",53,null],[13,"Iso_8859_6","","ISO-8859-6",53,null],[13,"Iso_8859_7","","ISO-8859-7",53,null],[13,"Iso_8859_8","","ISO-8859-8",53,null],[13,"Iso_8859_9","","ISO-8859-9",53,null],[13,"Iso_8859_10","","ISO-8859-10",53,null],[13,"Shift_Jis","","Shift_JIS",53,null],[13,"Euc_Jp","","EUC-JP",53,null],[13,"Iso_2022_Kr","","ISO-2022-KR",53,null],[13,"Euc_Kr","","EUC-KR",53,null],[13,"Iso_2022_Jp","","ISO-2022-JP",53,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",53,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",53,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",53,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",53,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",53,null],[13,"Gb2312","","GB2312",53,null],[13,"Big5","","Big5",53,null],[13,"Koi8_R","","KOI8-R",53,null],[13,"Ext","","An arbitrary charset specified as a string",53,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding` or `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",54,null],[13,"Brotli","","The `br` encoding.",54,null],[13,"Gzip","","The `gzip` encoding.",54,null],[13,"Deflate","","The `deflate` encoding.",54,null],[13,"Compress","","The `compress` encoding.",54,null],[13,"Identity","","The `identity` encoding.",54,null],[13,"Trailers","","The `trailers` encoding.",54,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",54,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of CORS",null,null],[13,"Any","","Allow all origins",55,null],[13,"Null","","A hidden origin",55,null],[13,"Value","","Allow one particular origin",55,null],[4,"RangeUnit","","Range Units, described in RFC7233",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",56,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",56,null],[13,"Unregistered","","The given range unit is not registered at IANA.",56,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",57,null],[13,"NoStore","","\"no-store\"",57,null],[13,"NoTransform","","\"no-transform\"",57,null],[13,"OnlyIfCached","","\"only-if-cached\"",57,null],[13,"MaxAge","","\"max-age=delta\"",57,null],[13,"MaxStale","","\"max-stale=delta\"",57,null],[13,"MinFresh","","\"min-fresh=delta\"",57,null],[13,"MustRevalidate","","\"must-revalidate\"",57,null],[13,"Public","","\"public\"",57,null],[13,"Private","","\"private\"",57,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",57,null],[13,"SMaxAge","","\"s-maxage=delta\"",57,null],[13,"Extension","","Extension directives. Optionally include an argument.",57,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",58,null],[13,"Close","","The `close` connection value.",58,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",58,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",59,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally, rather than process it normally (as per its media type).",59,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",59,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of bytes representing the filename",60,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized parameters.",60,null],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",null,null],[13,"Bytes","","Byte range",61,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be satisfied",61,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",61,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",61,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",61,null],[12,"resp","","other-range-resp",61,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",62,null],[4,"IfMatch","","`If-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",63,null],[13,"Items","","Only the listed items are a match",63,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",64,null],[13,"Items","","Only the listed items are a match",64,null],[4,"IfRange","","`If-Range` header, defined in RFC7233",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",65,null],[13,"Date","","The date when the client retrieved the resource",65,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",66,null],[13,"Ext","","Every value other than `no-cache`.",66,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","\"respond-async\"",67,null],[13,"ReturnRepresentation","","\"return=representation\"",67,null],[13,"ReturnMinimal","","\"return=minimal\"",67,null],[13,"HandlingStrict","","\"handling=strict\"",67,null],[13,"HandlingLenient","","\"handling=lenient\"",67,null],[13,"Wait","","\"wait=delta\"",67,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is just \"\". A preference can also have a list of parameters.",67,null],[4,"Range","","`Range` header, defined in RFC7233",null,null],[13,"Bytes","","Byte range",68,null],[13,"Unregistered","","Custom range, with unit not registered at IANA (`other-range-unit`: String , `other-range-set`: String)",68,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`. Each `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",69,null],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",69,null],[13,"Last","","Get last x bytes (\"-x\")",69,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",null,null],[13,"NoReferrer","","`no-referrer`",70,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",70,null],[13,"SameOrigin","","`same-origin`",70,null],[13,"Origin","","`origin`",70,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",70,null],[13,"UnsafeUrl","","`unsafe-url`",70,null],[13,"StrictOrigin","","`strict-origin`",70,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",70,null],[4,"RetryAfter","","The `Retry-After` header.",null,null],[13,"Delay","","Retry after this duration has elapsed",71,null],[13,"DateTime","","Retry after the given DateTime",71,null],[4,"ProtocolName","","A protocol name used to identify a specific protocol. Names are case-sensitive except for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",72,null],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",72,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol RFC6455",72,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",72,null],[13,"Unregistered","","Any other protocol name not known to hyper",72,null],[4,"Vary","","`Vary` header, defined in RFC7231",null,null],[13,"Any","","Any value is a match",73,null],[13,"Items","","Only the listed items are a match",73,null],[4,"RelationType","","A Link Relation Type Enum based on: RFC5988",null,null],[13,"Alternate","","alternate.",74,null],[13,"Appendix","","appendix.",74,null],[13,"Bookmark","","bookmark.",74,null],[13,"Chapter","","chapter.",74,null],[13,"Contents","","contents.",74,null],[13,"Copyright","","copyright.",74,null],[13,"Current","","current.",74,null],[13,"DescribedBy","","describedby.",74,null],[13,"Edit","","edit.",74,null],[13,"EditMedia","","edit-media.",74,null],[13,"Enclosure","","enclosure.",74,null],[13,"First","","first.",74,null],[13,"Glossary","","glossary.",74,null],[13,"Help","","help.",74,null],[13,"Hub","","hub.",74,null],[13,"Index","","index.",74,null],[13,"Last","","last.",74,null],[13,"LatestVersion","","latest-version.",74,null],[13,"License","","license.",74,null],[13,"Next","","next.",74,null],[13,"NextArchive","","next-archive.",74,null],[13,"Payment","","payment.",74,null],[13,"Prev","","prev.",74,null],[13,"PredecessorVersion","","predecessor-version.",74,null],[13,"Previous","","previous.",74,null],[13,"PrevArchive","","prev-archive.",74,null],[13,"Related","","related.",74,null],[13,"Replies","","replies.",74,null],[13,"Section","","section.",74,null],[13,"RelationTypeSelf","","self.",74,null],[13,"Service","","service.",74,null],[13,"Start","","start.",74,null],[13,"Stylesheet","","stylesheet.",74,null],[13,"Subsection","","subsection.",74,null],[13,"SuccessorVersion","","successor-version.",74,null],[13,"Up","","up.",74,null],[13,"VersionHistory","","versionHistory.",74,null],[13,"Via","","via.",74,null],[13,"WorkingCopy","","working-copy.",74,null],[13,"WorkingCopyOf","","working-copy-of.",74,null],[13,"ExtRelType","","ext-rel-type.",74,null],[4,"MediaDesc","","A Media Descriptors Enum based on: https://www.w3.org/TR/html401/types.html#h-6.13",null,null],[13,"Screen","","screen.",75,null],[13,"Tty","","tty.",75,null],[13,"Tv","","tv.",75,null],[13,"Projection","","projection.",75,null],[13,"Handheld","","handheld.",75,null],[13,"Print","","print.",75,null],[13,"Braille","","braille.",75,null],[13,"Aural","","aural.",75,null],[13,"All","","all.",75,null],[13,"Extension","","Unrecognized media descriptor extension.",75,null],[5,"qitem","","Convenience function to wrap a value in a `QualityItem` Sets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float or integer.",null,{"inputs":[{"name":"t"}],"output":{"name":"quality"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"accept"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",14,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",14,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"star","","A constructor to easily create `Accept: */*`.",14,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",14,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",14,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",14,{"inputs":[],"output":{"name":"accept"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowcredentials"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"accesscontrolallowcredentials"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowheaders"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"deref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",15,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",15,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",15,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowmethods"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"deref","","",16,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",16,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",16,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",16,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolexposeheaders"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"deref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",17,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",17,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolmaxage"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"deref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"deref_mut","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"header_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",18,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolrequestheaders"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",19,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",19,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",19,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolrequestmethod"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"deref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"deref_mut","","",20,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"acceptcharset"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"deref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"acceptencoding"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"deref","","",22,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",22,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"acceptlanguage"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"deref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"acceptranges"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"deref","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"rangeunit"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"from_str","","",56,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"allow"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"deref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",25,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"authorization"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"deref_mut","","",26,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"basic"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","",27,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bearer"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","",28,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",28,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"cachecontrol"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"cachedirective"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",57,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"new","","Creates a new `Cookie` header.",77,{"inputs":[],"output":{"name":"cookie"}}],[11,"set","","Sets a name and value for the `Cookie`.",77,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"append","","Append a name and value for the `Cookie`.",77,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"get","","Get a value for the name, if it exists.",77,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","Iterate cookies.",77,{"inputs":[{"name":"self"}],"output":{"name":"cookieiter"}}],[11,"header_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",77,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",78,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"connectionoption"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",58,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"connection"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"deref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",30,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",30,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",30,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"dispositiontype"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"dispositionparam"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"contentdisposition"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"contentencoding"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",33,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"contentlanguage"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",34,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"contentlength"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"deref_mut","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"contentlocation"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"contentlocation"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"contentlocation"}],"output":{"name":"bool"}}],[11,"deref","","",35,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",35,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"contentrange"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"deref","","",36,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"deref_mut","","",36,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",61,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"contenttype"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"deref","","",37,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"deref_mut","","",37,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"octet_stream","","A constructor  to easily create a `Content-Type: application/octet-stream` header.",37,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"bool"}}],[11,"deref","","",38,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",38,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"etag"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"deref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",39,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"expect"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",62,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",62,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"expires"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"deref","","",40,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",40,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"from"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"bool"}}],[11,"deref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a `Host` header, providing the hostname and optional port.",79,{"inputs":[{"name":"h"},{"name":"p"}],"output":{"name":"host"}}],[11,"hostname","","Get the hostname, such as example.domain.",79,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"port","","Get the optional port number.",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"header_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",79,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",79,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"ifmatch"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"ifmodifiedsince"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"deref","","",42,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",42,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"ifnonematch"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"header_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",64,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"ifrange"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"header_name","","",65,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",65,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"ifunmodifiedsince"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"deref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",43,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"lastmodified"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"deref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",80,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",80,null],[11,"header_name","","",80,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",80,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Origin` header.",81,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"null","","Creates a `Null` `Origin` header.",81,{"inputs":[],"output":{"name":"origin"}}],[11,"is_null","","Checks if `Origin` is `Null`.",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"scheme","","The scheme, such as http or https `use hyper::header::Origin; let origin = Origin::new(\"https\", \"foo.com\", Some(443)); assert_eq!(origin.scheme(), Some(\"https\"));`",81,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(), port: None} `use hyper::header::{Origin,Host}; let origin = Origin::new(\"https\", \"foo.com\", Some(443)); assert_eq!(origin.host(), Some(&Host::new(\"foo.com\", Some(443))));`",81,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"header_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",81,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",81,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"pragma"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",66,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"prefer"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"prefer"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"prefer"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"preference"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"preference"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"preference"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",67,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"preferenceapplied"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"preferenceapplied"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"preferenceapplied"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"byterangespec"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",68,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges (\"bytes=from1-to1,from2-to2,fromX-toX\")",68,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",68,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",68,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"referer"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",82,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",82,null],[11,"header_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",82,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"referrerpolicy"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"referrerpolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",70,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"retryafter"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"retryafter"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"retryafter"}],"output":{"name":"bool"}}],[11,"header_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",71,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"server"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"self"},{"name":"server"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",83,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",83,null],[11,"header_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",83,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"setcookie"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",47,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"stricttransportsecurity"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",48,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",48,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",48,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"transferencoding"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"deref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"chunked","","Constructor for the most common Transfer-Encoding, `chunked`.",49,{"inputs":[],"output":{"name":"transferencoding"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"upgrade"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"deref","","",50,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"protocolname"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"from_str","","",72,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"protocol"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"new","","Creates a new Protocol with the given name and version",51,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",51,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"useragent"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",84,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",84,null],[11,"header_name","","",84,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",84,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"vary"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"header_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",73,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"warning"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",52,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"link"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"link"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"link"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"linkvalue"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"mediadesc"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"relationtype"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create `Link` from a `Vec<LinkValue>`.",85,{"inputs":[{"name":"vec"}],"output":{"name":"link"}}],[11,"values","","Get the `Link` header's `LinkValue`s.",85,null],[11,"push_value","","Add a `LinkValue` instance to the `Link` header's values.",85,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":null}],[11,"new","","Create `LinkValue` from URI-Reference.",86,{"inputs":[{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"link","","Get the `LinkValue`'s value.",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"rel","","Get the `LinkValue`'s `rel` parameter(s).",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"anchor","","Get the `LinkValue`'s `anchor` parameter.",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"rev","","Get the `LinkValue`'s `rev` parameter(s).",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"href_lang","","Get the `LinkValue`'s `hreflang` parameter(s).",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"media_desc","","Get the `LinkValue`'s `media` parameter(s).",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"title","","Get the `LinkValue`'s `title` parameter.",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"title_star","","Get the `LinkValue`'s `title*` parameter.",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"media_type","","Get the `LinkValue`'s `type` parameter.",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"push_rel","","Add a `RelationType` to the `LinkValue`'s `rel` parameter.",86,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"linkvalue"}}],[11,"set_anchor","","Set `LinkValue`'s `anchor` parameter.",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"push_rev","","Add a `RelationType` to the `LinkValue`'s `rev` parameter.",86,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"linkvalue"}}],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`'s `hreflang` parameter.",86,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"linkvalue"}}],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`'s `media_desc` parameter.",86,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"linkvalue"}}],[11,"set_title","","Set `LinkValue`'s `title` parameter.",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"set_title_star","","Set `LinkValue`'s `title*` parameter.",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"set_media_type","","Set `LinkValue`'s `type` parameter.",86,{"inputs":[{"name":"self"},{"name":"mime"}],"output":{"name":"linkvalue"}}],[11,"header_name","","",85,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",85,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",85,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"raw"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Returns the amount of lines.",87,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"one","","Returns the line if there is only 1.",87,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","Iterate the lines of raw bytes.",87,{"inputs":[{"name":"self"}],"output":{"name":"rawlines"}}],[11,"push","","Append a line to this `Raw` header value.",87,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"raw"}],"output":{"name":"bool"}}],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"from","","",87,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"string"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"str"}],"output":{"name":"raw"}}],[11,"from","","",87,null],[11,"from","","",87,{"inputs":[{"name":"bytes"}],"output":{"name":"raw"}}],[11,"index","","",87,null],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"charset"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",53,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"encoding"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",54,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains invalid characters.",12,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag contains invalid characters.",12,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag contains invalid characters.",12,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid characters.",12,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their opaque-tags match character-by-character, regardless of either or both being tagged as \"weak\".",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",12,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"from_str","","",88,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",88,{"inputs":[{"name":"systemtime"}],"output":{"name":"httpdate"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"quality"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"qualityitem"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality. The item can be of any type. The quality should be a value in the range [0, 1].",13,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"name":"option"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally, a language), as defined in RFC 5987.",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",90,null],[12,"language_tag","","The human language details of the `value`, if available.",90,null],[12,"value","","The parameter value, as expressed in octets.",90,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in RFC 5987.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"http_percent_encode","","Percent encode a sequence of bytes with a character set defined in https://tools.ietf.org/html/rfc5987#section-3.2",null,null],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"extendedvalue"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",91,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",92,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",92,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[10,"fmt_header","","Format a header to outgoing stream.",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt_line","","Format one 'line' of a header.",93,{"inputs":[{"name":"self"},{"name":"display"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",94,{"inputs":[],"output":{"name":"headers"}}],[11,"with_capacity","","Creates a new `Headers` struct with space reserved for `len` headers.",94,{"inputs":[{"name":"usize"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",94,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"get","","Get a reference to the header field's value, if it exists.",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed. Returns the header, if one has been removed and could be parsed.",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","Returns an iterator over the header fields.",94,{"inputs":[{"name":"self"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",94,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",94,{"inputs":[{"name":"self"}],"output":null}],[11,"get_raw","","Access the raw value of a header.",94,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",94,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"append_raw","","Append a value to raw value of this header.",94,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"remove_raw","","Remove a header by name.",94,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"headers"}],"output":{"name":"bool"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",95,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",96,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",96,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"raw","","Access the raw value of the header.",96,{"inputs":[{"name":"self"}],"output":{"name":"raw"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",94,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"extend","","",94,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"from_iter","","",94,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","hyper","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Return an empty body stream",97,{"inputs":[],"output":{"name":"body"}}],[11,"pair","","Return a body stream with an associated sender half",97,null],[11,"default","","",97,{"inputs":[],"output":{"name":"body"}}],[11,"poll","","",97,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from","","",97,{"inputs":[{"name":"body"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"receiver"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"chunk"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"bytes"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"vec"}],"output":{"name":"body"}}],[11,"from","","",97,null],[11,"from","","",97,{"inputs":[{"name":"string"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"str"}],"output":{"name":"body"}}],[11,"from","","",97,{"inputs":[{"name":"option"}],"output":{"name":"body"}}],[11,"from","","",98,{"inputs":[{"name":"vec"}],"output":{"name":"chunk"}}],[11,"from","","",98,null],[11,"from","","",98,{"inputs":[{"name":"string"}],"output":{"name":"chunk"}}],[11,"from","","",98,{"inputs":[{"name":"str"}],"output":{"name":"chunk"}}],[11,"from","","",98,{"inputs":[{"name":"bytes"}],"output":{"name":"chunk"}}],[11,"deref","","",98,null],[11,"as_ref","","",98,null],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",98,{"inputs":[],"output":{"name":"chunk"}}],[11,"into_iter","","",98,null],[11,"extend","","",98,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"new","","Construct a new Request.",99,{"inputs":[{"name":"method"},{"name":"uri"}],"output":{"name":"request"}}],[11,"uri","","Read the Request Uri.",99,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"version","","Read the Request Version.",99,{"inputs":[{"name":"self"}],"output":{"name":"httpversion"}}],[11,"headers","","Read the Request headers.",99,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",99,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"body_ref","","Read the Request body.",99,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"remote_addr","","The remote socket address of this request",99,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"path","","The target path of this Request.",99,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"query","","The query string of this Request.",99,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_method","","Set the Method of this request.",99,{"inputs":[{"name":"self"},{"name":"method"}],"output":null}],[11,"headers_mut","","Get a mutable reference to the Request headers.",99,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"set_uri","","Set the `Uri` of this request.",99,{"inputs":[{"name":"self"},{"name":"uri"}],"output":null}],[11,"set_version","","Set the `HttpVersion` of this request.",99,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":null}],[11,"set_body","","Set the body of the request.",99,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"set_proxy","","Set that the URI should use the absolute form.",99,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"deconstruct","","Deconstruct this Request into its pieces.",99,null],[11,"body","","Take the Request body.",99,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a default response",100,{"inputs":[],"output":{"name":"response"}}],[11,"version","","Get the HTTP version of this response.",100,{"inputs":[{"name":"self"}],"output":{"name":"httpversion"}}],[11,"headers","","Get the headers from the response.",100,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"headers_mut","","Get a mutable reference to the headers.",100,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"status","","Get the status from the server.",100,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"set_status","","Set the `StatusCode` for this response.",100,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":null}],[11,"with_status","","Set the status and move the Response.",100,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"self"}}],[11,"with_header","","Set a header and move the Response.",100,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"self"}}],[11,"with_headers","","Set the headers and move the Response.",100,{"inputs":[{"name":"self"},{"name":"headers"}],"output":{"name":"self"}}],[11,"set_body","","Set the body.",100,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"with_body","","Set the body and move the Response.",100,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"body","","Take the `Body` of this response.",100,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"default","","",100,{"inputs":[],"output":{"name":"response"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"server","","HTTP Server",null,null],[8,"NewService","hyper::server","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",101,null],[16,"Response","","Responses given by the service",101,null],[16,"Error","","Errors produced by the service",101,null],[16,"Instance","","The `Service` value created by this factory",101,null],[10,"new_service","","Create and return a new service value.",101,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Service","","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",3,null],[16,"Response","","Responses given by the service.",3,null],[16,"Error","","Errors produced by the service.",3,null],[16,"Future","","The future response value.",3,null],[10,"call","","Process the request and return the response asynchronously.",3,null],[3,"Response","","A response for a client request to a remote server.",null,null],[3,"Request","","A client request to a remote server.",null,null],[3,"Http","","An instance of the HTTP protocol, and implementation of tokio-proto's `ServerProto` trait.",null,null],[3,"Server","","An instance of a server created through `Http::bind`.",null,null],[11,"new","","Creates a new instance of the HTTP protocol, ready to spawn a server or start accepting connections.",102,{"inputs":[],"output":{"name":"http"}}],[11,"keep_alive","","Enables or disables HTTP keep-alive.",102,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"bind","","Bind the provided `addr` and return a server ready to handle connections.",102,{"inputs":[{"name":"self"},{"name":"socketaddr"},{"name":"s"}],"output":{"name":"result"}}],[11,"bind_connection","","Use this `Http` instance to create a new server task which handles the connection `io` provided.",102,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"i"},{"name":"socketaddr"},{"name":"s"}],"output":null}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"http"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind_transport","","",102,null],[11,"from","hyper","",99,{"inputs":[{"name":"message"}],"output":{"name":"request"}}],[11,"into","","",100,{"inputs":[{"name":"self"}],"output":{"name":"message"}}],[11,"local_addr","hyper::server","Returns the local address that this server is bound to.",103,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"handle","","Returns a handle to the underlying event loop that this server will be running on.",103,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"shutdown_timeout","","Configure the amount of time this server will wait for a \"graceful shutdown\".",103,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"run","","Execute this server infinitely.",103,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run_until","","Execute this server until the given future, `shutdown_signal`, resolves.",103,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"try_from","","Try to convert a `u16` into a `StatusCode`.",1,{"inputs":[{"name":"u16"}],"output":{"name":"result"}}],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_informational","","Check if this `StatusCode` is within 100-199.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Check if this `StatusCode` is within 200-299.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if this `StatusCode` is within 300-399.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if this `StatusCode` is within 400-499.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if this `StatusCode` is within 500-599.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if this `StatusCode` is not within 100-599.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"statuscode"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"hash","","",104,null],[11,"path","","Get the path of this `Uri`.",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"scheme","","Get the scheme of this `Uri`.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"authority","","Get the authority of this `Uri`.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"host","","Get the host of this `Uri`.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"port","","Get the port of this `Uri`.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_absolute","","Returns whether this URI is in `absolute-form`.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_str","","",104,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"uri"}],"output":{"name":"bool"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"as_ref","","",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"uri"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","hyper::error","",105,{"inputs":[{"name":"self"}],"output":{"name":"urierror"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","hyper","",2,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"httpversion"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"httpversion"}}],[14,"header","","",null,null],[11,"eq","hyper::header","",11,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",11,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"canonicalize","","Returns the canonical version of the language tag.",11,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}]],"paths":[[4,"Method"],[4,"StatusCode"],[4,"HttpVersion"],[8,"Service"],[3,"HttpConnector"],[8,"Connect"],[3,"Client"],[3,"FutureResponse"],[3,"UseDefaultConnector"],[3,"Config"],[4,"Error"],[3,"LanguageTag"],[3,"EntityTag"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLocation"],[3,"ContentRange"],[3,"ContentType"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"Warning"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"RetryAfter"],[4,"ProtocolName"],[4,"Vary"],[4,"RelationType"],[4,"MediaDesc"],[3,"AccessControlAllowCredentials"],[3,"Cookie"],[3,"CookieIter"],[3,"Host"],[3,"Location"],[3,"Origin"],[3,"Referer"],[3,"Server"],[3,"UserAgent"],[3,"Link"],[3,"LinkValue"],[3,"Raw"],[3,"HttpDate"],[3,"Quality"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[3,"Formatter"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"Body"],[3,"Chunk"],[3,"Request"],[3,"Response"],[8,"NewService"],[3,"Http"],[3,"Server"],[3,"Uri"],[3,"UriError"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,null],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,null],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",null,null],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"IoVec"]]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and other regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"canonicalize","","Returns the canonical version of the language tag.",0,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled `Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"inputs":[],"output":{"name":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",18,null],[12,"sa_data","","",18,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",19,null],[12,"sin_port","","",19,null],[12,"sin_addr","","",19,null],[12,"sin_zero","","",19,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",20,null],[12,"sin6_port","","",20,null],[12,"sin6_flowinfo","","",20,null],[12,"sin6_addr","","",20,null],[12,"sin6_scope_id","","",20,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",21,null],[12,"sun_path","","",21,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",24,null],[12,"nl_pid","","",24,null],[12,"nl_groups","","",24,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",25,null],[12,"sll_protocol","","",25,null],[12,"sll_ifindex","","",25,null],[12,"sll_hatype","","",25,null],[12,"sll_pkttype","","",25,null],[12,"sll_halen","","",25,null],[12,"sll_addr","","",25,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",26,null],[12,"tm_min","","",26,null],[12,"tm_hour","","",26,null],[12,"tm_mday","","",26,null],[12,"tm_mon","","",26,null],[12,"tm_year","","",26,null],[12,"tm_wday","","",26,null],[12,"tm_yday","","",26,null],[12,"tm_isdst","","",26,null],[12,"tm_gmtoff","","",26,null],[12,"tm_zone","","",26,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",27,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",28,null],[12,"dli_fbase","","",28,null],[12,"dli_sname","","",28,null],[12,"dli_saddr","","",28,null],[3,"epoll_event","","",null,null],[12,"events","","",29,null],[12,"u64","","",29,null],[3,"utsname","","",null,null],[12,"sysname","","",30,null],[12,"nodename","","",30,null],[12,"release","","",30,null],[12,"version","","",30,null],[12,"machine","","",30,null],[12,"domainname","","",30,null],[3,"lconv","","",null,null],[12,"decimal_point","","",31,null],[12,"thousands_sep","","",31,null],[12,"grouping","","",31,null],[12,"int_curr_symbol","","",31,null],[12,"currency_symbol","","",31,null],[12,"mon_decimal_point","","",31,null],[12,"mon_thousands_sep","","",31,null],[12,"mon_grouping","","",31,null],[12,"positive_sign","","",31,null],[12,"negative_sign","","",31,null],[12,"int_frac_digits","","",31,null],[12,"frac_digits","","",31,null],[12,"p_cs_precedes","","",31,null],[12,"p_sep_by_space","","",31,null],[12,"n_cs_precedes","","",31,null],[12,"n_sep_by_space","","",31,null],[12,"p_sign_posn","","",31,null],[12,"n_sign_posn","","",31,null],[12,"int_p_cs_precedes","","",31,null],[12,"int_p_sep_by_space","","",31,null],[12,"int_n_cs_precedes","","",31,null],[12,"int_n_sep_by_space","","",31,null],[12,"int_p_sign_posn","","",31,null],[12,"int_n_sign_posn","","",31,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",32,null],[12,"sigev_signo","","",32,null],[12,"sigev_notify","","",32,null],[12,"sigev_notify_thread_id","","",32,null],[3,"dirent","","",null,null],[12,"d_ino","","",33,null],[12,"d_off","","",33,null],[12,"d_reclen","","",33,null],[12,"d_type","","",33,null],[12,"d_name","","",33,null],[3,"dirent64","","",null,null],[12,"d_ino","","",34,null],[12,"d_off","","",34,null],[12,"d_reclen","","",34,null],[12,"d_type","","",34,null],[12,"d_name","","",34,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",35,null],[12,"rlim_max","","",35,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",36,null],[12,"gl_pathv","","",36,null],[12,"gl_offs","","",36,null],[12,"gl_flags","","",36,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",37,null],[12,"ifa_name","","",37,null],[12,"ifa_flags","","",37,null],[12,"ifa_addr","","",37,null],[12,"ifa_netmask","","",37,null],[12,"ifa_ifu","","",37,null],[12,"ifa_data","","",37,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",38,null],[12,"pw_passwd","","",38,null],[12,"pw_uid","","",38,null],[12,"pw_gid","","",38,null],[12,"pw_gecos","","",38,null],[12,"pw_dir","","",38,null],[12,"pw_shell","","",38,null],[3,"spwd","","",null,null],[12,"sp_namp","","",39,null],[12,"sp_pwdp","","",39,null],[12,"sp_lstchg","","",39,null],[12,"sp_min","","",39,null],[12,"sp_max","","",39,null],[12,"sp_warn","","",39,null],[12,"sp_inact","","",39,null],[12,"sp_expire","","",39,null],[12,"sp_flag","","",39,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",40,null],[12,"f_frsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_favail","","",40,null],[12,"f_fsid","","",40,null],[12,"f_flag","","",40,null],[12,"f_namemax","","",40,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",41,null],[12,"dqb_bsoftlimit","","",41,null],[12,"dqb_curspace","","",41,null],[12,"dqb_ihardlimit","","",41,null],[12,"dqb_isoftlimit","","",41,null],[12,"dqb_curinodes","","",41,null],[12,"dqb_btime","","",41,null],[12,"dqb_itime","","",41,null],[12,"dqb_valid","","",41,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",42,null],[12,"ssi_errno","","",42,null],[12,"ssi_code","","",42,null],[12,"ssi_pid","","",42,null],[12,"ssi_uid","","",42,null],[12,"ssi_fd","","",42,null],[12,"ssi_tid","","",42,null],[12,"ssi_band","","",42,null],[12,"ssi_overrun","","",42,null],[12,"ssi_trapno","","",42,null],[12,"ssi_status","","",42,null],[12,"ssi_int","","",42,null],[12,"ssi_ptr","","",42,null],[12,"ssi_utime","","",42,null],[12,"ssi_stime","","",42,null],[12,"ssi_addr","","",42,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",43,null],[12,"mq_maxmsg","","",43,null],[12,"mq_msgsize","","",43,null],[12,"mq_curmsgs","","",43,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",44,null],[12,"if_name","","",44,null],[3,"msginfo","","",null,null],[12,"msgpool","","",45,null],[12,"msgmap","","",45,null],[12,"msgmax","","",45,null],[12,"msgmnb","","",45,null],[12,"msgmni","","",45,null],[12,"msgssz","","",45,null],[12,"msgtql","","",45,null],[12,"msgseg","","",45,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",46,null],[12,"msg_len","","",46,null],[3,"sembuf","","",null,null],[12,"sem_num","","",47,null],[12,"sem_op","","",47,null],[12,"sem_flg","","",47,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",48,null],[12,"aio_lio_opcode","","",48,null],[12,"aio_reqprio","","",48,null],[12,"aio_buf","","",48,null],[12,"aio_nbytes","","",48,null],[12,"aio_sigevent","","",48,null],[12,"aio_offset","","",48,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",49,null],[12,"e_exit","","",49,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",50,null],[12,"tv_usec","","",50,null],[3,"utmpx","","",null,null],[12,"ut_type","","",51,null],[12,"ut_pid","","",51,null],[12,"ut_line","","",51,null],[12,"ut_id","","",51,null],[12,"ut_user","","",51,null],[12,"ut_host","","",51,null],[12,"ut_exit","","",51,null],[12,"ut_session","","",51,null],[12,"ut_tv","","",51,null],[12,"ut_addr_v6","","",51,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",52,null],[12,"sa_mask","","",52,null],[12,"sa_flags","","",52,null],[12,"sa_restorer","","",52,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",53,null],[12,"ss_flags","","",53,null],[12,"ss_size","","",53,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",54,null],[12,"si_errno","","",54,null],[12,"si_code","","",54,null],[12,"_pad","","",54,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",55,null],[12,"gl_pathv","","",55,null],[12,"gl_offs","","",55,null],[12,"gl_flags","","",55,null],[3,"ucred","","",null,null],[12,"pid","","",56,null],[12,"uid","","",56,null],[12,"gid","","",56,null],[3,"statfs","","",null,null],[12,"f_type","","",57,null],[12,"f_bsize","","",57,null],[12,"f_blocks","","",57,null],[12,"f_bfree","","",57,null],[12,"f_bavail","","",57,null],[12,"f_files","","",57,null],[12,"f_ffree","","",57,null],[12,"f_fsid","","",57,null],[12,"f_namelen","","",57,null],[12,"f_frsize","","",57,null],[3,"msghdr","","",null,null],[12,"msg_name","","",58,null],[12,"msg_namelen","","",58,null],[12,"msg_iov","","",58,null],[12,"msg_iovlen","","",58,null],[12,"msg_control","","",58,null],[12,"msg_controllen","","",58,null],[12,"msg_flags","","",58,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",59,null],[12,"cmsg_level","","",59,null],[12,"cmsg_type","","",59,null],[3,"termios","","",null,null],[12,"c_iflag","","",60,null],[12,"c_oflag","","",60,null],[12,"c_cflag","","",60,null],[12,"c_lflag","","",60,null],[12,"c_line","","",60,null],[12,"c_cc","","",60,null],[12,"c_ispeed","","",60,null],[12,"c_ospeed","","",60,null],[3,"flock","","",null,null],[12,"l_type","","",61,null],[12,"l_whence","","",61,null],[12,"l_start","","",61,null],[12,"l_len","","",61,null],[12,"l_pid","","",61,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",62,null],[12,"loads","","",62,null],[12,"totalram","","",62,null],[12,"freeram","","",62,null],[12,"sharedram","","",62,null],[12,"bufferram","","",62,null],[12,"totalswap","","",62,null],[12,"freeswap","","",62,null],[12,"procs","","",62,null],[12,"pad","","",62,null],[12,"totalhigh","","",62,null],[12,"freehigh","","",62,null],[12,"mem_unit","","",62,null],[12,"_f","","",62,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",63,null],[12,"msg_stime","","",63,null],[12,"msg_rtime","","",63,null],[12,"msg_ctime","","",63,null],[12,"msg_qnum","","",63,null],[12,"msg_qbytes","","",63,null],[12,"msg_lspid","","",63,null],[12,"msg_lrpid","","",63,null],[3,"stat","","",null,null],[12,"st_dev","","",64,null],[12,"st_ino","","",64,null],[12,"st_nlink","","",64,null],[12,"st_mode","","",64,null],[12,"st_uid","","",64,null],[12,"st_gid","","",64,null],[12,"st_rdev","","",64,null],[12,"st_size","","",64,null],[12,"st_blksize","","",64,null],[12,"st_blocks","","",64,null],[12,"st_atime","","",64,null],[12,"st_atime_nsec","","",64,null],[12,"st_mtime","","",64,null],[12,"st_mtime_nsec","","",64,null],[12,"st_ctime","","",64,null],[12,"st_ctime_nsec","","",64,null],[3,"stat64","","",null,null],[12,"st_dev","","",65,null],[12,"st_ino","","",65,null],[12,"st_nlink","","",65,null],[12,"st_mode","","",65,null],[12,"st_uid","","",65,null],[12,"st_gid","","",65,null],[12,"st_rdev","","",65,null],[12,"st_size","","",65,null],[12,"st_blksize","","",65,null],[12,"st_blocks","","",65,null],[12,"st_atime","","",65,null],[12,"st_atime_nsec","","",65,null],[12,"st_mtime","","",65,null],[12,"st_mtime_nsec","","",65,null],[12,"st_ctime","","",65,null],[12,"st_ctime_nsec","","",65,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",66,null],[12,"exponent","","",66,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",67,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",68,null],[12,"swd","","",68,null],[12,"ftw","","",68,null],[12,"fop","","",68,null],[12,"rip","","",68,null],[12,"rdp","","",68,null],[12,"mxcsr","","",68,null],[12,"mxcr_mask","","",68,null],[12,"_st","","",68,null],[12,"_xmm","","",68,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",69,null],[12,"swd","","",69,null],[12,"ftw","","",69,null],[12,"fop","","",69,null],[12,"rip","","",69,null],[12,"rdp","","",69,null],[12,"mxcsr","","",69,null],[12,"mxcr_mask","","",69,null],[12,"st_space","","",69,null],[12,"xmm_space","","",69,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",70,null],[12,"r14","","",70,null],[12,"r13","","",70,null],[12,"r12","","",70,null],[12,"rbp","","",70,null],[12,"rbx","","",70,null],[12,"r11","","",70,null],[12,"r10","","",70,null],[12,"r9","","",70,null],[12,"r8","","",70,null],[12,"rax","","",70,null],[12,"rcx","","",70,null],[12,"rdx","","",70,null],[12,"rsi","","",70,null],[12,"rdi","","",70,null],[12,"orig_rax","","",70,null],[12,"rip","","",70,null],[12,"cs","","",70,null],[12,"eflags","","",70,null],[12,"rsp","","",70,null],[12,"ss","","",70,null],[12,"fs_base","","",70,null],[12,"gs_base","","",70,null],[12,"ds","","",70,null],[12,"es","","",70,null],[12,"fs","","",70,null],[12,"gs","","",70,null],[3,"user","","",null,null],[12,"regs","","",71,null],[12,"u_fpvalid","","",71,null],[12,"i387","","",71,null],[12,"u_tsize","","",71,null],[12,"u_dsize","","",71,null],[12,"u_ssize","","",71,null],[12,"start_code","","",71,null],[12,"start_stack","","",71,null],[12,"signal","","",71,null],[12,"u_ar0","","",71,null],[12,"u_fpstate","","",71,null],[12,"magic","","",71,null],[12,"u_comm","","",71,null],[12,"u_debugreg","","",71,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",72,null],[12,"fpregs","","",72,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",73,null],[12,"uc_link","","",73,null],[12,"uc_stack","","",73,null],[12,"uc_mcontext","","",73,null],[12,"uc_sigmask","","",73,null],[3,"ipc_perm","","",null,null],[12,"__key","","",74,null],[12,"uid","","",74,null],[12,"gid","","",74,null],[12,"cuid","","",74,null],[12,"cgid","","",74,null],[12,"mode","","",74,null],[12,"__seq","","",74,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",75,null],[12,"shm_segsz","","",75,null],[12,"shm_atime","","",75,null],[12,"shm_dtime","","",75,null],[12,"shm_ctime","","",75,null],[12,"shm_cpid","","",75,null],[12,"shm_lpid","","",75,null],[12,"shm_nattch","","",75,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_atfork","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"settimeofday","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"sched_setparam","","",null,null],[5,"sched_getparam","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"sigsuspend","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"personality","","",null,null],[5,"swapon","","",null,null],[5,"swapoff","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"wait4","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"ENOATTR","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message. This structure is primarily used as a parameter in the [`log`] method of the [`Log`] trait.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework.",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"self"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern using debug assertions.",null,null]],"paths":[]};
searchIndex["mime"] = {"doc":"Mime","items":[[3,"Mime","mime","A parsed mime or media type.",null,null],[3,"Name","","A section of a `Mime`.",null,null],[3,"FromStrError","","An error when parsing a `Mime` from a string.",null,null],[17,"STAR","","",null,null],[17,"TEXT","","text",null,null],[17,"IMAGE","","image",null,null],[17,"AUDIO","","audio",null,null],[17,"VIDEO","","video",null,null],[17,"APPLICATION","","application",null,null],[17,"MULTIPART","","multipart",null,null],[17,"MESSAGE","","message",null,null],[17,"MODEL","","model",null,null],[17,"FONT","","font",null,null],[17,"PLAIN","","plain",null,null],[17,"HTML","","html",null,null],[17,"XML","","xml",null,null],[17,"JAVASCRIPT","","javascript",null,null],[17,"CSS","","css",null,null],[17,"CSV","","csv",null,null],[17,"EVENT_STREAM","","event-stream",null,null],[17,"JSON","","json",null,null],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",null,null],[17,"MSGPACK","","msgpack",null,null],[17,"OCTET_STREAM","","octet-stream",null,null],[17,"FORM_DATA","","form-data",null,null],[17,"PNG","","png",null,null],[17,"GIF","","gif",null,null],[17,"BMP","","bmp",null,null],[17,"JPEG","","jpeg",null,null],[17,"BASIC","","basic",null,null],[17,"MPEG","","mpeg",null,null],[17,"MP4","","mp4",null,null],[17,"OGG","","ogg",null,null],[17,"CHARSET","","charset",null,null],[17,"BOUNDARY","","boundary",null,null],[17,"UTF_8","","utf-8",null,null],[17,"STAR_STAR","","/",null,null],[17,"TEXT_STAR","","text/*",null,null],[17,"TEXT_PLAIN","","text/plain",null,null],[17,"TEXT_PLAIN_UTF_8","","text/plain; charset=utf-8",null,null],[17,"TEXT_HTML","","text/html",null,null],[17,"TEXT_CSS","","text/css",null,null],[17,"TEXT_JAVASCRIPT","","text/javascript",null,null],[17,"TEXT_XML","","text/xml",null,null],[17,"TEXT_EVENT_STREAM","","text/event-stream",null,null],[17,"IMAGE_STAR","","image/*",null,null],[17,"IMAGE_JPEG","","image/jpeg",null,null],[17,"IMAGE_GIF","","image/gif",null,null],[17,"IMAGE_PNG","","image/png",null,null],[17,"IMAGE_BMP","","image/bmp",null,null],[17,"APPLICATION_JSON","","application/json",null,null],[17,"APPLICATION_WWW_FORM_URLENCODED","","application/x-www-form-urlencoded",null,null],[17,"APPLICATION_OCTET_STREAM","","application/octet-stream",null,null],[17,"APPLICATION_MSGPACK","","application/msgpack",null,null],[17,"MULTIPART_FORM_DATA","","multipart/form-data",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"name"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"type_","","Get the top level media type for this `Mime`.",0,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"subtype","","Get the subtype of this `Mime`.",0,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_param","","Look up a parameter by name.",0,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"mime"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"mime"}],"output":{"name":"ordering"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Mime"],[3,"Name"],[3,"FromStrError"]]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps.","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated [`Registration`].",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with `Poll`",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"pollopt"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"ordering"}}],[11,"empty","","Return a `PollOpt` representing no set options.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"edge","","Return a `PollOpt` representing edge-triggered notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"level","","Return a `PollOpt` representing level-triggered notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"is_edge","","Returns true if the options include edge-triggered notifications.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_level","","Returns true if the options include level-triggered notifications.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains","","Returns true if `self` is a superset of `other`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"insert","","Adds all options represented by `other` into `self`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":null}],[11,"remove","","Removes all options represented by `other` from `self`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":null}],[11,"bitor","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"bitxor","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"bitand","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"not","","",1,{"inputs":[{"name":"self"}],"output":{"name":"pollopt"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"ordering"}}],[11,"empty","","Returns the empty `Ready` set.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"readable","","Returns a `Ready` representing readable readiness.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"writable","","Returns a `Ready` representing writable readiness.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"is_empty","","Returns true if `Ready` is the empty set",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_readable","","Returns true if the value includes readable readiness",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_writable","","Returns true if the value includes writable readiness",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"remove","","Removes all options represented by `other` from `self`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"contains","","Returns true if `self` is a superset of `other`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"bitor","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"bitxor","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"bitand","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"not","","",2,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"setreadiness"}}],[11,"new","","Return a new `Poll` handle.",4,{"inputs":[],"output":{"name":"result"}}],[11,"register","","Register an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"poll","","Wait for readiness events",4,{"inputs":[{"name":"self"},{"name":"events"},{"name":"option"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity` events.",5,{"inputs":[{"name":"usize"}],"output":{"name":"events"}}],[11,"get","","Returns the `Event` at the given index, or `None` if the index is out of bounds.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","Returns the number of `Event` values currently in `self`.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the `Event` values.",5,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new2","","Create and return a new `Registration` and the associated `SetReadiness`.",6,null],[11,"register","","",6,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",6,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",6,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"readiness","","Returns the registration's current readiness.",3,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"set_readiness","","Set the registration's readiness",3,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"unixready"}],"output":{"name":"ready"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"token"}}],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a remote socket.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the specified address.",7,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpBuilder`, connecting it to the address specified.",7,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",7,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",7,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_bufs","","Read in a list of buffers all at once.",7,null],[11,"write_bufs","","Write a list of buffers all at once.",7,null],[11,"read","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"register","","",7,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",7,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",7,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Convenience method to bind a new TCP listener to the specified address to receive new connections.",8,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_listener","","Creates a new `TcpListener` from an instance of a `std::net::TcpListener` type.",8,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"register","","",8,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",8,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",8,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"into_raw_fd","","",7,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",7,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",7,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcpstream"}}],[11,"into_raw_fd","","",8,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",8,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",8,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcplistener"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a UDP socket from the given address.",9,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std socket.",9,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",9,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",9,null],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"connect","","Connects the UDP socket setting the default destination for `send()` and limiting packets that are read via `recv` from the address specified in `addr`.",9,{"inputs":[{"name":"self"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"register","","",9,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",9,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",9,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"into_raw_fd","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",9,{"inputs":[{"name":"rawfd"}],"output":{"name":"udpsocket"}}],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for [`RawFd`] providing an [`Evented`] implementation.",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"clone","mio::event","",12,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Event` containing `readiness` and `token`",12,{"inputs":[{"name":"ready"},{"name":"token"}],"output":{"name":"event"}}],[11,"readiness","","Returns the event's readiness.",12,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"token","","Returns the event's token.",12,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","mio::unix","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"register","","",11,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",11,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",11,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unixready"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"ordering"}}],[11,"aio","","Returns a `Ready` representing AIO completion readiness",14,{"inputs":[],"output":{"name":"unixready"}}],[11,"error","","Returns a `Ready` representing error readiness.",14,{"inputs":[],"output":{"name":"unixready"}}],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,{"inputs":[],"output":{"name":"unixready"}}],[11,"is_aio","","Returns true if `Ready` contains AIO readiness",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","","Returns true if the value includes error readiness",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_hup","","Returns true if the value includes HUP readiness",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",14,{"inputs":[{"name":"ready"}],"output":{"name":"unixready"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"bitor","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"bitxor","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"bitand","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"sub","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"not","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unixready"}}]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"listen","","Mark a socket as ready to accept incoming connection requests using accept()",0,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"connect","","Initiate a connection on this socket to the specified address.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_raw_fd","","",0,{"inputs":[{"name":"c_int"}],"output":{"name":"tcpbuilder"}}],[11,"as_raw_fd","","",0,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_raw_fd","","",1,{"inputs":[{"name":"c_int"}],"output":{"name":"udpbuilder"}}],[11,"as_raw_fd","","",1,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"reuse_port","net2","",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_port","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"reuse_port","","",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_port","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so the amount of milliseconds between them.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection to the host specified by `addr`.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and `recv` syscalls to be used to send data and also applies filters to only receive data from the specified address.",6,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is connected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["num_cpus"] = {"doc":"num_cpus","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["openssl"] = {"doc":"","items":[[5,"init","openssl","",null,null],[0,"aes","","Low level AES functionality",null,null],[3,"KeyError","openssl::aes","",null,null],[3,"AesKey","","",null,null],[5,"aes_ige","","Performs AES IGE encryption or decryption",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_encrypt","","Prepares a key for encryption.",1,null],[11,"new_decrypt","","Prepares a key for decryption.",1,null],[0,"asn1","openssl","",null,null],[3,"Asn1GeneralizedTime","openssl::asn1","",null,null],[3,"Asn1GeneralizedTimeRef","","",null,null],[3,"Asn1Time","","",null,null],[3,"Asn1TimeRef","","",null,null],[3,"Asn1String","","",null,null],[3,"Asn1StringRef","","",null,null],[3,"Asn1Integer","","",null,null],[3,"Asn1IntegerRef","","",null,null],[3,"Asn1BitString","","",null,null],[3,"Asn1BitStringRef","","",null,null],[3,"Asn1Object","","",null,null],[3,"Asn1ObjectRef","","",null,null],[11,"from_ptr","","",2,null],[11,"as_ptr","","",2,null],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","",4,null],[11,"as_ptr","","",4,null],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"days_from_now","","Creates a new time on specified interval in days from now",4,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"from_ptr","","",6,null],[11,"as_ptr","","",6,null],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"as_utf8","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"as_slice","","",7,null],[11,"len","","",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_ptr","","",8,null],[11,"as_ptr","","",8,null],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"get","","",9,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"set","","",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"from_ptr","","",10,null],[11,"as_ptr","","",10,null],[11,"drop","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"deref_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"as_slice","","",11,null],[11,"len","","",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_ptr","","",12,null],[11,"as_ptr","","",12,null],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"deref_mut","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"nid","","Returns the NID associated with this OID.",13,{"inputs":[{"name":"self"}],"output":{"name":"nid"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"bn","openssl","",null,null],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",null,null],[3,"BigNumContext","","",null,null],[3,"BigNumContextRef","","",null,null],[3,"BigNum","","",null,null],[3,"BigNumRef","","",null,null],[17,"MSB_MAYBE_ZERO","","The most significant bit of the number may be 0.",null,null],[17,"MSB_ONE","","The most significant bit of the number must be 1.",null,null],[17,"TWO_MSB_ONE","","The most significant two bits of the number must be 1.",null,null],[11,"from_ptr","","",14,null],[11,"as_ptr","","",14,null],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"new","","Returns a new `BigNumContext`.",14,{"inputs":[],"output":{"name":"result"}}],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"add_word","","Adds a `u32` to `self`.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"sub_word","","Subtracts a `u32` from `self`.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"mul_word","","Multiplies a `u32` by `self`.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"mod_word","","Returns the result of `self` modulo `w`.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"rand_range","","Places a cryptographically-secure pseudo-random number nonnegative number less than `self` in `rnd`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",15,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &= ~(1 << n)`.",15,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",15,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",15,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"lshift1","","Places `a << 1` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"rshift1","","Places `a >> 1` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"checked_add","","Places `a + b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"checked_sub","","Places `a - b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"}],"output":{"name":"result"}}],[11,"lshift","","Places `a << n` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"i32"}],"output":{"name":"result"}}],[11,"rshift","","Places `a >> n` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"i32"}],"output":{"name":"result"}}],[11,"to_owned","","",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_negative","","Sets the sign of `self`.",15,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"ordering"}}],[11,"is_negative","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"num_bits","","Returns the number of significant bits in `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"num_bytes","","Returns the size of `self` in bytes.",15,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"msboption"},{"name":"bool"}],"output":{"name":"result"}}],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"msboption"},{"name":"bool"}],"output":{"name":"result"}}],[11,"generate_prime","","Generates a prime number, placing it in `self`.",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"checked_mul","","Places the result of `a * b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"checked_div","","Places the result of `a / b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"checked_rem","","Places the result of `a % b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"sqr","","Places the result of `a²` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"nnmod","","Places the result of `a mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"exp","","Places the result of `a^p` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",15,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bignumcontextref"},{"name":"bool"}],"output":{"name":"result"}}],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"to_dec_str","","Returns a decimal string representation of `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_ptr","","",16,null],[11,"as_ptr","","",16,null],[11,"drop","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"deref_mut","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"new","","Creates a new `BigNum` with the value 0.",16,{"inputs":[],"output":{"name":"result"}}],[11,"from_u32","","Creates a new `BigNum` with the given value.",16,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get_rfc2409_prime_768","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc2409_prime_1024","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_1536","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_2048","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_3072","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_4096","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_6144","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_8192","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",16,null],[11,"as_ref","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"option"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"option"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"option"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"option"}}],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"neg","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bignum"}}],[0,"conf","openssl","",null,null],[3,"ConfMethod","openssl::conf","",null,null],[3,"Conf","","",null,null],[3,"ConfRef","","",null,null],[11,"default","","",17,{"inputs":[],"output":{"name":"confmethod"}}],[11,"from_ptr","","",17,null],[11,"as_ptr","","",17,null],[11,"from_ptr","","",18,null],[11,"as_ptr","","",18,null],[11,"drop","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"deref_mut","","",18,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"new","","",18,{"inputs":[{"name":"confmethod"}],"output":{"name":"result"}}],[0,"crypto","openssl","",null,null],[6,"CryptoString","openssl::crypto","",null,null],[0,"dh","openssl","",null,null],[3,"Dh","openssl::dh","",null,null],[3,"DhRef","","",null,null],[11,"from_ptr","","",19,null],[11,"as_ptr","","",19,null],[11,"drop","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"deref_mut","","",19,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"to_pem","","Serializes this value to PEM.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_der","","Serializes this value to DER.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_params","","",19,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",19,null],[11,"from_der","","Deserializes a value from DER-formatted data.",19,null],[0,"dsa","openssl","",null,null],[3,"Dsa","openssl::dsa","",null,null],[3,"DsaRef","","",null,null],[11,"from_ptr","","",21,null],[11,"as_ptr","","",21,null],[11,"drop","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",22,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"p","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"q","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"g","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"has_public_key","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_private_key","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"generate","","Generate a DSA key pair.",21,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",21,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",21,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",21,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",21,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",21,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",21,null],[11,"private_key_from_pem_cb","","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ec","openssl","",null,null],[3,"PointConversionForm","openssl::ec","",null,null],[3,"Asn1Flag","","",null,null],[3,"EcGroup","","",null,null],[3,"EcGroupRef","","",null,null],[3,"EcPoint","","",null,null],[3,"EcPointRef","","",null,null],[3,"EcKey","","",null,null],[3,"EcKeyRef","","",null,null],[3,"EcKeyBuilder","","",null,null],[3,"EcKeyBuilderRef","","",null,null],[17,"POINT_CONVERSION_COMPRESSED","","",null,null],[17,"POINT_CONVERSION_UNCOMPRESSED","","",null,null],[17,"POINT_CONVERSION_HYBRID","","",null,null],[17,"EXPLICIT_CURVE","","",null,null],[17,"NAMED_CURVE","","",null,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"pointconversionform"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"asn1flag"}}],[11,"from_ptr","","",25,null],[11,"as_ptr","","",25,null],[11,"drop","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"deref_mut","","",25,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"from_curve_name","","Returns the group of a standard named curve.",25,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s.",26,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s.",26,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"degree","","Returns the degree of the curve.",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"order","","Places the order of the curve in the provided `BigNum`.",26,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a named curve or must be explicitly parameterized.",26,{"inputs":[{"name":"self"},{"name":"asn1flag"}],"output":null}],[11,"from_ptr","","",27,null],[11,"as_ptr","","",27,null],[11,"drop","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"deref_mut","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"add","","Computes `a + b`, storing the result in `self`.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"ecpointref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mul","","Computes `q * m`, storing the result in `self`.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"ecpointref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"invert","","Inverts `self`.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"to_bytes","","Serializes the point to a binary representation.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"pointconversionform"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"eq","","Determines if this point is equal to another.",28,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"bignumcontextref"}],"output":{"name":"result"}}],[11,"new","","Creates a new point on the specified curve.",27,{"inputs":[{"name":"ecgroupref"}],"output":{"name":"result"}}],[11,"from_bytes","","",27,null],[11,"from_ptr","","",29,null],[11,"as_ptr","","",29,null],[11,"drop","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"deref_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",30,null],[11,"private_key_to_der","","Serializes the private key to DER.",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"group","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"public_key","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"private_key","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"check_key","","Checks the key for validity.",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_owned","","",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",29,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the associated `EcPoint`, public_key.",29,{"inputs":[{"name":"ecgroupref"},{"name":"ecpointref"}],"output":{"name":"result"}}],[11,"generate","","Generates a new public/private key pair on the specified curve.",29,{"inputs":[{"name":"ecgroupref"}],"output":{"name":"result"}}],[11,"new_by_curve_name","","",29,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",29,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",29,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",29,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",29,null],[11,"from_ptr","","",31,null],[11,"as_ptr","","",31,null],[11,"drop","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"deref_mut","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"result"}}],[11,"build","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckey"}}],[11,"set_group","","",32,{"inputs":[{"name":"self"},{"name":"ecgroupref"}],"output":{"name":"result"}}],[11,"set_public_key","","",32,{"inputs":[{"name":"self"},{"name":"ecpointref"}],"output":{"name":"result"}}],[11,"generate_key","","",32,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"ec_key","openssl","",null,null],[0,"error","","",null,null],[3,"ErrorStack","openssl::error","",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"errorstack"}}],[11,"get","","Returns the contents of the OpenSSL error stack.",33,{"inputs":[],"output":{"name":"errorstack"}}],[11,"errors","","Returns the errors in the stack.",33,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"get","","Returns the first error on the OpenSSL error stack.",34,{"inputs":[],"output":{"name":"option"}}],[11,"code","","Returns the raw OpenSSL error code for this error.",34,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"library","","Returns the name of the library reporting the error, if available.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"function","","Returns the name of the function reporting the error.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"reason","","Returns the reason for the error.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file which encountered the error.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","Returns the line in the source file which encountered the error.",34,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"data","","Returns additional data describing the error.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"hash","openssl","",null,null],[3,"MessageDigest","openssl::hash","",null,null],[3,"Hasher","","Provides message digest (hash) computation.",null,null],[3,"DigestBytes","","The resulting bytes of a digest.",null,null],[5,"hash","","",null,null],[5,"hash2","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"messagedigest"}}],[11,"md5","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha1","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha224","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha256","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha384","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha512","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"ripemd160","","",35,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"as_ptr","","",35,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",36,{"inputs":[{"name":"messagedigest"}],"output":{"name":"result"}}],[11,"update","","Feeds data into the hasher.",36,null],[11,"finish","","",36,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish2","","Returns the hash of the data written and resets the hasher.",36,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",36,null],[11,"flush","","",36,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"hasher"}}],[11,"drop","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"digestbytes"}}],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"as_ref","","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"memcmp","openssl","",null,null],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"nid","openssl","",null,null],[3,"Nid","openssl::nid","",null,null],[17,"UNDEF","","",null,null],[17,"ITU_T","","",null,null],[17,"CCITT","","",null,null],[17,"ISO","","",null,null],[17,"JOINT_ISO_ITU_T","","",null,null],[17,"JOINT_ISO_CCITT","","",null,null],[17,"MEMBER_BODY","","",null,null],[17,"IDENTIFIED_ORGANIZATION","","",null,null],[17,"HMAC_MD5","","",null,null],[17,"HMAC_SHA1","","",null,null],[17,"CERTICOM_ARC","","",null,null],[17,"INTERNATIONAL_ORGANIZATIONS","","",null,null],[17,"WAP","","",null,null],[17,"WAP_WSG","","",null,null],[17,"SELECTED_ATTRIBUTE_TYPES","","",null,null],[17,"CLEARANCE","","",null,null],[17,"ISO_US","","",null,null],[17,"X9_57","","",null,null],[17,"X9CM","","",null,null],[17,"DSA","","",null,null],[17,"DSAWITHSHA1","","",null,null],[17,"ANSI_X9_62","","",null,null],[17,"X9_62_PRIME_FIELD","","",null,null],[17,"X9_62_CHARACTERISTIC_TWO_FIELD","","",null,null],[17,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",null,null],[17,"X9_62_ONBASIS","","",null,null],[17,"X9_62_TPBASIS","","",null,null],[17,"X9_62_PPBASIS","","",null,null],[17,"X9_62_ID_ECPUBLICKEY","","",null,null],[17,"X9_62_C2PNB163V1","","",null,null],[17,"X9_62_C2PNB163V2","","",null,null],[17,"X9_62_C2PNB163V3","","",null,null],[17,"X9_62_C2PNB176V1","","",null,null],[17,"X9_62_C2TNB191V1","","",null,null],[17,"X9_62_C2TNB191V2","","",null,null],[17,"X9_62_C2TNB191V3","","",null,null],[17,"X9_62_C2ONB191V4","","",null,null],[17,"X9_62_C2ONB191V5","","",null,null],[17,"X9_62_C2PNB208W1","","",null,null],[17,"X9_62_C2TNB239V1","","",null,null],[17,"X9_62_C2TNB239V2","","",null,null],[17,"X9_62_C2TNB239V3","","",null,null],[17,"X9_62_C2ONB239V4","","",null,null],[17,"X9_62_C2ONB239V5","","",null,null],[17,"X9_62_C2PNB272W1","","",null,null],[17,"X9_62_C2PNB304W1","","",null,null],[17,"X9_62_C2TNB359V1","","",null,null],[17,"X9_62_C2PNB368W1","","",null,null],[17,"X9_62_C2TNB431R1","","",null,null],[17,"X9_62_PRIME192V1","","",null,null],[17,"X9_62_PRIME192V2","","",null,null],[17,"X9_62_PRIME192V3","","",null,null],[17,"X9_62_PRIME239V1","","",null,null],[17,"X9_62_PRIME239V2","","",null,null],[17,"X9_62_PRIME239V3","","",null,null],[17,"X9_62_PRIME256V1","","",null,null],[17,"ECDSA_WITH_SHA1","","",null,null],[17,"ECDSA_WITH_RECOMMENDED","","",null,null],[17,"ECDSA_WITH_SPECIFIED","","",null,null],[17,"ECDSA_WITH_SHA224","","",null,null],[17,"ECDSA_WITH_SHA256","","",null,null],[17,"ECDSA_WITH_SHA384","","",null,null],[17,"ECDSA_WITH_SHA512","","",null,null],[17,"SECP112R1","","",null,null],[17,"SECP112R2","","",null,null],[17,"SECP128R1","","",null,null],[17,"SECP128R2","","",null,null],[17,"SECP160K1","","",null,null],[17,"SECP160R1","","",null,null],[17,"SECP160R2","","",null,null],[17,"SECP192K1","","",null,null],[17,"SECP224K1","","",null,null],[17,"SECP224R1","","",null,null],[17,"SECP256K1","","",null,null],[17,"SECP384R1","","",null,null],[17,"SECP521R1","","",null,null],[17,"SECT113R1","","",null,null],[17,"SECT113R2","","",null,null],[17,"SECT131R1","","",null,null],[17,"SECT131R2","","",null,null],[17,"SECT163K1","","",null,null],[17,"SECT163R1","","",null,null],[17,"SECT163R2","","",null,null],[17,"SECT193R1","","",null,null],[17,"SECT193R2","","",null,null],[17,"SECT233K1","","",null,null],[17,"SECT233R1","","",null,null],[17,"SECT239K1","","",null,null],[17,"SECT283K1","","",null,null],[17,"SECT283R1","","",null,null],[17,"SECT409K1","","",null,null],[17,"SECT409R1","","",null,null],[17,"SECT571K1","","",null,null],[17,"SECT571R1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS3","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS4","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS5","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS6","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS7","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS8","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS9","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS10","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS11","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS12","","",null,null],[17,"CAST5_CBC","","",null,null],[17,"CAST5_ECB","","",null,null],[17,"CAST5_CFB64","","",null,null],[17,"CAST5_OFB64","","",null,null],[17,"PBEWITHMD5ANDCAST5_CBC","","",null,null],[17,"ID_PASSWORDBASEDMAC","","",null,null],[17,"ID_DHBASEDMAC","","",null,null],[17,"RSADSI","","",null,null],[17,"PKCS","","",null,null],[17,"PKCS1","","",null,null],[17,"RSAENCRYPTION","","",null,null],[17,"MD2WITHRSAENCRYPTION","","",null,null],[17,"MD4WITHRSAENCRYPTION","","",null,null],[17,"MD5WITHRSAENCRYPTION","","",null,null],[17,"SHA1WITHRSAENCRYPTION","","",null,null],[17,"RSAESOAEP","","",null,null],[17,"MGF1","","",null,null],[17,"RSASSAPSS","","",null,null],[17,"SHA256WITHRSAENCRYPTION","","",null,null],[17,"SHA384WITHRSAENCRYPTION","","",null,null],[17,"SHA512WITHRSAENCRYPTION","","",null,null],[17,"SHA224WITHRSAENCRYPTION","","",null,null],[17,"PKCS3","","",null,null],[17,"DHKEYAGREEMENT","","",null,null],[17,"PKCS5","","",null,null],[17,"PBEWITHMD2ANDDES_CBC","","",null,null],[17,"PBEWITHMD5ANDDES_CBC","","",null,null],[17,"PBEWITHMD2ANDRC2_CBC","","",null,null],[17,"PBEWITHMD5ANDRC2_CBC","","",null,null],[17,"PBEWITHSHA1ANDDES_CBC","","",null,null],[17,"PBEWITHSHA1ANDRC2_CBC","","",null,null],[17,"ID_PBKDF2","","",null,null],[17,"PBES2","","",null,null],[17,"PBMAC1","","",null,null],[17,"PKCS7","","",null,null],[17,"PKCS7_DATA","","",null,null],[17,"PKCS7_SIGNED","","",null,null],[17,"PKCS7_ENVELOPED","","",null,null],[17,"PKCS7_SIGNEDANDENVELOPED","","",null,null],[17,"PKCS7_DIGEST","","",null,null],[17,"PKCS7_ENCRYPTED","","",null,null],[17,"PKCS9","","",null,null],[17,"PKCS9_EMAILADDRESS","","",null,null],[17,"PKCS9_UNSTRUCTUREDNAME","","",null,null],[17,"PKCS9_CONTENTTYPE","","",null,null],[17,"PKCS9_MESSAGEDIGEST","","",null,null],[17,"PKCS9_SIGNINGTIME","","",null,null],[17,"PKCS9_COUNTERSIGNATURE","","",null,null],[17,"PKCS9_CHALLENGEPASSWORD","","",null,null],[17,"PKCS9_UNSTRUCTUREDADDRESS","","",null,null],[17,"PKCS9_EXTCERTATTRIBUTES","","",null,null],[17,"EXT_REQ","","",null,null],[17,"SMIMECAPABILITIES","","",null,null],[17,"SMIME","","",null,null],[17,"ID_SMIME_MOD","","",null,null],[17,"ID_SMIME_CT","","",null,null],[17,"ID_SMIME_AA","","",null,null],[17,"ID_SMIME_ALG","","",null,null],[17,"ID_SMIME_CD","","",null,null],[17,"ID_SMIME_SPQ","","",null,null],[17,"ID_SMIME_CTI","","",null,null],[17,"ID_SMIME_MOD_CMS","","",null,null],[17,"ID_SMIME_MOD_ESS","","",null,null],[17,"ID_SMIME_MOD_OID","","",null,null],[17,"ID_SMIME_MOD_MSG_V3","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",null,null],[17,"ID_SMIME_CT_RECEIPT","","",null,null],[17,"ID_SMIME_CT_AUTHDATA","","",null,null],[17,"ID_SMIME_CT_PUBLISHCERT","","",null,null],[17,"ID_SMIME_CT_TSTINFO","","",null,null],[17,"ID_SMIME_CT_TDTINFO","","",null,null],[17,"ID_SMIME_CT_CONTENTINFO","","",null,null],[17,"ID_SMIME_CT_DVCSREQUESTDATA","","",null,null],[17,"ID_SMIME_CT_DVCSRESPONSEDATA","","",null,null],[17,"ID_SMIME_CT_COMPRESSEDDATA","","",null,null],[17,"ID_CT_ASCIITEXTWITHCRLF","","",null,null],[17,"ID_SMIME_AA_RECEIPTREQUEST","","",null,null],[17,"ID_SMIME_AA_SECURITYLABEL","","",null,null],[17,"ID_SMIME_AA_MLEXPANDHISTORY","","",null,null],[17,"ID_SMIME_AA_CONTENTHINT","","",null,null],[17,"ID_SMIME_AA_MSGSIGDIGEST","","",null,null],[17,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",null,null],[17,"ID_SMIME_AA_CONTENTIDENTIFIER","","",null,null],[17,"ID_SMIME_AA_MACVALUE","","",null,null],[17,"ID_SMIME_AA_EQUIVALENTLABELS","","",null,null],[17,"ID_SMIME_AA_CONTENTREFERENCE","","",null,null],[17,"ID_SMIME_AA_ENCRYPKEYPREF","","",null,null],[17,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",null,null],[17,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",null,null],[17,"ID_SMIME_AA_TIMESTAMPTOKEN","","",null,null],[17,"ID_SMIME_AA_ETS_SIGPOLICYID","","",null,null],[17,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERATTR","","",null,null],[17,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",null,null],[17,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",null,null],[17,"ID_SMIME_AA_ETS_CERTVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",null,null],[17,"ID_SMIME_AA_SIGNATURETYPE","","",null,null],[17,"ID_SMIME_AA_DVCS_DVC","","",null,null],[17,"ID_SMIME_ALG_ESDHWITH3DES","","",null,null],[17,"ID_SMIME_ALG_ESDHWITHRC2","","",null,null],[17,"ID_SMIME_ALG_3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_RC2WRAP","","",null,null],[17,"ID_SMIME_ALG_ESDH","","",null,null],[17,"ID_SMIME_ALG_CMS3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_CMSRC2WRAP","","",null,null],[17,"ID_ALG_PWRI_KEK","","",null,null],[17,"ID_SMIME_CD_LDAP","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_URI","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",null,null],[17,"FRIENDLYNAME","","",null,null],[17,"LOCALKEYID","","",null,null],[17,"MS_CSP_NAME","","",null,null],[17,"LOCALKEYSET","","",null,null],[17,"X509CERTIFICATE","","",null,null],[17,"SDSICERTIFICATE","","",null,null],[17,"X509CRL","","",null,null],[17,"PBE_WITHSHA1AND128BITRC4","","",null,null],[17,"PBE_WITHSHA1AND40BITRC4","","",null,null],[17,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND128BITRC2_CBC","","",null,null],[17,"PBE_WITHSHA1AND40BITRC2_CBC","","",null,null],[17,"KEYBAG","","",null,null],[17,"PKCS8SHROUDEDKEYBAG","","",null,null],[17,"CERTBAG","","",null,null],[17,"CRLBAG","","",null,null],[17,"SECRETBAG","","",null,null],[17,"SAFECONTENTSBAG","","",null,null],[17,"MD2","","",null,null],[17,"MD4","","",null,null],[17,"MD5","","",null,null],[17,"MD5_SHA1","","",null,null],[17,"HMACWITHMD5","","",null,null],[17,"HMACWITHSHA1","","",null,null],[17,"HMACWITHSHA224","","",null,null],[17,"HMACWITHSHA256","","",null,null],[17,"HMACWITHSHA384","","",null,null],[17,"HMACWITHSHA512","","",null,null],[17,"RC2_CBC","","",null,null],[17,"RC2_ECB","","",null,null],[17,"RC2_CFB64","","",null,null],[17,"RC2_OFB64","","",null,null],[17,"RC2_40_CBC","","",null,null],[17,"RC2_64_CBC","","",null,null],[17,"RC4","","",null,null],[17,"RC4_40","","",null,null],[17,"DES_EDE3_CBC","","",null,null],[17,"RC5_CBC","","",null,null],[17,"RC5_ECB","","",null,null],[17,"RC5_CFB64","","",null,null],[17,"RC5_OFB64","","",null,null],[17,"MS_EXT_REQ","","",null,null],[17,"MS_CODE_IND","","",null,null],[17,"MS_CODE_COM","","",null,null],[17,"MS_CTL_SIGN","","",null,null],[17,"MS_SGC","","",null,null],[17,"MS_EFS","","",null,null],[17,"MS_SMARTCARD_LOGIN","","",null,null],[17,"MS_UPN","","",null,null],[17,"IDEA_CBC","","",null,null],[17,"IDEA_ECB","","",null,null],[17,"IDEA_CFB64","","",null,null],[17,"IDEA_OFB64","","",null,null],[17,"BF_CBC","","",null,null],[17,"BF_ECB","","",null,null],[17,"BF_CFB64","","",null,null],[17,"BF_OFB64","","",null,null],[17,"ID_PKIX","","",null,null],[17,"ID_PKIX_MOD","","",null,null],[17,"ID_PE","","",null,null],[17,"ID_QT","","",null,null],[17,"ID_KP","","",null,null],[17,"ID_IT","","",null,null],[17,"ID_PKIP","","",null,null],[17,"ID_ALG","","",null,null],[17,"ID_CMC","","",null,null],[17,"ID_ON","","",null,null],[17,"ID_PDA","","",null,null],[17,"ID_ACA","","",null,null],[17,"ID_QCS","","",null,null],[17,"ID_CCT","","",null,null],[17,"ID_PPL","","",null,null],[17,"ID_AD","","",null,null],[17,"ID_PKIX1_EXPLICIT_88","","",null,null],[17,"ID_PKIX1_IMPLICIT_88","","",null,null],[17,"ID_PKIX1_EXPLICIT_93","","",null,null],[17,"ID_PKIX1_IMPLICIT_93","","",null,null],[17,"ID_MOD_CRMF","","",null,null],[17,"ID_MOD_CMC","","",null,null],[17,"ID_MOD_KEA_PROFILE_88","","",null,null],[17,"ID_MOD_KEA_PROFILE_93","","",null,null],[17,"ID_MOD_CMP","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_88","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_93","","",null,null],[17,"ID_MOD_ATTRIBUTE_CERT","","",null,null],[17,"ID_MOD_TIMESTAMP_PROTOCOL","","",null,null],[17,"ID_MOD_OCSP","","",null,null],[17,"ID_MOD_DVCS","","",null,null],[17,"ID_MOD_CMP2000","","",null,null],[17,"INFO_ACCESS","","",null,null],[17,"BIOMETRICINFO","","",null,null],[17,"QCSTATEMENTS","","",null,null],[17,"AC_AUDITENTITY","","",null,null],[17,"AC_TARGETING","","",null,null],[17,"AACONTROLS","","",null,null],[17,"SBGP_IPADDRBLOCK","","",null,null],[17,"SBGP_AUTONOMOUSSYSNUM","","",null,null],[17,"SBGP_ROUTERIDENTIFIER","","",null,null],[17,"AC_PROXYING","","",null,null],[17,"SINFO_ACCESS","","",null,null],[17,"PROXYCERTINFO","","",null,null],[17,"ID_QT_CPS","","",null,null],[17,"ID_QT_UNOTICE","","",null,null],[17,"TEXTNOTICE","","",null,null],[17,"SERVER_AUTH","","",null,null],[17,"CLIENT_AUTH","","",null,null],[17,"CODE_SIGN","","",null,null],[17,"EMAIL_PROTECT","","",null,null],[17,"IPSECENDSYSTEM","","",null,null],[17,"IPSECTUNNEL","","",null,null],[17,"IPSECUSER","","",null,null],[17,"TIME_STAMP","","",null,null],[17,"OCSP_SIGN","","",null,null],[17,"DVCS","","",null,null],[17,"ID_IT_CAPROTENCCERT","","",null,null],[17,"ID_IT_SIGNKEYPAIRTYPES","","",null,null],[17,"ID_IT_ENCKEYPAIRTYPES","","",null,null],[17,"ID_IT_PREFERREDSYMMALG","","",null,null],[17,"ID_IT_CAKEYUPDATEINFO","","",null,null],[17,"ID_IT_CURRENTCRL","","",null,null],[17,"ID_IT_UNSUPPORTEDOIDS","","",null,null],[17,"ID_IT_SUBSCRIPTIONREQUEST","","",null,null],[17,"ID_IT_SUBSCRIPTIONRESPONSE","","",null,null],[17,"ID_IT_KEYPAIRPARAMREQ","","",null,null],[17,"ID_IT_KEYPAIRPARAMREP","","",null,null],[17,"ID_IT_REVPASSPHRASE","","",null,null],[17,"ID_IT_IMPLICITCONFIRM","","",null,null],[17,"ID_IT_CONFIRMWAITTIME","","",null,null],[17,"ID_IT_ORIGPKIMESSAGE","","",null,null],[17,"ID_IT_SUPPLANGTAGS","","",null,null],[17,"ID_REGCTRL","","",null,null],[17,"ID_REGINFO","","",null,null],[17,"ID_REGCTRL_REGTOKEN","","",null,null],[17,"ID_REGCTRL_AUTHENTICATOR","","",null,null],[17,"ID_REGCTRL_PKIPUBLICATIONINFO","","",null,null],[17,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",null,null],[17,"ID_REGCTRL_OLDCERTID","","",null,null],[17,"ID_REGCTRL_PROTOCOLENCRKEY","","",null,null],[17,"ID_REGINFO_UTF8PAIRS","","",null,null],[17,"ID_REGINFO_CERTREQ","","",null,null],[17,"ID_ALG_DES40","","",null,null],[17,"ID_ALG_NOSIGNATURE","","",null,null],[17,"ID_ALG_DH_SIG_HMAC_SHA1","","",null,null],[17,"ID_ALG_DH_POP","","",null,null],[17,"ID_CMC_STATUSINFO","","",null,null],[17,"ID_CMC_IDENTIFICATION","","",null,null],[17,"ID_CMC_IDENTITYPROOF","","",null,null],[17,"ID_CMC_DATARETURN","","",null,null],[17,"ID_CMC_TRANSACTIONID","","",null,null],[17,"ID_CMC_SENDERNONCE","","",null,null],[17,"ID_CMC_RECIPIENTNONCE","","",null,null],[17,"ID_CMC_ADDEXTENSIONS","","",null,null],[17,"ID_CMC_ENCRYPTEDPOP","","",null,null],[17,"ID_CMC_DECRYPTEDPOP","","",null,null],[17,"ID_CMC_LRAPOPWITNESS","","",null,null],[17,"ID_CMC_GETCERT","","",null,null],[17,"ID_CMC_GETCRL","","",null,null],[17,"ID_CMC_REVOKEREQUEST","","",null,null],[17,"ID_CMC_REGINFO","","",null,null],[17,"ID_CMC_RESPONSEINFO","","",null,null],[17,"ID_CMC_QUERYPENDING","","",null,null],[17,"ID_CMC_POPLINKRANDOM","","",null,null],[17,"ID_CMC_POPLINKWITNESS","","",null,null],[17,"ID_CMC_CONFIRMCERTACCEPTANCE","","",null,null],[17,"ID_ON_PERSONALDATA","","",null,null],[17,"ID_ON_PERMANENTIDENTIFIER","","",null,null],[17,"ID_PDA_DATEOFBIRTH","","",null,null],[17,"ID_PDA_PLACEOFBIRTH","","",null,null],[17,"ID_PDA_GENDER","","",null,null],[17,"ID_PDA_COUNTRYOFCITIZENSHIP","","",null,null],[17,"ID_PDA_COUNTRYOFRESIDENCE","","",null,null],[17,"ID_ACA_AUTHENTICATIONINFO","","",null,null],[17,"ID_ACA_ACCESSIDENTITY","","",null,null],[17,"ID_ACA_CHARGINGIDENTITY","","",null,null],[17,"ID_ACA_GROUP","","",null,null],[17,"ID_ACA_ROLE","","",null,null],[17,"ID_ACA_ENCATTRS","","",null,null],[17,"ID_QCS_PKIXQCSYNTAX_V1","","",null,null],[17,"ID_CCT_CRS","","",null,null],[17,"ID_CCT_PKIDATA","","",null,null],[17,"ID_CCT_PKIRESPONSE","","",null,null],[17,"ID_PPL_ANYLANGUAGE","","",null,null],[17,"ID_PPL_INHERITALL","","",null,null],[17,"INDEPENDENT","","",null,null],[17,"AD_OCSP","","",null,null],[17,"AD_CA_ISSUERS","","",null,null],[17,"AD_TIMESTAMPING","","",null,null],[17,"AD_DVCS","","",null,null],[17,"CAREPOSITORY","","",null,null],[17,"ID_PKIX_OCSP_BASIC","","",null,null],[17,"ID_PKIX_OCSP_NONCE","","",null,null],[17,"ID_PKIX_OCSP_CRLID","","",null,null],[17,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",null,null],[17,"ID_PKIX_OCSP_NOCHECK","","",null,null],[17,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",null,null],[17,"ID_PKIX_OCSP_SERVICELOCATOR","","",null,null],[17,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",null,null],[17,"ID_PKIX_OCSP_VALID","","",null,null],[17,"ID_PKIX_OCSP_PATH","","",null,null],[17,"ID_PKIX_OCSP_TRUSTROOT","","",null,null],[17,"ALGORITHM","","",null,null],[17,"MD5WITHRSA","","",null,null],[17,"DES_ECB","","",null,null],[17,"DES_CBC","","",null,null],[17,"DES_OFB64","","",null,null],[17,"DES_CFB64","","",null,null],[17,"RSASIGNATURE","","",null,null],[17,"DSA_2","","",null,null],[17,"DSAWITHSHA","","",null,null],[17,"SHAWITHRSAENCRYPTION","","",null,null],[17,"DES_EDE_ECB","","",null,null],[17,"DES_EDE3_ECB","","",null,null],[17,"DES_EDE_CBC","","",null,null],[17,"DES_EDE_CFB64","","",null,null],[17,"DES_EDE3_CFB64","","",null,null],[17,"DES_EDE_OFB64","","",null,null],[17,"DES_EDE3_OFB64","","",null,null],[17,"DESX_CBC","","",null,null],[17,"SHA","","",null,null],[17,"SHA1","","",null,null],[17,"DSAWITHSHA1_2","","",null,null],[17,"SHA1WITHRSA","","",null,null],[17,"RIPEMD160","","",null,null],[17,"RIPEMD160WITHRSA","","",null,null],[17,"SXNET","","",null,null],[17,"X500","","",null,null],[17,"X509","","",null,null],[17,"COMMONNAME","","",null,null],[17,"SURNAME","","",null,null],[17,"SERIALNUMBER","","",null,null],[17,"COUNTRYNAME","","",null,null],[17,"LOCALITYNAME","","",null,null],[17,"STATEORPROVINCENAME","","",null,null],[17,"STREETADDRESS","","",null,null],[17,"ORGANIZATIONNAME","","",null,null],[17,"ORGANIZATIONALUNITNAME","","",null,null],[17,"TITLE","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"SEARCHGUIDE","","",null,null],[17,"BUSINESSCATEGORY","","",null,null],[17,"POSTALADDRESS","","",null,null],[17,"POSTALCODE","","",null,null],[17,"POSTOFFICEBOX","","",null,null],[17,"PHYSICALDELIVERYOFFICENAME","","",null,null],[17,"TELEPHONENUMBER","","",null,null],[17,"TELEXNUMBER","","",null,null],[17,"TELETEXTERMINALIDENTIFIER","","",null,null],[17,"FACSIMILETELEPHONENUMBER","","",null,null],[17,"X121ADDRESS","","",null,null],[17,"INTERNATIONALISDNNUMBER","","",null,null],[17,"REGISTEREDADDRESS","","",null,null],[17,"DESTINATIONINDICATOR","","",null,null],[17,"PREFERREDDELIVERYMETHOD","","",null,null],[17,"PRESENTATIONADDRESS","","",null,null],[17,"SUPPORTEDAPPLICATIONCONTEXT","","",null,null],[17,"MEMBER","","",null,null],[17,"OWNER","","",null,null],[17,"ROLEOCCUPANT","","",null,null],[17,"SEEALSO","","",null,null],[17,"USERPASSWORD","","",null,null],[17,"USERCERTIFICATE","","",null,null],[17,"CACERTIFICATE","","",null,null],[17,"AUTHORITYREVOCATIONLIST","","",null,null],[17,"CERTIFICATEREVOCATIONLIST","","",null,null],[17,"CROSSCERTIFICATEPAIR","","",null,null],[17,"NAME","","",null,null],[17,"GIVENNAME","","",null,null],[17,"INITIALS","","",null,null],[17,"GENERATIONQUALIFIER","","",null,null],[17,"X500UNIQUEIDENTIFIER","","",null,null],[17,"DNQUALIFIER","","",null,null],[17,"ENHANCEDSEARCHGUIDE","","",null,null],[17,"PROTOCOLINFORMATION","","",null,null],[17,"DISTINGUISHEDNAME","","",null,null],[17,"UNIQUEMEMBER","","",null,null],[17,"HOUSEIDENTIFIER","","",null,null],[17,"SUPPORTEDALGORITHMS","","",null,null],[17,"DELTAREVOCATIONLIST","","",null,null],[17,"DMDNAME","","",null,null],[17,"PSEUDONYM","","",null,null],[17,"ROLE","","",null,null],[17,"X500ALGORITHMS","","",null,null],[17,"RSA","","",null,null],[17,"MDC2WITHRSA","","",null,null],[17,"MDC2","","",null,null],[17,"ID_CE","","",null,null],[17,"SUBJECT_DIRECTORY_ATTRIBUTES","","",null,null],[17,"SUBJECT_KEY_IDENTIFIER","","",null,null],[17,"KEY_USAGE","","",null,null],[17,"PRIVATE_KEY_USAGE_PERIOD","","",null,null],[17,"SUBJECT_ALT_NAME","","",null,null],[17,"ISSUER_ALT_NAME","","",null,null],[17,"BASIC_CONSTRAINTS","","",null,null],[17,"CRL_NUMBER","","",null,null],[17,"CRL_REASON","","",null,null],[17,"INVALIDITY_DATE","","",null,null],[17,"DELTA_CRL","","",null,null],[17,"ISSUING_DISTRIBUTION_POINT","","",null,null],[17,"CERTIFICATE_ISSUER","","",null,null],[17,"NAME_CONSTRAINTS","","",null,null],[17,"CRL_DISTRIBUTION_POINTS","","",null,null],[17,"CERTIFICATE_POLICIES","","",null,null],[17,"ANY_POLICY","","",null,null],[17,"POLICY_MAPPINGS","","",null,null],[17,"AUTHORITY_KEY_IDENTIFIER","","",null,null],[17,"POLICY_CONSTRAINTS","","",null,null],[17,"EXT_KEY_USAGE","","",null,null],[17,"FRESHEST_CRL","","",null,null],[17,"INHIBIT_ANY_POLICY","","",null,null],[17,"TARGET_INFORMATION","","",null,null],[17,"NO_REV_AVAIL","","",null,null],[17,"ANYEXTENDEDKEYUSAGE","","",null,null],[17,"NETSCAPE","","",null,null],[17,"NETSCAPE_CERT_EXTENSION","","",null,null],[17,"NETSCAPE_DATA_TYPE","","",null,null],[17,"NETSCAPE_CERT_TYPE","","",null,null],[17,"NETSCAPE_BASE_URL","","",null,null],[17,"NETSCAPE_REVOCATION_URL","","",null,null],[17,"NETSCAPE_CA_REVOCATION_URL","","",null,null],[17,"NETSCAPE_RENEWAL_URL","","",null,null],[17,"NETSCAPE_CA_POLICY_URL","","",null,null],[17,"NETSCAPE_SSL_SERVER_NAME","","",null,null],[17,"NETSCAPE_COMMENT","","",null,null],[17,"NETSCAPE_CERT_SEQUENCE","","",null,null],[17,"NS_SGC","","",null,null],[17,"ORG","","",null,null],[17,"DOD","","",null,null],[17,"IANA","","",null,null],[17,"DIRECTORY","","",null,null],[17,"MANAGEMENT","","",null,null],[17,"EXPERIMENTAL","","",null,null],[17,"PRIVATE","","",null,null],[17,"SECURITY","","",null,null],[17,"SNMPV2","","",null,null],[17,"MAIL","","",null,null],[17,"ENTERPRISES","","",null,null],[17,"DCOBJECT","","",null,null],[17,"MIME_MHS","","",null,null],[17,"MIME_MHS_HEADINGS","","",null,null],[17,"MIME_MHS_BODIES","","",null,null],[17,"ID_HEX_PARTIAL_MESSAGE","","",null,null],[17,"ID_HEX_MULTIPART_MESSAGE","","",null,null],[17,"ZLIB_COMPRESSION","","",null,null],[17,"AES_128_ECB","","",null,null],[17,"AES_128_CBC","","",null,null],[17,"AES_128_OFB128","","",null,null],[17,"AES_128_CFB128","","",null,null],[17,"ID_AES128_WRAP","","",null,null],[17,"AES_128_GCM","","",null,null],[17,"AES_128_CCM","","",null,null],[17,"ID_AES128_WRAP_PAD","","",null,null],[17,"AES_192_ECB","","",null,null],[17,"AES_192_CBC","","",null,null],[17,"AES_192_OFB128","","",null,null],[17,"AES_192_CFB128","","",null,null],[17,"ID_AES192_WRAP","","",null,null],[17,"AES_192_GCM","","",null,null],[17,"AES_192_CCM","","",null,null],[17,"ID_AES192_WRAP_PAD","","",null,null],[17,"AES_256_ECB","","",null,null],[17,"AES_256_CBC","","",null,null],[17,"AES_256_OFB128","","",null,null],[17,"AES_256_CFB128","","",null,null],[17,"ID_AES256_WRAP","","",null,null],[17,"AES_256_GCM","","",null,null],[17,"AES_256_CCM","","",null,null],[17,"ID_AES256_WRAP_PAD","","",null,null],[17,"AES_128_CFB1","","",null,null],[17,"AES_192_CFB1","","",null,null],[17,"AES_256_CFB1","","",null,null],[17,"AES_128_CFB8","","",null,null],[17,"AES_192_CFB8","","",null,null],[17,"AES_256_CFB8","","",null,null],[17,"AES_128_CTR","","",null,null],[17,"AES_192_CTR","","",null,null],[17,"AES_256_CTR","","",null,null],[17,"AES_128_XTS","","",null,null],[17,"AES_256_XTS","","",null,null],[17,"DES_CFB1","","",null,null],[17,"DES_CFB8","","",null,null],[17,"DES_EDE3_CFB1","","",null,null],[17,"DES_EDE3_CFB8","","",null,null],[17,"SHA256","","",null,null],[17,"SHA384","","",null,null],[17,"SHA512","","",null,null],[17,"SHA224","","",null,null],[17,"DSA_WITH_SHA224","","",null,null],[17,"DSA_WITH_SHA256","","",null,null],[17,"HOLD_INSTRUCTION_CODE","","",null,null],[17,"HOLD_INSTRUCTION_NONE","","",null,null],[17,"HOLD_INSTRUCTION_CALL_ISSUER","","",null,null],[17,"HOLD_INSTRUCTION_REJECT","","",null,null],[17,"DATA","","",null,null],[17,"PSS","","",null,null],[17,"UCL","","",null,null],[17,"PILOT","","",null,null],[17,"PILOTATTRIBUTETYPE","","",null,null],[17,"PILOTATTRIBUTESYNTAX","","",null,null],[17,"PILOTOBJECTCLASS","","",null,null],[17,"PILOTGROUPS","","",null,null],[17,"IA5STRINGSYNTAX","","",null,null],[17,"CASEIGNOREIA5STRINGSYNTAX","","",null,null],[17,"PILOTOBJECT","","",null,null],[17,"PILOTPERSON","","",null,null],[17,"ACCOUNT","","",null,null],[17,"DOCUMENT","","",null,null],[17,"ROOM","","",null,null],[17,"DOCUMENTSERIES","","",null,null],[17,"DOMAIN","","",null,null],[17,"RFC822LOCALPART","","",null,null],[17,"DNSDOMAIN","","",null,null],[17,"DOMAINRELATEDOBJECT","","",null,null],[17,"FRIENDLYCOUNTRY","","",null,null],[17,"SIMPLESECURITYOBJECT","","",null,null],[17,"PILOTORGANIZATION","","",null,null],[17,"PILOTDSA","","",null,null],[17,"QUALITYLABELLEDDATA","","",null,null],[17,"USERID","","",null,null],[17,"TEXTENCODEDORADDRESS","","",null,null],[17,"RFC822MAILBOX","","",null,null],[17,"INFO","","",null,null],[17,"FAVOURITEDRINK","","",null,null],[17,"ROOMNUMBER","","",null,null],[17,"PHOTO","","",null,null],[17,"USERCLASS","","",null,null],[17,"HOST","","",null,null],[17,"MANAGER","","",null,null],[17,"DOCUMENTIDENTIFIER","","",null,null],[17,"DOCUMENTTITLE","","",null,null],[17,"DOCUMENTVERSION","","",null,null],[17,"DOCUMENTAUTHOR","","",null,null],[17,"DOCUMENTLOCATION","","",null,null],[17,"HOMETELEPHONENUMBER","","",null,null],[17,"SECRETARY","","",null,null],[17,"OTHERMAILBOX","","",null,null],[17,"LASTMODIFIEDTIME","","",null,null],[17,"LASTMODIFIEDBY","","",null,null],[17,"DOMAINCOMPONENT","","",null,null],[17,"ARECORD","","",null,null],[17,"PILOTATTRIBUTETYPE27","","",null,null],[17,"MXRECORD","","",null,null],[17,"NSRECORD","","",null,null],[17,"SOARECORD","","",null,null],[17,"CNAMERECORD","","",null,null],[17,"ASSOCIATEDDOMAIN","","",null,null],[17,"ASSOCIATEDNAME","","",null,null],[17,"HOMEPOSTALADDRESS","","",null,null],[17,"PERSONALTITLE","","",null,null],[17,"MOBILETELEPHONENUMBER","","",null,null],[17,"PAGERTELEPHONENUMBER","","",null,null],[17,"FRIENDLYCOUNTRYNAME","","",null,null],[17,"ORGANIZATIONALSTATUS","","",null,null],[17,"JANETMAILBOX","","",null,null],[17,"MAILPREFERENCEOPTION","","",null,null],[17,"BUILDINGNAME","","",null,null],[17,"DSAQUALITY","","",null,null],[17,"SINGLELEVELQUALITY","","",null,null],[17,"SUBTREEMINIMUMQUALITY","","",null,null],[17,"SUBTREEMAXIMUMQUALITY","","",null,null],[17,"PERSONALSIGNATURE","","",null,null],[17,"DITREDIRECT","","",null,null],[17,"AUDIO","","",null,null],[17,"DOCUMENTPUBLISHER","","",null,null],[17,"ID_SET","","",null,null],[17,"SET_CTYPE","","",null,null],[17,"SET_MSGEXT","","",null,null],[17,"SET_ATTR","","",null,null],[17,"SET_POLICY","","",null,null],[17,"SET_CERTEXT","","",null,null],[17,"SET_BRAND","","",null,null],[17,"SETCT_PANDATA","","",null,null],[17,"SETCT_PANTOKEN","","",null,null],[17,"SETCT_PANONLY","","",null,null],[17,"SETCT_OIDATA","","",null,null],[17,"SETCT_PI","","",null,null],[17,"SETCT_PIDATA","","",null,null],[17,"SETCT_PIDATAUNSIGNED","","",null,null],[17,"SETCT_HODINPUT","","",null,null],[17,"SETCT_AUTHRESBAGGAGE","","",null,null],[17,"SETCT_AUTHREVREQBAGGAGE","","",null,null],[17,"SETCT_AUTHREVRESBAGGAGE","","",null,null],[17,"SETCT_CAPTOKENSEQ","","",null,null],[17,"SETCT_PINITRESDATA","","",null,null],[17,"SETCT_PI_TBS","","",null,null],[17,"SETCT_PRESDATA","","",null,null],[17,"SETCT_AUTHREQTBS","","",null,null],[17,"SETCT_AUTHRESTBS","","",null,null],[17,"SETCT_AUTHRESTBSX","","",null,null],[17,"SETCT_AUTHTOKENTBS","","",null,null],[17,"SETCT_CAPTOKENDATA","","",null,null],[17,"SETCT_CAPTOKENTBS","","",null,null],[17,"SETCT_ACQCARDCODEMSG","","",null,null],[17,"SETCT_AUTHREVREQTBS","","",null,null],[17,"SETCT_AUTHREVRESDATA","","",null,null],[17,"SETCT_AUTHREVRESTBS","","",null,null],[17,"SETCT_CAPREQTBS","","",null,null],[17,"SETCT_CAPREQTBSX","","",null,null],[17,"SETCT_CAPRESDATA","","",null,null],[17,"SETCT_CAPREVREQTBS","","",null,null],[17,"SETCT_CAPREVREQTBSX","","",null,null],[17,"SETCT_CAPREVRESDATA","","",null,null],[17,"SETCT_CREDREQTBS","","",null,null],[17,"SETCT_CREDREQTBSX","","",null,null],[17,"SETCT_CREDRESDATA","","",null,null],[17,"SETCT_CREDREVREQTBS","","",null,null],[17,"SETCT_CREDREVREQTBSX","","",null,null],[17,"SETCT_CREDREVRESDATA","","",null,null],[17,"SETCT_PCERTREQDATA","","",null,null],[17,"SETCT_PCERTRESTBS","","",null,null],[17,"SETCT_BATCHADMINREQDATA","","",null,null],[17,"SETCT_BATCHADMINRESDATA","","",null,null],[17,"SETCT_CARDCINITRESTBS","","",null,null],[17,"SETCT_MEAQCINITRESTBS","","",null,null],[17,"SETCT_REGFORMRESTBS","","",null,null],[17,"SETCT_CERTREQDATA","","",null,null],[17,"SETCT_CERTREQTBS","","",null,null],[17,"SETCT_CERTRESDATA","","",null,null],[17,"SETCT_CERTINQREQTBS","","",null,null],[17,"SETCT_ERRORTBS","","",null,null],[17,"SETCT_PIDUALSIGNEDTBE","","",null,null],[17,"SETCT_PIUNSIGNEDTBE","","",null,null],[17,"SETCT_AUTHREQTBE","","",null,null],[17,"SETCT_AUTHRESTBE","","",null,null],[17,"SETCT_AUTHRESTBEX","","",null,null],[17,"SETCT_AUTHTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBEX","","",null,null],[17,"SETCT_ACQCARDCODEMSGTBE","","",null,null],[17,"SETCT_AUTHREVREQTBE","","",null,null],[17,"SETCT_AUTHREVRESTBE","","",null,null],[17,"SETCT_AUTHREVRESTBEB","","",null,null],[17,"SETCT_CAPREQTBE","","",null,null],[17,"SETCT_CAPREQTBEX","","",null,null],[17,"SETCT_CAPRESTBE","","",null,null],[17,"SETCT_CAPREVREQTBE","","",null,null],[17,"SETCT_CAPREVREQTBEX","","",null,null],[17,"SETCT_CAPREVRESTBE","","",null,null],[17,"SETCT_CREDREQTBE","","",null,null],[17,"SETCT_CREDREQTBEX","","",null,null],[17,"SETCT_CREDRESTBE","","",null,null],[17,"SETCT_CREDREVREQTBE","","",null,null],[17,"SETCT_CREDREVREQTBEX","","",null,null],[17,"SETCT_CREDREVRESTBE","","",null,null],[17,"SETCT_BATCHADMINREQTBE","","",null,null],[17,"SETCT_BATCHADMINRESTBE","","",null,null],[17,"SETCT_REGFORMREQTBE","","",null,null],[17,"SETCT_CERTREQTBE","","",null,null],[17,"SETCT_CERTREQTBEX","","",null,null],[17,"SETCT_CERTRESTBE","","",null,null],[17,"SETCT_CRLNOTIFICATIONTBS","","",null,null],[17,"SETCT_CRLNOTIFICATIONRESTBS","","",null,null],[17,"SETCT_BCIDISTRIBUTIONTBS","","",null,null],[17,"SETEXT_GENCRYPT","","",null,null],[17,"SETEXT_MIAUTH","","",null,null],[17,"SETEXT_PINSECURE","","",null,null],[17,"SETEXT_PINANY","","",null,null],[17,"SETEXT_TRACK2","","",null,null],[17,"SETEXT_CV","","",null,null],[17,"SET_POLICY_ROOT","","",null,null],[17,"SETCEXT_HASHEDROOT","","",null,null],[17,"SETCEXT_CERTTYPE","","",null,null],[17,"SETCEXT_MERCHDATA","","",null,null],[17,"SETCEXT_CCERTREQUIRED","","",null,null],[17,"SETCEXT_TUNNELING","","",null,null],[17,"SETCEXT_SETEXT","","",null,null],[17,"SETCEXT_SETQUALF","","",null,null],[17,"SETCEXT_PGWYCAPABILITIES","","",null,null],[17,"SETCEXT_TOKENIDENTIFIER","","",null,null],[17,"SETCEXT_TRACK2DATA","","",null,null],[17,"SETCEXT_TOKENTYPE","","",null,null],[17,"SETCEXT_ISSUERCAPABILITIES","","",null,null],[17,"SETATTR_CERT","","",null,null],[17,"SETATTR_PGWYCAP","","",null,null],[17,"SETATTR_TOKENTYPE","","",null,null],[17,"SETATTR_ISSCAP","","",null,null],[17,"SET_ROOTKEYTHUMB","","",null,null],[17,"SET_ADDPOLICY","","",null,null],[17,"SETATTR_TOKEN_EMV","","",null,null],[17,"SETATTR_TOKEN_B0PRIME","","",null,null],[17,"SETATTR_ISSCAP_CVM","","",null,null],[17,"SETATTR_ISSCAP_T2","","",null,null],[17,"SETATTR_ISSCAP_SIG","","",null,null],[17,"SETATTR_GENCRYPTGRM","","",null,null],[17,"SETATTR_T2ENC","","",null,null],[17,"SETATTR_T2CLEARTXT","","",null,null],[17,"SETATTR_TOKICCSIG","","",null,null],[17,"SETATTR_SECDEVSIG","","",null,null],[17,"SET_BRAND_IATA_ATA","","",null,null],[17,"SET_BRAND_DINERS","","",null,null],[17,"SET_BRAND_AMERICANEXPRESS","","",null,null],[17,"SET_BRAND_JCB","","",null,null],[17,"SET_BRAND_VISA","","",null,null],[17,"SET_BRAND_MASTERCARD","","",null,null],[17,"SET_BRAND_NOVUS","","",null,null],[17,"DES_CDMF","","",null,null],[17,"RSAOAEPENCRYPTIONSET","","",null,null],[17,"IPSEC3","","",null,null],[17,"IPSEC4","","",null,null],[17,"WHIRLPOOL","","",null,null],[17,"CRYPTOPRO","","",null,null],[17,"CRYPTOCOM","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",null,null],[17,"ID_GOSTR3411_94","","",null,null],[17,"ID_HMACGOSTR3411_94","","",null,null],[17,"ID_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3410_94","","",null,null],[17,"ID_GOST28147_89","","",null,null],[17,"GOST89_CNT","","",null,null],[17,"ID_GOST28147_89_MAC","","",null,null],[17,"ID_GOSTR3411_94_PRF","","",null,null],[17,"ID_GOSTR3410_2001DH","","",null,null],[17,"ID_GOSTR3410_94DH","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",null,null],[17,"ID_GOST28147_89_NONE_KEYMESHING","","",null,null],[17,"ID_GOSTR3411_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",null,null],[17,"ID_GOST28147_89_TESTPARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_A","","",null,null],[17,"ID_GOSTR3410_94_ABIS","","",null,null],[17,"ID_GOSTR3410_94_B","","",null,null],[17,"ID_GOSTR3410_94_BBIS","","",null,null],[17,"ID_GOST28147_89_CC","","",null,null],[17,"ID_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3410_2001_PARAMSET_CC","","",null,null],[17,"CAMELLIA_128_CBC","","",null,null],[17,"CAMELLIA_192_CBC","","",null,null],[17,"CAMELLIA_256_CBC","","",null,null],[17,"ID_CAMELLIA128_WRAP","","",null,null],[17,"ID_CAMELLIA192_WRAP","","",null,null],[17,"ID_CAMELLIA256_WRAP","","",null,null],[17,"CAMELLIA_128_ECB","","",null,null],[17,"CAMELLIA_128_OFB128","","",null,null],[17,"CAMELLIA_128_CFB128","","",null,null],[17,"CAMELLIA_192_ECB","","",null,null],[17,"CAMELLIA_192_OFB128","","",null,null],[17,"CAMELLIA_192_CFB128","","",null,null],[17,"CAMELLIA_256_ECB","","",null,null],[17,"CAMELLIA_256_OFB128","","",null,null],[17,"CAMELLIA_256_CFB128","","",null,null],[17,"CAMELLIA_128_CFB1","","",null,null],[17,"CAMELLIA_192_CFB1","","",null,null],[17,"CAMELLIA_256_CFB1","","",null,null],[17,"CAMELLIA_128_CFB8","","",null,null],[17,"CAMELLIA_192_CFB8","","",null,null],[17,"CAMELLIA_256_CFB8","","",null,null],[17,"KISA","","",null,null],[17,"SEED_ECB","","",null,null],[17,"SEED_CBC","","",null,null],[17,"SEED_CFB128","","",null,null],[17,"SEED_OFB128","","",null,null],[17,"HMAC","","",null,null],[17,"CMAC","","",null,null],[17,"RC4_HMAC_MD5","","",null,null],[17,"AES_128_CBC_HMAC_SHA1","","",null,null],[17,"AES_192_CBC_HMAC_SHA1","","",null,null],[17,"AES_256_CBC_HMAC_SHA1","","",null,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"nid"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"from_raw","","",38,{"inputs":[{"name":"c_int"}],"output":{"name":"nid"}}],[11,"as_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[0,"ocsp","openssl","",null,null],[3,"Flag","openssl::ocsp","",null,null],[3,"OcspResponseStatus","","",null,null],[3,"OcspCertStatus","","",null,null],[3,"OcspRevokedStatus","","",null,null],[3,"Status","","",null,null],[12,"status","","The overall status of the response.",39,null],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the revocation.",39,null],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which the certificate was revoked.",39,null],[12,"this_update","","The time that this revocation check was performed.",39,null],[12,"next_update","","The time at which this revocation check expires.",39,null],[3,"OcspBasicResponse","","",null,null],[3,"OcspBasicResponseRef","","",null,null],[3,"OcspCertId","","",null,null],[3,"OcspCertIdRef","","",null,null],[3,"OcspResponse","","",null,null],[3,"OcspResponseRef","","",null,null],[3,"OcspRequest","","",null,null],[3,"OcspRequestRef","","",null,null],[3,"OcspOneReq","","",null,null],[3,"OcspOneReqRef","","",null,null],[17,"FLAG_NO_CERTS","","",null,null],[17,"FLAG_NO_INTERN","","",null,null],[17,"FLAG_NO_CHAIN","","",null,null],[17,"FLAG_NO_VERIFY","","",null,null],[17,"FLAG_NO_EXPLICIT","","",null,null],[17,"FLAG_NO_CA_SIGN","","",null,null],[17,"FLAG_NO_DELEGATED","","",null,null],[17,"FLAG_NO_CHECKS","","",null,null],[17,"FLAG_TRUST_OTHER","","",null,null],[17,"FLAG_RESPID_KEY","","",null,null],[17,"FLAG_NO_TIME","","",null,null],[17,"RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"RESPONSE_STATUS_MALFORMED_REQUEST","","",null,null],[17,"RESPONSE_STATUS_INTERNAL_ERROR","","",null,null],[17,"RESPONSE_STATUS_TRY_LATER","","",null,null],[17,"RESPONSE_STATUS_SIG_REQUIRED","","",null,null],[17,"RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"CERT_STATUS_GOOD","","",null,null],[17,"CERT_STATUS_REVOKED","","",null,null],[17,"CERT_STATUS_UNKNOWN","","",null,null],[17,"REVOKED_STATUS_NO_STATUS","","",null,null],[17,"REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"REVOKED_STATUS_KEY_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_CA_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_AFFILIATION_CHANGED","","",null,null],[17,"REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"REVOKED_STATUS_CESSATION_OF_OPERATION","","",null,null],[17,"REVOKED_STATUS_CERTIFICATE_HOLD","","",null,null],[17,"REVOKED_STATUS_REMOVE_FROM_CRL","","",null,null],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"flag"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"cmp","","",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"ordering"}}],[11,"hash","","",40,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",40,{"inputs":[],"output":{"name":"flag"}}],[11,"all","","Returns the set containing all flags.",40,{"inputs":[],"output":{"name":"flag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",40,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",40,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",40,{"inputs":[{"name":"c_ulong"}],"output":{"name":"flag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",40,{"inputs":[{"name":"self"},{"name":"flag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitor_assign","","Adds the set of flags.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitxor_assign","","Toggles the set of flags.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",40,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",40,{"inputs":[{"name":"self"}],"output":{"name":"flag"}}],[11,"extend","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",40,{"inputs":[{"name":"t"}],"output":{"name":"flag"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponsestatus"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"ocspresponsestatus"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"ocspresponsestatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",41,{"inputs":[{"name":"c_int"}],"output":{"name":"ocspresponsestatus"}}],[11,"as_raw","","",41,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertstatus"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"ocspcertstatus"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"ocspcertstatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",42,{"inputs":[{"name":"c_int"}],"output":{"name":"ocspcertstatus"}}],[11,"as_raw","","",42,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"ocsprevokedstatus"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"ocsprevokedstatus"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"ocsprevokedstatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",43,{"inputs":[{"name":"c_int"}],"output":{"name":"ocsprevokedstatus"}}],[11,"as_raw","","",43,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"check_validity","","Checks validity of the `this_update` and `next_update` fields.",39,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"}],"output":{"name":"result"}}],[11,"from_ptr","","",44,null],[11,"as_ptr","","",44,null],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"deref_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"verify","","Verifies the validity of the response.",45,{"inputs":[{"name":"self"},{"name":"stackref"},{"name":"x509storeref"},{"name":"flag"}],"output":{"name":"result"}}],[11,"find_status","","Looks up the status for the specified certificate ID.",45,{"inputs":[{"name":"self"},{"name":"ocspcertidref"}],"output":{"name":"option"}}],[11,"from_ptr","","",46,null],[11,"as_ptr","","",46,null],[11,"drop","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"deref_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",46,{"inputs":[{"name":"messagedigest"},{"name":"x509ref"},{"name":"x509ref"}],"output":{"name":"result"}}],[11,"from_ptr","","",47,null],[11,"as_ptr","","",47,null],[11,"drop","","",47,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"deref_mut","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"create","","Creates an OCSP response from the status and optional body.",47,{"inputs":[{"name":"ocspresponsestatus"},{"name":"option"}],"output":{"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",47,null],[11,"to_der","","Serializes this value to DER.",48,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"status","","Returns the status of the response.",48,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponsestatus"}}],[11,"basic","","Returns the basic response.",48,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_ptr","","",49,null],[11,"as_ptr","","",49,null],[11,"drop","","",49,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"new","","",49,{"inputs":[],"output":{"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",49,null],[11,"to_der","","Serializes this value to DER.",50,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"add_id","","",50,{"inputs":[{"name":"self"},{"name":"ocspcertid"}],"output":{"name":"result"}}],[11,"from_ptr","","",51,null],[11,"as_ptr","","",51,null],[11,"drop","","",51,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",51,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[11,"deref_mut","","",51,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[0,"pkcs12","openssl","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::pkcs12","",null,null],[3,"Pkcs12Ref","","",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",52,null],[12,"cert","","",52,null],[12,"chain","","",52,null],[3,"Pkcs12Builder","","",null,null],[11,"from_ptr","","",53,null],[11,"as_ptr","","",53,null],[11,"drop","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",53,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"deref_mut","","",53,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"to_der","","Serializes this value to DER.",54,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"parse","","Extracts the contents of the `Pkcs12`.",54,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",53,null],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",53,{"inputs":[],"output":{"name":"pkcs12builder"}}],[11,"key_algorithm","","The encryption algorithm that should be used for the key",55,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"self"}}],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",55,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"self"}}],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"ca","","An additional set of certificates to include in the archive beyond the one provided to `build`.",55,{"inputs":[{"name":"self"},{"name":"stack"}],"output":{"name":"self"}}],[11,"build","","Builds the PKCS #12 object",55,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"pkeyref"},{"name":"x509"}],"output":{"name":"result"}}],[0,"pkcs5","openssl","",null,null],[3,"KeyIvPair","openssl::pkcs5","",null,null],[12,"key","","",56,null],[12,"iv","","",56,null],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",null,null],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"keyivpair"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"hash","","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"pkey","openssl","",null,null],[3,"PKey","openssl::pkey","",null,null],[3,"PKeyRef","","",null,null],[3,"PKeyCtx","","",null,null],[3,"PKeyCtxRef","","",null,null],[11,"from_ptr","","",57,null],[11,"as_ptr","","",57,null],[11,"drop","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"deref_mut","","",57,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"rsa","","Returns a copy of the internal RSA key.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"dsa","","Returns a copy of the internal DSA key.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"dh","","Returns a copy of the internal DH key.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"public_key_to_pem","","Serializes a public key to PEM.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",58,null],[11,"private_key_to_der","","Serializes the private key to DER.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"bits","","Returns the size of the key.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"public_eq","","Compares the public component of this key with another.",58,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"bool"}}],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",57,{"inputs":[{"name":"rsa"}],"output":{"name":"result"}}],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",57,{"inputs":[{"name":"dsa"}],"output":{"name":"result"}}],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",57,{"inputs":[{"name":"dh"}],"output":{"name":"result"}}],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",57,{"inputs":[{"name":"eckey"}],"output":{"name":"result"}}],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",57,null],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",57,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",57,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",57,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",57,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",57,null],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password if the key is encrpyted.",57,null],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is encrypted.",57,null],[11,"private_key_from_pem_cb","","",57,null],[11,"from_ptr","","",59,null],[11,"as_ptr","","",59,null],[11,"drop","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",59,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"deref_mut","","",59,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"from_pkey","","",59,{"inputs":[{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"set_rsa_padding","","",60,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"name":"result"}}],[11,"rsa_padding","","",60,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"derive_init","","",60,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"derive_set_peer","","",60,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"derive","","",60,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"rand","openssl","",null,null],[5,"rand_bytes","openssl::rand","",null,null],[0,"rsa","openssl","",null,null],[3,"Padding","openssl::rsa","Type of encryption padding to use.",null,null],[3,"Rsa","","",null,null],[3,"RsaRef","","",null,null],[17,"NO_PADDING","","",null,null],[17,"PKCS1_PADDING","","",null,null],[17,"PKCS1_OAEP_PADDING","","",null,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"padding"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"from_raw","","",61,{"inputs":[{"name":"c_int"}],"output":{"name":"padding"}}],[11,"as_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_ptr","","",62,null],[11,"as_ptr","","",62,null],[11,"drop","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",62,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"deref_mut","","",62,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",63,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"size","","",63,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",63,null],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",63,null],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",63,null],[11,"public_encrypt","","Encrypts data using the public key, returning the number of encrypted bytes.",63,null],[11,"n","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"d","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"e","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"p","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"q","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_public_components","","only useful for associating the key material directly with the key, it's safer to use the supplied load and save methods for DER formatted keys.",62,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",62,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"generate","","Generates a public/private key pair with the specified size.",62,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",62,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",62,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",62,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",62,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",62,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",62,null],[11,"private_key_from_pem_cb","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"sign","openssl","Message signatures.",null,null],[3,"Signer","openssl::sign","",null,null],[3,"Verifier","","",null,null],[11,"drop","","",64,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",64,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"pkey_ctx","","",64,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"pkey_ctx_mut","","",64,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"update","","",64,null],[11,"finish","","",64,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",64,null],[11,"flush","","",64,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",65,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",65,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"pkey_ctx","","",65,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"pkey_ctx_mut","","",65,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"update","","",65,null],[11,"finish","","",65,null],[11,"write","","",65,null],[11,"flush","","",65,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"sha","openssl","The SHA family of hashes.",null,null],[5,"sha1","openssl::sha","Computes the SHA1 hash of some data.",null,null],[5,"sha224","","Computes the SHA224 hash of some data.",null,null],[5,"sha256","","Computes the SHA256 hash of some data.",null,null],[5,"sha384","","Computes the SHA384 hash of some data.",null,null],[5,"sha512","","Computes the SHA512 hash of some data.",null,null],[0,"ssl","openssl","SSL/TLS support.",null,null],[3,"SslConnectorBuilder","openssl::ssl","A builder for `SslConnector`s.",null,null],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",null,null],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",null,null],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",null,null],[3,"ConnectConfiguration","","A type which allows for configuration of a client-side TLS session before connection.",null,null],[3,"SslOption","","",null,null],[3,"SslMode","","",null,null],[3,"SslMethod","","",null,null],[3,"SslVerifyMode","","",null,null],[3,"StatusType","","",null,null],[3,"SslContextBuilder","","A builder for `SslContext`s.",null,null],[3,"SslContext","","",null,null],[3,"SslContextRef","","",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",66,null],[12,"algorithm","","The number of bits processed by the chosen algorithm.",66,null],[3,"SslCipher","","",null,null],[3,"SslCipherRef","","",null,null],[3,"SslSession","","",null,null],[3,"SslSessionRef","","",null,null],[3,"Ssl","","",null,null],[3,"SslRef","","",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",67,null],[13,"WantRead","","An attempt to read data from the underlying socket returned `WouldBlock`. Wait for read readiness and reattempt the operation.",67,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned `WouldBlock`. Wait for write readiness and reattempt the operation.",67,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",67,null],[13,"Stream","","An error reported by the underlying stream.",67,null],[13,"Ssl","","An error in the OpenSSL library.",67,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"SetupFailure","","Setup failed.",68,null],[13,"Failure","","The handshake failed.",68,null],[13,"Interrupted","","The handshake was interrupted midway through. This error will never be returned for blocking streams.",68,null],[4,"SniError","","An error returned from an SNI callback.",null,null],[13,"Fatal","","",69,null],[13,"Warning","","",69,null],[13,"NoAck","","",69,null],[4,"ShutdownResult","","The result of a shutdown request.",null,null],[13,"Sent","","A close notify message has been sent to the peer.",70,null],[13,"Received","","A close notify response message has been received from the peer.",70,null],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",67,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",67,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",68,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",68,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",68,{"inputs":[{"name":"errorstack"}],"output":{"name":"handshakeerror"}}],[11,"new","","Creates a new builder for TLS connections.",71,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",71,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",71,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning a `SslConnector`.",71,{"inputs":[{"name":"self"}],"output":{"name":"sslconnector"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"sslconnector"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",72,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"name":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",72,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"configure","","Returns a structure allowing for configuration of a single TLS session before connection.",72,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"ssl","","Returns a shared reference to the inner `Ssl`.",73,{"inputs":[{"name":"self"}],"output":{"name":"ssl"}}],[11,"ssl_mut","","Returns a mutable reference to the inner `Ssl`.",73,{"inputs":[{"name":"self"}],"output":{"name":"ssl"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",73,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"name":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",73,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be considered a reasonable default choice.",74,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"name":"result"}}],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",74,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"name":"result"}}],[11,"mozilla_intermediate_raw","","Like `mozilla_intermediate`, but does not load the certificate chain and private key.",74,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"mozilla_modern_raw","","Like `mozilla_modern`, but does not load the certificate chain and private key.",74,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",74,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",74,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",74,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptor"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptor"}}],[11,"accept","","Initiates a server-side TLS session on a stream.",75,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server's certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server's certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate. Use together with SSL_VERIFY_PEER.",null,null],[17,"STATUS_TYPE_OCSP","","An OSCP status.",null,null],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"option"}}],[11,"lt","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"le","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"gt","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"ge","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"cmp","","",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ordering"}}],[11,"hash","","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",76,{"inputs":[],"output":{"name":"ssloption"}}],[11,"all","","Returns the set containing all flags.",76,{"inputs":[],"output":{"name":"ssloption"}}],[11,"bits","","Returns the raw value of the flags currently stored.",76,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",76,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",76,{"inputs":[{"name":"c_ulong"}],"output":{"name":"ssloption"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",76,{"inputs":[{"name":"self"},{"name":"ssloption"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitor_assign","","Adds the set of flags.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitxor_assign","","Toggles the set of flags.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"sub_assign","","Disables all flags enabled in the set.",76,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"extend","","",76,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",76,{"inputs":[{"name":"t"}],"output":{"name":"ssloption"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"sslmode"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"cmp","","",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"ordering"}}],[11,"hash","","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",77,{"inputs":[],"output":{"name":"sslmode"}}],[11,"all","","Returns the set containing all flags.",77,{"inputs":[],"output":{"name":"sslmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",77,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",77,{"inputs":[{"name":"c_long"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",77,{"inputs":[{"name":"c_long"}],"output":{"name":"sslmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",77,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",77,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",77,{"inputs":[{"name":"self"},{"name":"sslmode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitor_assign","","Adds the set of flags.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitxor_assign","","Toggles the set of flags.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",77,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",77,{"inputs":[{"name":"self"}],"output":{"name":"sslmode"}}],[11,"extend","","",77,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",77,{"inputs":[{"name":"t"}],"output":{"name":"sslmode"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"sslmethod"}}],[11,"tls","","Support all versions of the TLS protocol.",78,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"dtls","","Support all versions of the DTLS protocol.",78,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"from_ptr","","",78,null],[11,"as_ptr","","",78,null],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"sslverifymode"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"cmp","","",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"ordering"}}],[11,"hash","","",79,null],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",79,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",79,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",79,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",79,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitor_assign","","Adds the set of flags.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitxor_assign","","Toggles the set of flags.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",79,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",79,{"inputs":[{"name":"self"}],"output":{"name":"sslverifymode"}}],[11,"extend","","",79,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",79,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"statustype"}}],[11,"from_raw","","",80,{"inputs":[{"name":"c_int"}],"output":{"name":"statustype"}}],[11,"as_raw","","",80,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"drop","","",81,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",81,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"from_ptr","","",81,null],[11,"as_ptr","","",81,null],[11,"set_verify","","Configures the certificate verification method for new connections.",81,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set_verify_callback","","Configures the certificate verification method for new connections and registers a verification callback.",81,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"f"}],"output":null}],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",81,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_verify_depth","","Sets verification depth",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"set_read_ahead","","",81,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_mode","","",81,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"set_tmp_dh","","",81,{"inputs":[{"name":"self"},{"name":"dhref"}],"output":{"name":"result"}}],[11,"set_tmp_dh_callback","","",81,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_tmp_ecdh","","",81,{"inputs":[{"name":"self"},{"name":"eckeyref"}],"output":{"name":"result"}}],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",81,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ca_file","","Specifies the file that contains trusted CA certificates.",81,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"set_client_ca_list","","Sets the list of CAs sent to the client.",81,{"inputs":[{"name":"self"},{"name":"stack"}],"output":null}],[11,"set_session_id_context","","Set the context identifier for sessions",81,null],[11,"set_certificate_file","","Loads a certificate from a file.",81,{"inputs":[{"name":"self"},{"name":"p"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",81,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"set_certificate","","Sets the certificate.",81,{"inputs":[{"name":"self"},{"name":"x509ref"}],"output":{"name":"result"}}],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",81,{"inputs":[{"name":"self"},{"name":"x509"}],"output":{"name":"result"}}],[11,"set_private_key_file","","Loads the private key from a file.",81,{"inputs":[{"name":"self"},{"name":"p"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_private_key","","Sets the private key.",81,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"set_cipher_list","","Sets the cipher configuration.",81,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_options","","",81,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"options","","",81,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"clear_options","","",81,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols supported by the application).",81,null],[11,"check_private_key","","Checks consistency between the private key and certificate.",81,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"cert_store","","Returns a shared reference to the context's certificate store.",81,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate store.",81,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",81,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"build","","",81,{"inputs":[{"name":"self"}],"output":{"name":"sslcontext"}}],[11,"from_ptr","","",82,null],[11,"as_ptr","","",82,null],[11,"drop","","",82,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"deref_mut","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","",82,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"cert_store","","Returns the certificate store used for verification.",83,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"extra_chain_certs","","",83,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"from_ptr","","",84,null],[11,"as_ptr","","",84,null],[11,"deref","","",84,{"inputs":[{"name":"self"}],"output":{"name":"sslcipherref"}}],[11,"deref_mut","","",84,{"inputs":[{"name":"self"}],"output":{"name":"sslcipherref"}}],[11,"name","","Returns the name of cipher.",85,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",85,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"bits","","Returns the number of bits used for the cipher.",85,{"inputs":[{"name":"self"}],"output":{"name":"cipherbits"}}],[11,"description","","Returns a textual description of the cipher used",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"from_ptr","","",86,null],[11,"as_ptr","","",86,null],[11,"drop","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"sslsession"}}],[11,"borrow","","",86,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"to_owned","","",87,{"inputs":[{"name":"self"}],"output":{"name":"sslsession"}}],[11,"id","","Returns the SSL session ID.",87,null],[11,"master_key_len","","Returns the length of the master key.",87,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"master_key","","Copies the master key into the provided buffer.",87,null],[11,"from_ptr","","",88,null],[11,"as_ptr","","",88,null],[11,"drop","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"deref_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",89,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the handshake process.",89,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"f"}],"output":null}],[11,"set_tmp_dh","","",89,{"inputs":[{"name":"self"},{"name":"dhref"}],"output":{"name":"result"}}],[11,"set_tmp_dh_callback","","",89,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_tmp_ecdh","","",89,{"inputs":[{"name":"self"},{"name":"eckeyref"}],"output":{"name":"result"}}],[11,"current_cipher","","",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"state_string","","",89,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"state_string_long","","",89,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",89,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"peer_certificate","","Returns the certificate of the peer, if present.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"certificate","","Returns the certificate associated with this `Ssl`, if present.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"private_key","","Returns the private key associated with this `Ssl`, if present.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"version","","Returns the name of the protocol used for the connection, e.g. \"TLSv1.2\", \"SSLv3\", etc.",89,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS record.",89,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"compression","","Returns the compression currently in use.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"servername","","Returns the server's name for the current connection",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",89,{"inputs":[{"name":"self"},{"name":"sslcontextref"}],"output":{"name":"result"}}],[11,"ssl_context","","Returns the context corresponding to the current connection",89,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"verify_result","","Returns the result of X509 certificate verification.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"session","","Returns the SSL session.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_session","","Sets the session to be used.",89,{"inputs":[{"name":"self"},{"name":"sslsessionref"}],"output":{"name":"result"}}],[11,"session_reused","","Determines if the session provided to `set_session` was successfully reused.",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_status_type","","Sets the status response a client wishes the server to reply with.",89,{"inputs":[{"name":"self"},{"name":"statustype"}],"output":{"name":"result"}}],[11,"ocsp_status","","Returns the server's OCSP response, if present.",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",89,null],[11,"is_server","","Determines if this `Ssl` is configured for server-side or client-side use.",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",88,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",90,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"error","","Returns the underlying error which interrupted this handshake.",90,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"into_error","","Consumes `self`, returning its error.",90,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"handshake","","Restarts the handshake process.",90,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",91,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",91,null],[11,"shutdown","","Shuts down the session.",91,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",91,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"read","","",91,null],[11,"write","","",91,null],[11,"flush","","",91,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"shutdownresult"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"shutdownresult"}],"output":{"name":"bool"}}],[0,"stack","openssl","",null,null],[3,"Stack","openssl::stack","An owned stack of `T`.",null,null],[3,"IntoIter","","",null,null],[3,"StackRef","","",null,null],[3,"Iter","","An iterator over the stack's contents.",null,null],[3,"IterMut","","A mutable iterator over the stack's contents.",null,null],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",null,null],[16,"StackType","","The C stack type for this element.",92,null],[11,"new","","",93,{"inputs":[],"output":{"name":"result"}}],[11,"drop","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",93,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"as_ref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"borrow","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"from_ptr","","",93,null],[11,"as_ptr","","",93,null],[11,"deref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"deref_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"drop","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"len","","Returns the number of items in the stack",95,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","",95,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"get","","Returns a reference to the element at the given index in the stack or `None` if the index is out of bounds",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the element at the given index in the stack or `None` if the index is out of bounds",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"push","","Pushes a value onto the top of the stack.",95,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"pop","","Removes the last element from the stack and returns it.",95,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",95,null],[11,"index_mut","","",95,null],[11,"next","","",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next","","",97,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[0,"string","openssl","",null,null],[3,"OpensslString","openssl::string","",null,null],[3,"OpensslStringRef","","",null,null],[11,"from_ptr","","",98,null],[11,"as_ptr","","",98,null],[11,"drop","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"deref_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"from_raw_parts","","",98,null],[11,"from_null_terminated","","",98,null],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"symm","openssl","",null,null],[3,"Cipher","openssl::symm","",null,null],[3,"Crypter","","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",100,null],[13,"Decrypt","","",100,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the specified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the specified key and iv; returns the resulting (decrypted) data.",null,null],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",null,null],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",null,null],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"cipher"}}],[11,"aes_128_ecb","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cbc","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_xts","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_ctr","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb1","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb128","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb8","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_gcm","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ecb","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cbc","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_xts","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ctr","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb1","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb128","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb8","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_gcm","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cbc","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ecb","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cfb64","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ofb","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_cbc","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_ecb","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"rc4","","",101,{"inputs":[],"output":{"name":"cipher"}}],[11,"from_ptr","","",101,null],[11,"as_ptr","","",101,null],[11,"key_len","","Returns the length of keys used with this cipher.",101,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the cipher does not use an IV.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"block_size","","Returns the block size of the cipher.",101,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `Crypter`.",102,null],[11,"pad","","Enables or disables padding.",102,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",102,null],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",102,null],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted bytes into `output`.",102,null],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data to `output`.",102,null],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",102,null],[11,"drop","","",102,{"inputs":[{"name":"self"}],"output":null}],[0,"types","openssl","",null,null],[8,"OpenSslType","openssl::types","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",103,null],[16,"Ref","","The type representing a reference to this type.",103,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",103,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",103,null],[8,"OpenSslTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",104,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",104,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",104,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",104,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, \"OpenSSL 0.9.5a 1 Apr 2000\".",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form \"compiler: ...\" if available or \"compiler: information not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form \"built on: ...\" if available or \"built on: date not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The \"Configure\" target of the library build in the form \"platform: ...\" if available or \"platform: information not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form \"OPENSSLDIR: \"...\"\" if available or \"OPENSSLDIR: N/A\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[0,"x509","openssl","",null,null],[3,"X509FileType","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509StoreContextRef","","",null,null],[3,"X509Generator","","",null,null],[3,"X509Builder","","A builder type which can create `X509` objects.",null,null],[3,"X509","","",null,null],[3,"X509Ref","","",null,null],[3,"X509v3Context","","A context object required to construct certain X509 extension values.",null,null],[3,"X509Extension","","",null,null],[3,"X509ExtensionRef","","",null,null],[3,"X509NameBuilder","","",null,null],[3,"X509Name","","",null,null],[3,"X509NameRef","","",null,null],[3,"X509NameEntries","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509NameEntryRef","","",null,null],[3,"X509ReqBuilder","","",null,null],[3,"X509Req","","",null,null],[3,"X509ReqRef","","",null,null],[3,"X509VerifyError","","",null,null],[3,"GeneralName","","",null,null],[3,"GeneralNameRef","","",null,null],[3,"X509Algorithm","","",null,null],[3,"X509AlgorithmRef","","",null,null],[0,"extension","","",null,null],[3,"BasicConstraints","openssl::x509::extension","",null,null],[3,"KeyUsage","","",null,null],[3,"ExtendedKeyUsage","","",null,null],[3,"SubjectKeyIdentifier","","",null,null],[3,"AuthorityKeyIdentifier","","",null,null],[3,"SubjectAlternativeName","","",null,null],[4,"ExtensionType","","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",105,null],[13,"ExtKeyUsage","","",105,null],[13,"SubjectAltName","","",105,null],[13,"IssuerAltName","","",105,null],[13,"OtherNid","","",105,null],[13,"OtherStr","","",105,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",106,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",106,null],[13,"SubjectAltName","","Subject Alternative Names",106,null],[13,"IssuerAltName","","Issuer Alternative Names",106,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",106,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",106,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",107,null],[13,"NonRepudiation","","",107,null],[13,"KeyEncipherment","","",107,null],[13,"DataEncipherment","","",107,null],[13,"KeyAgreement","","",107,null],[13,"KeyCertSign","","",107,null],[13,"CRLSign","","",107,null],[13,"EncipherOnly","","",107,null],[13,"DecipherOnly","","",107,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",108,null],[13,"ClientAuth","","",108,null],[13,"CodeSigning","","",108,null],[13,"EmailProtection","","",108,null],[13,"TimeStamping","","",108,null],[13,"MsCodeInd","","",108,null],[13,"MsCodeCom","","",108,null],[13,"MsCtlSign","","",108,null],[13,"MsSgc","","",108,null],[13,"MsEfs","","",108,null],[13,"NsSgc","","",108,null],[13,"Other","","An arbitrary key usage by OID.",108,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",109,null],[13,"Email","","",109,null],[13,"DNS","","",109,null],[13,"Directory","","",109,null],[13,"URI","","",109,null],[13,"IPAddress","","",109,null],[13,"RegisteredID","","",109,null],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"extensiontype"}}],[11,"hash","","",105,null],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"self"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"extension"}}],[11,"get_type","","",106,{"inputs":[{"name":"self"}],"output":{"name":"extensiontype"}}],[11,"get_nid","","",105,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_name","","",105,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_string","","",106,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"keyusageoption"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"extkeyusageoption"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"altnameoption"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",110,{"inputs":[],"output":{"name":"basicconstraints"}}],[11,"critical","","",110,{"inputs":[{"name":"self"}],"output":{"name":"basicconstraints"}}],[11,"ca","","",110,{"inputs":[{"name":"self"}],"output":{"name":"basicconstraints"}}],[11,"pathlen","","",110,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"basicconstraints"}}],[11,"build","","",110,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",111,{"inputs":[],"output":{"name":"keyusage"}}],[11,"critical","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"digital_signature","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"non_repudiation","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_encipherment","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"data_encipherment","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_agreement","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_cert_sign","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"crl_sign","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"encipher_only","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"decipher_only","","",111,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"build","","",111,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",112,{"inputs":[],"output":{"name":"extendedkeyusage"}}],[11,"critical","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"server_auth","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"client_auth","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"code_signing","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"time_stamping","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_code_ind","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_code_com","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_ctl_sign","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_sgc","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_efs","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ns_sgc","","",112,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"other","","",112,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"extendedkeyusage"}}],[11,"build","","",112,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",113,{"inputs":[],"output":{"name":"subjectkeyidentifier"}}],[11,"critical","","",113,{"inputs":[{"name":"self"}],"output":{"name":"subjectkeyidentifier"}}],[11,"build","","",113,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"name":"result"}}],[11,"new","","",114,{"inputs":[],"output":{"name":"authoritykeyidentifier"}}],[11,"critical","","",114,{"inputs":[{"name":"self"}],"output":{"name":"authoritykeyidentifier"}}],[11,"keyid","","",114,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"authoritykeyidentifier"}}],[11,"issuer","","",114,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"authoritykeyidentifier"}}],[11,"build","","",114,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"name":"result"}}],[11,"new","","",115,{"inputs":[],"output":{"name":"subjectalternativename"}}],[11,"critical","","",115,{"inputs":[{"name":"self"}],"output":{"name":"subjectalternativename"}}],[11,"email","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"uri","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"dns","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"rid","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"ip","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"dir_name","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"other_name","","",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"build","","",115,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"name":"result"}}],[0,"store","openssl::x509","",null,null],[3,"X509StoreBuilder","openssl::x509::store","",null,null],[3,"X509StoreBuilderRef","","",null,null],[3,"X509Store","","",null,null],[3,"X509StoreRef","","",null,null],[11,"from_ptr","","",116,null],[11,"as_ptr","","",116,null],[11,"drop","","",116,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",116,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"deref_mut","","",116,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"new","","Returns a builder for a certificate store.",116,{"inputs":[],"output":{"name":"result"}}],[11,"build","","Constructs the `X509Store`.",116,{"inputs":[{"name":"self"}],"output":{"name":"x509store"}}],[11,"add_cert","","Adds a certificate to the certificate store.",117,{"inputs":[{"name":"self"},{"name":"x509"}],"output":{"name":"result"}}],[11,"set_default_paths","","Load certificates from their default locations.",117,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_ptr","","",118,null],[11,"as_ptr","","",118,null],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",118,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"deref_mut","","",118,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[17,"X509_FILETYPE_PEM","openssl::x509","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[11,"as_raw","","",119,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_ptr","","",120,null],[11,"as_ptr","","",120,null],[11,"drop","","",120,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",120,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"deref_mut","","",120,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"error","","",121,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"current_cert","","",121,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"error_depth","","",121,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"chain","","",121,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new generator with the following defaults:",122,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",122,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"add_name","","Add attribute to the name of the certificate",122,{"inputs":[{"name":"self"},{"name":"string"},{"name":"string"}],"output":{"name":"x509generator"}}],[11,"add_names","","Add multiple attributes to the name of the certificate",122,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"add_extension","","Add an extension to a certificate",122,{"inputs":[{"name":"self"},{"name":"extension"}],"output":{"name":"x509generator"}}],[11,"add_extensions","","Add multiple extensions to a certificate",122,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"set_sign_hash","","",122,{"inputs":[{"name":"self"},{"name":"messagedigest"}],"output":{"name":"x509generator"}}],[11,"sign","","Sets the certificate public-key, then self-sign and return it",122,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"request","","Obtain a certificate signing request (CSR)",122,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"new","","Creates a new builder.",123,{"inputs":[],"output":{"name":"result"}}],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",123,{"inputs":[{"name":"self"},{"name":"asn1timeref"}],"output":{"name":"result"}}],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",123,{"inputs":[{"name":"self"},{"name":"asn1timeref"}],"output":{"name":"result"}}],[11,"set_version","","Sets the version of the certificate.",123,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_serial_number","","Sets the serial number of the certificate.",123,{"inputs":[{"name":"self"},{"name":"asn1integerref"}],"output":{"name":"result"}}],[11,"set_issuer_name","","Sets the issuer name of the certificate.",123,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"name":"result"}}],[11,"set_subject_name","","Sets the subject name of the certificate.",123,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"name":"result"}}],[11,"set_pubkey","","Sets the public key associated with the certificate.",123,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"x509v3_context","","Returns a context object which is needed to create certain X509 extension values.",123,{"inputs":[{"name":"self"},{"name":"option"},{"name":"option"}],"output":{"name":"x509v3context"}}],[11,"append_extension","","Adds an X509 extension value to the certificate.",123,{"inputs":[{"name":"self"},{"name":"x509extension"}],"output":{"name":"result"}}],[11,"sign","","Signs the certificate with a private key.",123,{"inputs":[{"name":"self"},{"name":"pkeyref"},{"name":"messagedigest"}],"output":{"name":"result"}}],[11,"build","","Consumes the builder, returning the certificate.",123,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"from_ptr","","",124,null],[11,"as_ptr","","",124,null],[11,"drop","","",124,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",124,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"deref_mut","","",124,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"subject_name","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"subject_alt_names","","Returns this certificate's SAN entries, if they exist.",125,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"public_key","","",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",125,{"inputs":[{"name":"self"},{"name":"messagedigest"}],"output":{"name":"result"}}],[11,"not_after","","Returns the certificate's Not After validity period.",125,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"not_before","","Returns the certificate's Not Before validity period.",125,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"signature","","Returns the certificate's signature",125,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",125,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the certificate's Authority Information Access field.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"issued","","Checks that this certificate issued `subject`.",125,{"inputs":[{"name":"self"},{"name":"x509ref"}],"output":{"name":"result"}}],[11,"to_pem","","Serializes this value to PEM.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_der","","Serializes this value to DER.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_owned","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"builder","","Returns a new builder.",124,{"inputs":[],"output":{"name":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",124,null],[11,"from_der","","Deserializes a value from DER-formatted data.",124,null],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",124,null],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"as_ref","","",124,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"as_ref","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"borrow","","",124,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"as_ptr","","",126,null],[11,"from_ptr","","",127,null],[11,"as_ptr","","",127,null],[11,"drop","","",127,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"deref_mut","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"new","","Constructs an X509 extension value. See `man x509v3_config` for information on supported names and their value formats.",127,{"inputs":[{"name":"option"},{"name":"option"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_nid","","Constructs an X509 extension value. See `man x509v3_config` for information on supported extensions and their value formats.",127,{"inputs":[{"name":"option"},{"name":"option"},{"name":"nid"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","",128,{"inputs":[],"output":{"name":"result"}}],[11,"append_entry_by_text","","",128,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"append_entry_by_nid","","",128,{"inputs":[{"name":"self"},{"name":"nid"},{"name":"str"}],"output":{"name":"result"}}],[11,"build","","",128,{"inputs":[{"name":"self"}],"output":{"name":"x509name"}}],[11,"from_ptr","","",129,null],[11,"as_ptr","","",129,null],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"deref_mut","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"builder","","Returns a new builder.",129,{"inputs":[],"output":{"name":"result"}}],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",129,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"entries_by_nid","","",130,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"x509nameentries"}}],[11,"next","","",131,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_ptr","","",132,null],[11,"as_ptr","","",132,null],[11,"drop","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",132,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"deref_mut","","",132,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"new","","",134,{"inputs":[],"output":{"name":"result"}}],[11,"set_version","","",134,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_subject_name","","",134,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"name":"result"}}],[11,"set_pubkey","","",134,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"x509v3_context","","",134,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"x509v3context"}}],[11,"add_extensions","","",134,{"inputs":[{"name":"self"},{"name":"stackref"}],"output":{"name":"result"}}],[11,"sign","","",134,{"inputs":[{"name":"self"},{"name":"pkeyref"},{"name":"messagedigest"}],"output":{"name":"result"}}],[11,"build","","",134,{"inputs":[{"name":"self"}],"output":{"name":"x509req"}}],[11,"from_ptr","","",135,null],[11,"as_ptr","","",135,null],[11,"drop","","",135,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",135,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"deref_mut","","",135,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"builder","","",135,{"inputs":[],"output":{"name":"result"}}],[11,"from_pem","","Reads CSR from PEM",135,null],[11,"from_der","","Deserializes a value from DER-formatted data.",135,null],[11,"to_pem","","Serializes this value to PEM.",136,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_der","","Serializes this value to DER.",136,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"version","","",136,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"subject_name","","",136,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",137,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_raw","","Creates an `X509VerifyError` from a raw error number.",137,{"inputs":[{"name":"c_long"}],"output":{"name":"option"}}],[11,"as_raw","","",137,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"error_string","","",137,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_ptr","","",138,null],[11,"as_ptr","","",138,null],[11,"drop","","",138,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",138,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"deref_mut","","",138,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",139,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",139,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_ptr","","",140,null],[11,"as_ptr","","",140,null],[11,"drop","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",140,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"deref_mut","","",140,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"object","","Returns the ASN.1 OID of this algorithm.",141,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}]],"paths":[[3,"KeyError"],[3,"AesKey"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1Time"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1StringRef"],[3,"Asn1Integer"],[3,"Asn1IntegerRef"],[3,"Asn1BitString"],[3,"Asn1BitStringRef"],[3,"Asn1Object"],[3,"Asn1ObjectRef"],[3,"BigNumContext"],[3,"BigNumRef"],[3,"BigNum"],[3,"ConfMethod"],[3,"Conf"],[3,"Dh"],[3,"DhRef"],[3,"Dsa"],[3,"DsaRef"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPoint"],[3,"EcPointRef"],[3,"EcKey"],[3,"EcKeyRef"],[3,"EcKeyBuilder"],[3,"EcKeyBuilderRef"],[3,"ErrorStack"],[3,"Error"],[3,"MessageDigest"],[3,"Hasher"],[3,"DigestBytes"],[3,"Nid"],[3,"Status"],[3,"Flag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponse"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"OcspOneReq"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"PKey"],[3,"PKeyRef"],[3,"PKeyCtx"],[3,"PKeyCtxRef"],[3,"Padding"],[3,"Rsa"],[3,"RsaRef"],[3,"Signer"],[3,"Verifier"],[3,"CipherBits"],[4,"Error"],[4,"HandshakeError"],[4,"SniError"],[4,"ShutdownResult"],[3,"SslConnectorBuilder"],[3,"SslConnector"],[3,"ConnectConfiguration"],[3,"SslAcceptorBuilder"],[3,"SslAcceptor"],[3,"SslOption"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"StatusType"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipher"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[8,"Stackable"],[3,"Stack"],[3,"IntoIter"],[3,"StackRef"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[8,"OpenSslType"],[8,"OpenSslTypeRef"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509Store"],[3,"X509FileType"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Generator"],[3,"X509Builder"],[3,"X509"],[3,"X509Ref"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyError"],[3,"GeneralName"],[3,"GeneralNameRef"],[3,"X509Algorithm"],[3,"X509AlgorithmRef"]]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"stack_st_ASN1_OBJECT","openssl_sys","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",1,null],[3,"stack_st_X509_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_X509_ATTRIBUTE","","",null,null],[12,"stack","","",3,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",4,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",5,null],[3,"stack_st_void","","",null,null],[12,"stack","","",6,null],[3,"stack_st_SSL_CIPHER","","",null,null],[12,"stack","","",7,null],[3,"stack_st_OPENSSL_STRING","","",null,null],[12,"stack","","",8,null],[3,"_STACK","","",null,null],[12,"num","","",9,null],[12,"data","","",9,null],[12,"sorted","","",9,null],[12,"num_alloc","","",9,null],[12,"comp","","",9,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",10,null],[12,"name","","",10,null],[12,"bwrite","","",10,null],[12,"bread","","",10,null],[12,"bputs","","",10,null],[12,"bgets","","",10,null],[12,"ctrl","","",10,null],[12,"create","","",10,null],[12,"destroy","","",10,null],[12,"callback_ctrl","","",10,null],[3,"RSA","","",null,null],[12,"pad","","",11,null],[12,"version","","",11,null],[12,"meth","","",11,null],[12,"engine","","",11,null],[12,"n","","",11,null],[12,"e","","",11,null],[12,"d","","",11,null],[12,"p","","",11,null],[12,"q","","",11,null],[12,"dmp1","","",11,null],[12,"dmq1","","",11,null],[12,"iqmp","","",11,null],[12,"ex_data","","",11,null],[12,"references","","",11,null],[12,"flags","","",11,null],[12,"_method_mod_n","","",11,null],[12,"_method_mod_p","","",11,null],[12,"_method_mod_q","","",11,null],[12,"bignum_data","","",11,null],[12,"blinding","","",11,null],[12,"mt_blinding","","",11,null],[3,"DSA","","",null,null],[12,"pad","","",12,null],[12,"version","","",12,null],[12,"write_params","","",12,null],[12,"p","","",12,null],[12,"q","","",12,null],[12,"g","","",12,null],[12,"pub_key","","",12,null],[12,"priv_key","","",12,null],[12,"kinv","","",12,null],[12,"r","","",12,null],[12,"flags","","",12,null],[12,"method_mont_p","","",12,null],[12,"references","","",12,null],[12,"ex_data","","",12,null],[12,"meth","","",12,null],[12,"engine","","",12,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",13,null],[12,"save_type","","",13,null],[12,"references","","",13,null],[12,"ameth","","",13,null],[12,"engine","","",13,null],[12,"pkey","","",13,null],[12,"save_parameters","","",13,null],[12,"attributes","","",13,null],[3,"BIO","","",null,null],[12,"method","","",14,null],[12,"callback","","",14,null],[12,"cb_arg","","",14,null],[12,"init","","",14,null],[12,"shutdown","","",14,null],[12,"flags","","",14,null],[12,"retry_reason","","",14,null],[12,"num","","",14,null],[12,"ptr","","",14,null],[12,"next_bio","","",14,null],[12,"prev_bio","","",14,null],[12,"references","","",14,null],[12,"num_read","","",14,null],[12,"num_write","","",14,null],[12,"ex_data","","",14,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",15,null],[12,"dummy","","",15,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",16,null],[12,"block_size","","",16,null],[12,"key_len","","",16,null],[12,"iv_len","","",16,null],[12,"flags","","",16,null],[12,"init","","",16,null],[12,"do_cipher","","",16,null],[12,"cleanup","","",16,null],[12,"ctx_size","","",16,null],[12,"set_asn1_parameters","","",16,null],[12,"get_asn1_parameters","","",16,null],[12,"ctrl","","",16,null],[12,"app_data","","",16,null],[3,"HMAC_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",17,null],[12,"top","","",17,null],[12,"dmax","","",17,null],[12,"neg","","",17,null],[12,"flags","","",17,null],[3,"DH","","",null,null],[12,"pad","","",18,null],[12,"version","","",18,null],[12,"p","","",18,null],[12,"g","","",18,null],[12,"length","","",18,null],[12,"pub_key","","",18,null],[12,"priv_key","","",18,null],[12,"flags","","",18,null],[12,"method_mont_p","","",18,null],[12,"q","","",18,null],[12,"j","","",18,null],[12,"seed","","",18,null],[12,"seedlen","","",18,null],[12,"counter","","",18,null],[12,"references","","",18,null],[12,"ex_data","","",18,null],[12,"meth","","",18,null],[12,"engine","","",18,null],[3,"X509","","",null,null],[12,"cert_info","","",19,null],[12,"sig_alg","","",19,null],[12,"signature","","",19,null],[12,"valid","","",19,null],[12,"references","","",19,null],[12,"name","","",19,null],[12,"ex_data","","",19,null],[12,"ex_pathlen","","",19,null],[12,"ex_pcpathlen","","",19,null],[12,"ex_flags","","",19,null],[12,"ex_kusage","","",19,null],[12,"ex_xkusage","","",19,null],[12,"ex_nscert","","",19,null],[3,"X509_CINF","","",null,null],[12,"validity","","",20,null],[12,"extensions","","",20,null],[3,"X509_ALGOR","","",null,null],[12,"algorithm","","",21,null],[3,"ASN1_ENCODING","","",null,null],[12,"enc","","",22,null],[12,"len","","",22,null],[12,"modified","","",22,null],[3,"X509_VAL","","",null,null],[12,"notBefore","","",23,null],[12,"notAfter","","",23,null],[3,"X509_REQ_INFO","","",null,null],[12,"enc","","",24,null],[12,"version","","",24,null],[12,"subject","","",24,null],[12,"attributes","","",24,null],[3,"X509_REQ","","",null,null],[12,"req_info","","",25,null],[3,"SSL","","",null,null],[12,"server","","",26,null],[3,"SSL_CTX","","",null,null],[12,"references","","",27,null],[3,"SSL_SESSION","","",null,null],[12,"master_key_length","","",28,null],[12,"master_key","","",28,null],[12,"references","","",28,null],[3,"SRP_CTX","","",null,null],[3,"AES_KEY","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",29,null],[12,"d","","",29,null],[3,"X509V3_CTX","","",null,null],[4,"PKCS12","","",null,null],[4,"ASN1_INTEGER","","",null,null],[4,"ASN1_GENERALIZEDTIME","","",null,null],[4,"ASN1_STRING","","",null,null],[4,"ASN1_BIT_STRING","","",null,null],[4,"ASN1_TIME","","",null,null],[4,"ASN1_TYPE","","",null,null],[4,"ASN1_OBJECT","","",null,null],[4,"BN_CTX","","",null,null],[4,"BN_GENCB","","",null,null],[4,"CONF","","",null,null],[4,"CONF_METHOD","","",null,null],[4,"COMP_METHOD","","",null,null],[4,"EC_KEY","","",null,null],[4,"EC_GROUP","","",null,null],[4,"EC_METHOD","","",null,null],[4,"EC_POINT","","",null,null],[4,"ENGINE","","",null,null],[4,"EVP_CIPHER_CTX","","",null,null],[4,"EVP_MD","","",null,null],[4,"EVP_PKEY_CTX","","",null,null],[4,"OCSP_BASICRESP","","",null,null],[4,"OCSP_CERTID","","",null,null],[4,"OCSP_RESPONSE","","",null,null],[4,"OCSP_REQUEST","","",null,null],[4,"OCSP_ONEREQ","","",null,null],[4,"SSL_CIPHER","","",null,null],[4,"SSL_METHOD","","",null,null],[4,"X509_CRL","","",null,null],[4,"X509_EXTENSION","","",null,null],[4,"X509_NAME","","",null,null],[4,"X509_NAME_ENTRY","","",null,null],[4,"X509_STORE","","",null,null],[4,"X509_STORE_CTX","","",null,null],[4,"bio_st","","",null,null],[4,"DH_METHOD","","",null,null],[4,"RSA_METHOD","","",null,null],[4,"BN_MONT_CTX","","",null,null],[4,"BN_BLINDING","","",null,null],[4,"DSA_METHOD","","",null,null],[4,"EVP_PKEY_ASN1_METHOD","","",null,null],[4,"point_conversion_form_t","","",null,null],[13,"POINT_CONVERSION_COMPRESSED","","",30,null],[13,"POINT_CONVERSION_UNCOMPRESSED","","",30,null],[13,"POINT_CONVERSION_HYBRID","","",30,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"SSL_session_reused","","",null,null],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"EVP_PKEY_CTX_set_rsa_padding","","",null,null],[5,"EVP_PKEY_CTX_get_rsa_padding","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_set_tmp_ecdh","","",null,null],[5,"SSL_set_tmp_dh","","",null,null],[5,"SSL_set_tmp_ecdh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_set_tlsext_status_type","","",null,null],[5,"SSL_CTX_set_tlsext_status_cb","","",null,null],[5,"SSL_CTX_set_tlsext_status_arg","","",null,null],[5,"SSL_CTX_get_extra_chain_certs","","",null,null],[5,"SSL_get_tlsext_status_ocsp_resp","","",null,null],[5,"SSL_set_tlsext_status_ocsp_resp","","",null,null],[5,"ERR_GET_LIB","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_FUNC","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_REASON","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"BIO_new","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"get_rfc2409_prime_768","","",null,null],[5,"get_rfc2409_prime_1024","","",null,null],[5,"get_rfc3526_prime_1536","","",null,null],[5,"get_rfc3526_prime_2048","","",null,null],[5,"get_rfc3526_prime_3072","","",null,null],[5,"get_rfc3526_prime_4096","","",null,null],[5,"get_rfc3526_prime_6144","","",null,null],[5,"get_rfc3526_prime_8192","","",null,null],[5,"CRYPTO_malloc","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"OCSP_cert_to_id","","",null,null],[5,"PKCS12_create","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"TLSv1_1_method","","",null,null],[5,"TLSv1_2_method","","",null,null],[5,"DTLSv1_method","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_tmp_ecdh_callback","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_tmp_ecdh_callback","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_NAME_add_entry_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"X509_STORE_CTX_get_chain","","",null,null],[5,"X509V3_EXT_nconf_nid","","",null,null],[5,"X509V3_EXT_nconf","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"CRYPTO_add_lock","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_bits","","",null,null],[5,"sk_new_null","","",null,null],[5,"sk_num","","",null,null],[5,"sk_value","","",null,null],[5,"sk_free","","",null,null],[5,"sk_push","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[5,"AES_set_encrypt_key","","",null,null],[5,"AES_set_decrypt_key","","",null,null],[5,"AES_ige_encrypt","","",null,null],[5,"ASN1_INTEGER_get","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_GENERALIZEDTIME_free","","",null,null],[5,"ASN1_GENERALIZEDTIME_print","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"ASN1_BIT_STRING_free","","",null,null],[5,"ASN1_OBJECT_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear","","",null,null],[5,"BN_free","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"BN_to_ASN1_INTEGER","","",null,null],[5,"NCONF_default","","",null,null],[5,"NCONF_new","","",null,null],[5,"NCONF_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_new","","",null,null],[5,"DH_free","","",null,null],[5,"EC_KEY_new","","",null,null],[5,"EC_KEY_new_by_curve_name","","",null,null],[5,"EC_KEY_dup","","",null,null],[5,"EC_KEY_set_group","","",null,null],[5,"EC_KEY_get0_group","","",null,null],[5,"EC_KEY_set_public_key","","",null,null],[5,"EC_KEY_get0_public_key","","",null,null],[5,"EC_KEY_set_private_key","","",null,null],[5,"EC_KEY_get0_private_key","","",null,null],[5,"EC_KEY_generate_key","","",null,null],[5,"EC_KEY_check_key","","",null,null],[5,"EC_KEY_free","","",null,null],[5,"EC_GF2m_simple_method","","",null,null],[5,"EC_GROUP_new","","",null,null],[5,"EC_GROUP_new_curve_GFp","","",null,null],[5,"EC_GROUP_new_curve_GF2m","","",null,null],[5,"EC_GROUP_new_by_curve_name","","",null,null],[5,"EC_GROUP_get_curve_GFp","","",null,null],[5,"EC_GROUP_get_curve_GF2m","","",null,null],[5,"EC_GROUP_get_degree","","",null,null],[5,"EC_GROUP_get_order","","",null,null],[5,"EC_GROUP_set_asn1_flag","","",null,null],[5,"EC_GROUP_free","","",null,null],[5,"EC_POINT_new","","",null,null],[5,"EC_POINT_add","","",null,null],[5,"EC_POINT_mul","","",null,null],[5,"EC_POINT_invert","","",null,null],[5,"EC_POINT_point2oct","","",null,null],[5,"EC_POINT_oct2point","","",null,null],[5,"EC_POINT_cmp","","",null,null],[5,"EC_POINT_free","","",null,null],[5,"ERR_peek_last_error","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_get_error_line_data","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_clear_error","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_xts","","",null,null],[5,"EVP_aes_128_ctr","","",null,null],[5,"EVP_aes_128_gcm","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_xts","","",null,null],[5,"EVP_aes_256_ctr","","",null,null],[5,"EVP_aes_256_gcm","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_bf_cbc","","",null,null],[5,"EVP_bf_ecb","","",null,null],[5,"EVP_bf_cfb64","","",null,null],[5,"EVP_bf_ofb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_ctrl","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_DigestSignInit","","",null,null],[5,"EVP_DigestSignFinal","","",null,null],[5,"EVP_DigestVerifyInit","","",null,null],[5,"EVP_DigestVerifyFinal","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_get1_DSA","","",null,null],[5,"EVP_PKEY_get1_DH","","",null,null],[5,"EVP_PKEY_get1_EC_KEY","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"EVP_PKEY_new_mac_key","","",null,null],[5,"EVP_PKEY_derive_init","","",null,null],[5,"EVP_PKEY_derive_set_peer","","",null,null],[5,"EVP_PKEY_derive","","",null,null],[5,"d2i_PKCS8PrivateKey_bio","","",null,null],[5,"EVP_PKEY_CTX_new","","",null,null],[5,"EVP_PKEY_CTX_free","","",null,null],[5,"EVP_PKEY_CTX_ctrl","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"OBJ_obj2nid","","",null,null],[5,"OBJ_obj2txt","","",null,null],[5,"OCSP_BASICRESP_new","","",null,null],[5,"OCSP_BASICRESP_free","","",null,null],[5,"OCSP_basic_verify","","",null,null],[5,"OCSP_resp_find_status","","",null,null],[5,"OCSP_check_validity","","",null,null],[5,"OCSP_CERTID_free","","",null,null],[5,"OCSP_RESPONSE_new","","",null,null],[5,"OCSP_RESPONSE_free","","",null,null],[5,"i2d_OCSP_RESPONSE","","",null,null],[5,"d2i_OCSP_RESPONSE","","",null,null],[5,"OCSP_response_create","","",null,null],[5,"OCSP_response_status","","",null,null],[5,"OCSP_response_get1_basic","","",null,null],[5,"OCSP_REQUEST_new","","",null,null],[5,"OCSP_REQUEST_free","","",null,null],[5,"i2d_OCSP_REQUEST","","",null,null],[5,"d2i_OCSP_REQUEST","","",null,null],[5,"OCSP_request_add0_id","","",null,null],[5,"OCSP_ONEREQ_free","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DHparams","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PKCS8PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PEM_write_bio_ECPrivateKey","","",null,null],[5,"PEM_read_bio_ECPrivateKey","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"PKCS5_PBKDF2_HMAC","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RAND_status","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SHA1","","",null,null],[5,"SHA224","","",null,null],[5,"SHA256","","",null,null],[5,"SHA384","","",null,null],[5,"SHA512","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_get_verify_result","","",null,null],[5,"SSL_shutdown","","",null,null],[5,"SSL_get_certificate","","",null,null],[5,"SSL_get_privatekey","","",null,null],[5,"SSL_load_client_CA_file","","",null,null],[5,"SSL_set_tmp_dh_callback","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_client_CA_list","","",null,null],[5,"SSL_CTX_get_cert_store","","",null,null],[5,"SSL_CTX_set_tmp_dh_callback","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"SSL_get_session","","",null,null],[5,"SSL_set_session","","",null,null],[5,"SSL_SESSION_free","","",null,null],[5,"SSL_SESSION_get_id","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_subject_name","","",null,null],[5,"X509_set_serialNumber","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_verify_cert_error_string","","",null,null],[5,"X509_get1_ocsp","","",null,null],[5,"X509_check_issued","","",null,null],[5,"X509_ALGOR_free","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_new","","",null,null],[5,"X509_NAME_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_ENTRY_free","","",null,null],[5,"ASN1_STRING_free","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_INTEGER_free","","",null,null],[5,"X509_STORE_new","","",null,null],[5,"X509_STORE_free","","",null,null],[5,"X509_STORE_add_cert","","",null,null],[5,"X509_STORE_set_default_paths","","",null,null],[5,"X509_STORE_CTX_free","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509V3_set_nconf","","",null,null],[5,"X509_REQ_new","","",null,null],[5,"X509_REQ_set_version","","",null,null],[5,"X509_REQ_set_subject_name","","",null,null],[5,"X509_REQ_set_pubkey","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_DHparams","","",null,null],[5,"i2d_DHparams","","",null,null],[5,"d2i_DSAPublicKey","","",null,null],[5,"i2d_DSAPublicKey","","",null,null],[5,"d2i_DSAPrivateKey","","",null,null],[5,"i2d_DSAPrivateKey","","",null,null],[5,"d2i_ECPrivateKey","","",null,null],[5,"i2d_ECPrivateKey","","",null,null],[5,"d2i_X509","","",null,null],[5,"d2i_X509_REQ","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_X509_REQ","","",null,null],[5,"d2i_PUBKEY","","",null,null],[5,"i2d_PUBKEY_bio","","",null,null],[5,"i2d_PrivateKey_bio","","",null,null],[5,"i2d_PUBKEY","","",null,null],[5,"i2d_PrivateKey","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"i2d_PKCS12_bio","","",null,null],[5,"i2d_PKCS12","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Final","","",null,null],[6,"bio_info_cb","","",null,null],[6,"GEN_SESSION_CB","","",null,null],[6,"tls_session_ticket_ext_cb_fn","","",null,null],[6,"tls_session_secret_cb_fn","","",null,null],[6,"BN_ULONG","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"SSL_CTRL_GET_SESSION_REUSED","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_MAX_SSL_SESSION_ID_LENGTH","","",null,null],[17,"SSL_MAX_SID_CTX_LENGTH","","",null,null],[17,"SSL_MAX_KEY_ARG_LENGTH","","",null,null],[17,"SSL_MAX_MASTER_KEY_LENGTH","","",null,null],[17,"SSL_MAX_KRB5_PRINCIPAL_LENGTH","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"CRYPTO_LOCK_X509","","",null,null],[17,"CRYPTO_LOCK_SSL_CTX","","",null,null],[17,"CRYPTO_LOCK_SSL_SESSION","","",null,null],[17,"AES_ENCRYPT","","",null,null],[17,"AES_DECRYPT","","",null,null],[17,"AES_MAXNR","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"ERR_TXT_MALLOCED","","",null,null],[17,"ERR_TXT_STRING","","",null,null],[17,"ERR_LIB_PEM","","",null,null],[17,"PEM_R_NO_START_LINE","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"EVP_PKEY_HMAC","","",null,null],[17,"EVP_PKEY_DSA","","",null,null],[17,"EVP_PKEY_DH","","",null,null],[17,"EVP_PKEY_EC","","",null,null],[17,"EVP_PKEY_ALG_CTRL","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",null,null],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",null,null],[17,"EVP_CTRL_GCM_SET_IVLEN","","",null,null],[17,"EVP_CTRL_GCM_GET_TAG","","",null,null],[17,"EVP_CTRL_GCM_SET_TAG","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_undef","","",null,null],[17,"NID_itu_t","","",null,null],[17,"NID_ccitt","","",null,null],[17,"NID_iso","","",null,null],[17,"NID_joint_iso_itu_t","","",null,null],[17,"NID_joint_iso_ccitt","","",null,null],[17,"NID_member_body","","",null,null],[17,"NID_identified_organization","","",null,null],[17,"NID_hmac_md5","","",null,null],[17,"NID_hmac_sha1","","",null,null],[17,"NID_certicom_arc","","",null,null],[17,"NID_international_organizations","","",null,null],[17,"NID_wap","","",null,null],[17,"NID_wap_wsg","","",null,null],[17,"NID_selected_attribute_types","","",null,null],[17,"NID_clearance","","",null,null],[17,"NID_ISO_US","","",null,null],[17,"NID_X9_57","","",null,null],[17,"NID_X9cm","","",null,null],[17,"NID_dsa","","",null,null],[17,"NID_dsaWithSHA1","","",null,null],[17,"NID_ansi_X9_62","","",null,null],[17,"NID_X9_62_prime_field","","",null,null],[17,"NID_X9_62_characteristic_two_field","","",null,null],[17,"NID_X9_62_id_characteristic_two_basis","","",null,null],[17,"NID_X9_62_onBasis","","",null,null],[17,"NID_X9_62_tpBasis","","",null,null],[17,"NID_X9_62_ppBasis","","",null,null],[17,"NID_X9_62_id_ecPublicKey","","",null,null],[17,"NID_X9_62_c2pnb163v1","","",null,null],[17,"NID_X9_62_c2pnb163v2","","",null,null],[17,"NID_X9_62_c2pnb163v3","","",null,null],[17,"NID_X9_62_c2pnb176v1","","",null,null],[17,"NID_X9_62_c2tnb191v1","","",null,null],[17,"NID_X9_62_c2tnb191v2","","",null,null],[17,"NID_X9_62_c2tnb191v3","","",null,null],[17,"NID_X9_62_c2onb191v4","","",null,null],[17,"NID_X9_62_c2onb191v5","","",null,null],[17,"NID_X9_62_c2pnb208w1","","",null,null],[17,"NID_X9_62_c2tnb239v1","","",null,null],[17,"NID_X9_62_c2tnb239v2","","",null,null],[17,"NID_X9_62_c2tnb239v3","","",null,null],[17,"NID_X9_62_c2onb239v4","","",null,null],[17,"NID_X9_62_c2onb239v5","","",null,null],[17,"NID_X9_62_c2pnb272w1","","",null,null],[17,"NID_X9_62_c2pnb304w1","","",null,null],[17,"NID_X9_62_c2tnb359v1","","",null,null],[17,"NID_X9_62_c2pnb368w1","","",null,null],[17,"NID_X9_62_c2tnb431r1","","",null,null],[17,"NID_X9_62_prime192v1","","",null,null],[17,"NID_X9_62_prime192v2","","",null,null],[17,"NID_X9_62_prime192v3","","",null,null],[17,"NID_X9_62_prime239v1","","",null,null],[17,"NID_X9_62_prime239v2","","",null,null],[17,"NID_X9_62_prime239v3","","",null,null],[17,"NID_X9_62_prime256v1","","",null,null],[17,"NID_ecdsa_with_SHA1","","",null,null],[17,"NID_ecdsa_with_Recommended","","",null,null],[17,"NID_ecdsa_with_Specified","","",null,null],[17,"NID_ecdsa_with_SHA224","","",null,null],[17,"NID_ecdsa_with_SHA256","","",null,null],[17,"NID_ecdsa_with_SHA384","","",null,null],[17,"NID_ecdsa_with_SHA512","","",null,null],[17,"NID_secp112r1","","",null,null],[17,"NID_secp112r2","","",null,null],[17,"NID_secp128r1","","",null,null],[17,"NID_secp128r2","","",null,null],[17,"NID_secp160k1","","",null,null],[17,"NID_secp160r1","","",null,null],[17,"NID_secp160r2","","",null,null],[17,"NID_secp192k1","","",null,null],[17,"NID_secp224k1","","",null,null],[17,"NID_secp224r1","","",null,null],[17,"NID_secp256k1","","",null,null],[17,"NID_secp384r1","","",null,null],[17,"NID_secp521r1","","",null,null],[17,"NID_sect113r1","","",null,null],[17,"NID_sect113r2","","",null,null],[17,"NID_sect131r1","","",null,null],[17,"NID_sect131r2","","",null,null],[17,"NID_sect163k1","","",null,null],[17,"NID_sect163r1","","",null,null],[17,"NID_sect163r2","","",null,null],[17,"NID_sect193r1","","",null,null],[17,"NID_sect193r2","","",null,null],[17,"NID_sect233k1","","",null,null],[17,"NID_sect233r1","","",null,null],[17,"NID_sect239k1","","",null,null],[17,"NID_sect283k1","","",null,null],[17,"NID_sect283r1","","",null,null],[17,"NID_sect409k1","","",null,null],[17,"NID_sect409r1","","",null,null],[17,"NID_sect571k1","","",null,null],[17,"NID_sect571r1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls3","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls4","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls5","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls6","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls7","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls8","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls9","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls10","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls11","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls12","","",null,null],[17,"NID_cast5_cbc","","",null,null],[17,"NID_cast5_ecb","","",null,null],[17,"NID_cast5_cfb64","","",null,null],[17,"NID_cast5_ofb64","","",null,null],[17,"NID_pbeWithMD5AndCast5_CBC","","",null,null],[17,"NID_id_PasswordBasedMAC","","",null,null],[17,"NID_id_DHBasedMac","","",null,null],[17,"NID_rsadsi","","",null,null],[17,"NID_pkcs","","",null,null],[17,"NID_pkcs1","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_md2WithRSAEncryption","","",null,null],[17,"NID_md4WithRSAEncryption","","",null,null],[17,"NID_md5WithRSAEncryption","","",null,null],[17,"NID_sha1WithRSAEncryption","","",null,null],[17,"NID_rsaesOaep","","",null,null],[17,"NID_mgf1","","",null,null],[17,"NID_rsassaPss","","",null,null],[17,"NID_sha256WithRSAEncryption","","",null,null],[17,"NID_sha384WithRSAEncryption","","",null,null],[17,"NID_sha512WithRSAEncryption","","",null,null],[17,"NID_sha224WithRSAEncryption","","",null,null],[17,"NID_pkcs3","","",null,null],[17,"NID_dhKeyAgreement","","",null,null],[17,"NID_pkcs5","","",null,null],[17,"NID_pbeWithMD2AndDES_CBC","","",null,null],[17,"NID_pbeWithMD5AndDES_CBC","","",null,null],[17,"NID_pbeWithMD2AndRC2_CBC","","",null,null],[17,"NID_pbeWithMD5AndRC2_CBC","","",null,null],[17,"NID_pbeWithSHA1AndDES_CBC","","",null,null],[17,"NID_pbeWithSHA1AndRC2_CBC","","",null,null],[17,"NID_id_pbkdf2","","",null,null],[17,"NID_pbes2","","",null,null],[17,"NID_pbmac1","","",null,null],[17,"NID_pkcs7","","",null,null],[17,"NID_pkcs7_data","","",null,null],[17,"NID_pkcs7_signed","","",null,null],[17,"NID_pkcs7_enveloped","","",null,null],[17,"NID_pkcs7_signedAndEnveloped","","",null,null],[17,"NID_pkcs7_digest","","",null,null],[17,"NID_pkcs7_encrypted","","",null,null],[17,"NID_pkcs9","","",null,null],[17,"NID_pkcs9_emailAddress","","",null,null],[17,"NID_pkcs9_unstructuredName","","",null,null],[17,"NID_pkcs9_contentType","","",null,null],[17,"NID_pkcs9_messageDigest","","",null,null],[17,"NID_pkcs9_signingTime","","",null,null],[17,"NID_pkcs9_countersignature","","",null,null],[17,"NID_pkcs9_challengePassword","","",null,null],[17,"NID_pkcs9_unstructuredAddress","","",null,null],[17,"NID_pkcs9_extCertAttributes","","",null,null],[17,"NID_ext_req","","",null,null],[17,"NID_SMIMECapabilities","","",null,null],[17,"NID_SMIME","","",null,null],[17,"NID_id_smime_mod","","",null,null],[17,"NID_id_smime_ct","","",null,null],[17,"NID_id_smime_aa","","",null,null],[17,"NID_id_smime_alg","","",null,null],[17,"NID_id_smime_cd","","",null,null],[17,"NID_id_smime_spq","","",null,null],[17,"NID_id_smime_cti","","",null,null],[17,"NID_id_smime_mod_cms","","",null,null],[17,"NID_id_smime_mod_ess","","",null,null],[17,"NID_id_smime_mod_oid","","",null,null],[17,"NID_id_smime_mod_msg_v3","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_88","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_97","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",null,null],[17,"NID_id_smime_ct_receipt","","",null,null],[17,"NID_id_smime_ct_authData","","",null,null],[17,"NID_id_smime_ct_publishCert","","",null,null],[17,"NID_id_smime_ct_TSTInfo","","",null,null],[17,"NID_id_smime_ct_TDTInfo","","",null,null],[17,"NID_id_smime_ct_contentInfo","","",null,null],[17,"NID_id_smime_ct_DVCSRequestData","","",null,null],[17,"NID_id_smime_ct_DVCSResponseData","","",null,null],[17,"NID_id_smime_ct_compressedData","","",null,null],[17,"NID_id_ct_asciiTextWithCRLF","","",null,null],[17,"NID_id_smime_aa_receiptRequest","","",null,null],[17,"NID_id_smime_aa_securityLabel","","",null,null],[17,"NID_id_smime_aa_mlExpandHistory","","",null,null],[17,"NID_id_smime_aa_contentHint","","",null,null],[17,"NID_id_smime_aa_msgSigDigest","","",null,null],[17,"NID_id_smime_aa_encapContentType","","",null,null],[17,"NID_id_smime_aa_contentIdentifier","","",null,null],[17,"NID_id_smime_aa_macValue","","",null,null],[17,"NID_id_smime_aa_equivalentLabels","","",null,null],[17,"NID_id_smime_aa_contentReference","","",null,null],[17,"NID_id_smime_aa_encrypKeyPref","","",null,null],[17,"NID_id_smime_aa_signingCertificate","","",null,null],[17,"NID_id_smime_aa_smimeEncryptCerts","","",null,null],[17,"NID_id_smime_aa_timeStampToken","","",null,null],[17,"NID_id_smime_aa_ets_sigPolicyId","","",null,null],[17,"NID_id_smime_aa_ets_commitmentType","","",null,null],[17,"NID_id_smime_aa_ets_signerLocation","","",null,null],[17,"NID_id_smime_aa_ets_signerAttr","","",null,null],[17,"NID_id_smime_aa_ets_otherSigCert","","",null,null],[17,"NID_id_smime_aa_ets_contentTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_CertificateRefs","","",null,null],[17,"NID_id_smime_aa_ets_RevocationRefs","","",null,null],[17,"NID_id_smime_aa_ets_certValues","","",null,null],[17,"NID_id_smime_aa_ets_revocationValues","","",null,null],[17,"NID_id_smime_aa_ets_escTimeStamp","","",null,null],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",null,null],[17,"NID_id_smime_aa_signatureType","","",null,null],[17,"NID_id_smime_aa_dvcs_dvc","","",null,null],[17,"NID_id_smime_alg_ESDHwith3DES","","",null,null],[17,"NID_id_smime_alg_ESDHwithRC2","","",null,null],[17,"NID_id_smime_alg_3DESwrap","","",null,null],[17,"NID_id_smime_alg_RC2wrap","","",null,null],[17,"NID_id_smime_alg_ESDH","","",null,null],[17,"NID_id_smime_alg_CMS3DESwrap","","",null,null],[17,"NID_id_smime_alg_CMSRC2wrap","","",null,null],[17,"NID_id_alg_PWRI_KEK","","",null,null],[17,"NID_id_smime_cd_ldap","","",null,null],[17,"NID_id_smime_spq_ets_sqt_uri","","",null,null],[17,"NID_id_smime_spq_ets_sqt_unotice","","",null,null],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",null,null],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",null,null],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",null,null],[17,"NID_id_smime_cti_ets_proofOfSender","","",null,null],[17,"NID_id_smime_cti_ets_proofOfApproval","","",null,null],[17,"NID_id_smime_cti_ets_proofOfCreation","","",null,null],[17,"NID_friendlyName","","",null,null],[17,"NID_localKeyID","","",null,null],[17,"NID_ms_csp_name","","",null,null],[17,"NID_LocalKeySet","","",null,null],[17,"NID_x509Certificate","","",null,null],[17,"NID_sdsiCertificate","","",null,null],[17,"NID_x509Crl","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",null,null],[17,"NID_keyBag","","",null,null],[17,"NID_pkcs8ShroudedKeyBag","","",null,null],[17,"NID_certBag","","",null,null],[17,"NID_crlBag","","",null,null],[17,"NID_secretBag","","",null,null],[17,"NID_safeContentsBag","","",null,null],[17,"NID_md2","","",null,null],[17,"NID_md4","","",null,null],[17,"NID_md5","","",null,null],[17,"NID_md5_sha1","","",null,null],[17,"NID_hmacWithMD5","","",null,null],[17,"NID_hmacWithSHA1","","",null,null],[17,"NID_hmacWithSHA224","","",null,null],[17,"NID_hmacWithSHA256","","",null,null],[17,"NID_hmacWithSHA384","","",null,null],[17,"NID_hmacWithSHA512","","",null,null],[17,"NID_rc2_cbc","","",null,null],[17,"NID_rc2_ecb","","",null,null],[17,"NID_rc2_cfb64","","",null,null],[17,"NID_rc2_ofb64","","",null,null],[17,"NID_rc2_40_cbc","","",null,null],[17,"NID_rc2_64_cbc","","",null,null],[17,"NID_rc4","","",null,null],[17,"NID_rc4_40","","",null,null],[17,"NID_des_ede3_cbc","","",null,null],[17,"NID_rc5_cbc","","",null,null],[17,"NID_rc5_ecb","","",null,null],[17,"NID_rc5_cfb64","","",null,null],[17,"NID_rc5_ofb64","","",null,null],[17,"NID_ms_ext_req","","",null,null],[17,"NID_ms_code_ind","","",null,null],[17,"NID_ms_code_com","","",null,null],[17,"NID_ms_ctl_sign","","",null,null],[17,"NID_ms_sgc","","",null,null],[17,"NID_ms_efs","","",null,null],[17,"NID_ms_smartcard_login","","",null,null],[17,"NID_ms_upn","","",null,null],[17,"NID_idea_cbc","","",null,null],[17,"NID_idea_ecb","","",null,null],[17,"NID_idea_cfb64","","",null,null],[17,"NID_idea_ofb64","","",null,null],[17,"NID_bf_cbc","","",null,null],[17,"NID_bf_ecb","","",null,null],[17,"NID_bf_cfb64","","",null,null],[17,"NID_bf_ofb64","","",null,null],[17,"NID_id_pkix","","",null,null],[17,"NID_id_pkix_mod","","",null,null],[17,"NID_id_pe","","",null,null],[17,"NID_id_qt","","",null,null],[17,"NID_id_kp","","",null,null],[17,"NID_id_it","","",null,null],[17,"NID_id_pkip","","",null,null],[17,"NID_id_alg","","",null,null],[17,"NID_id_cmc","","",null,null],[17,"NID_id_on","","",null,null],[17,"NID_id_pda","","",null,null],[17,"NID_id_aca","","",null,null],[17,"NID_id_qcs","","",null,null],[17,"NID_id_cct","","",null,null],[17,"NID_id_ppl","","",null,null],[17,"NID_id_ad","","",null,null],[17,"NID_id_pkix1_explicit_88","","",null,null],[17,"NID_id_pkix1_implicit_88","","",null,null],[17,"NID_id_pkix1_explicit_93","","",null,null],[17,"NID_id_pkix1_implicit_93","","",null,null],[17,"NID_id_mod_crmf","","",null,null],[17,"NID_id_mod_cmc","","",null,null],[17,"NID_id_mod_kea_profile_88","","",null,null],[17,"NID_id_mod_kea_profile_93","","",null,null],[17,"NID_id_mod_cmp","","",null,null],[17,"NID_id_mod_qualified_cert_88","","",null,null],[17,"NID_id_mod_qualified_cert_93","","",null,null],[17,"NID_id_mod_attribute_cert","","",null,null],[17,"NID_id_mod_timestamp_protocol","","",null,null],[17,"NID_id_mod_ocsp","","",null,null],[17,"NID_id_mod_dvcs","","",null,null],[17,"NID_id_mod_cmp2000","","",null,null],[17,"NID_info_access","","",null,null],[17,"NID_biometricInfo","","",null,null],[17,"NID_qcStatements","","",null,null],[17,"NID_ac_auditEntity","","",null,null],[17,"NID_ac_targeting","","",null,null],[17,"NID_aaControls","","",null,null],[17,"NID_sbgp_ipAddrBlock","","",null,null],[17,"NID_sbgp_autonomousSysNum","","",null,null],[17,"NID_sbgp_routerIdentifier","","",null,null],[17,"NID_ac_proxying","","",null,null],[17,"NID_sinfo_access","","",null,null],[17,"NID_proxyCertInfo","","",null,null],[17,"NID_id_qt_cps","","",null,null],[17,"NID_id_qt_unotice","","",null,null],[17,"NID_textNotice","","",null,null],[17,"NID_server_auth","","",null,null],[17,"NID_client_auth","","",null,null],[17,"NID_code_sign","","",null,null],[17,"NID_email_protect","","",null,null],[17,"NID_ipsecEndSystem","","",null,null],[17,"NID_ipsecTunnel","","",null,null],[17,"NID_ipsecUser","","",null,null],[17,"NID_time_stamp","","",null,null],[17,"NID_OCSP_sign","","",null,null],[17,"NID_dvcs","","",null,null],[17,"NID_id_it_caProtEncCert","","",null,null],[17,"NID_id_it_signKeyPairTypes","","",null,null],[17,"NID_id_it_encKeyPairTypes","","",null,null],[17,"NID_id_it_preferredSymmAlg","","",null,null],[17,"NID_id_it_caKeyUpdateInfo","","",null,null],[17,"NID_id_it_currentCRL","","",null,null],[17,"NID_id_it_unsupportedOIDs","","",null,null],[17,"NID_id_it_subscriptionRequest","","",null,null],[17,"NID_id_it_subscriptionResponse","","",null,null],[17,"NID_id_it_keyPairParamReq","","",null,null],[17,"NID_id_it_keyPairParamRep","","",null,null],[17,"NID_id_it_revPassphrase","","",null,null],[17,"NID_id_it_implicitConfirm","","",null,null],[17,"NID_id_it_confirmWaitTime","","",null,null],[17,"NID_id_it_origPKIMessage","","",null,null],[17,"NID_id_it_suppLangTags","","",null,null],[17,"NID_id_regCtrl","","",null,null],[17,"NID_id_regInfo","","",null,null],[17,"NID_id_regCtrl_regToken","","",null,null],[17,"NID_id_regCtrl_authenticator","","",null,null],[17,"NID_id_regCtrl_pkiPublicationInfo","","",null,null],[17,"NID_id_regCtrl_pkiArchiveOptions","","",null,null],[17,"NID_id_regCtrl_oldCertID","","",null,null],[17,"NID_id_regCtrl_protocolEncrKey","","",null,null],[17,"NID_id_regInfo_utf8Pairs","","",null,null],[17,"NID_id_regInfo_certReq","","",null,null],[17,"NID_id_alg_des40","","",null,null],[17,"NID_id_alg_noSignature","","",null,null],[17,"NID_id_alg_dh_sig_hmac_sha1","","",null,null],[17,"NID_id_alg_dh_pop","","",null,null],[17,"NID_id_cmc_statusInfo","","",null,null],[17,"NID_id_cmc_identification","","",null,null],[17,"NID_id_cmc_identityProof","","",null,null],[17,"NID_id_cmc_dataReturn","","",null,null],[17,"NID_id_cmc_transactionId","","",null,null],[17,"NID_id_cmc_senderNonce","","",null,null],[17,"NID_id_cmc_recipientNonce","","",null,null],[17,"NID_id_cmc_addExtensions","","",null,null],[17,"NID_id_cmc_encryptedPOP","","",null,null],[17,"NID_id_cmc_decryptedPOP","","",null,null],[17,"NID_id_cmc_lraPOPWitness","","",null,null],[17,"NID_id_cmc_getCert","","",null,null],[17,"NID_id_cmc_getCRL","","",null,null],[17,"NID_id_cmc_revokeRequest","","",null,null],[17,"NID_id_cmc_regInfo","","",null,null],[17,"NID_id_cmc_responseInfo","","",null,null],[17,"NID_id_cmc_queryPending","","",null,null],[17,"NID_id_cmc_popLinkRandom","","",null,null],[17,"NID_id_cmc_popLinkWitness","","",null,null],[17,"NID_id_cmc_confirmCertAcceptance","","",null,null],[17,"NID_id_on_personalData","","",null,null],[17,"NID_id_on_permanentIdentifier","","",null,null],[17,"NID_id_pda_dateOfBirth","","",null,null],[17,"NID_id_pda_placeOfBirth","","",null,null],[17,"NID_id_pda_gender","","",null,null],[17,"NID_id_pda_countryOfCitizenship","","",null,null],[17,"NID_id_pda_countryOfResidence","","",null,null],[17,"NID_id_aca_authenticationInfo","","",null,null],[17,"NID_id_aca_accessIdentity","","",null,null],[17,"NID_id_aca_chargingIdentity","","",null,null],[17,"NID_id_aca_group","","",null,null],[17,"NID_id_aca_role","","",null,null],[17,"NID_id_aca_encAttrs","","",null,null],[17,"NID_id_qcs_pkixQCSyntax_v1","","",null,null],[17,"NID_id_cct_crs","","",null,null],[17,"NID_id_cct_PKIData","","",null,null],[17,"NID_id_cct_PKIResponse","","",null,null],[17,"NID_id_ppl_anyLanguage","","",null,null],[17,"NID_id_ppl_inheritAll","","",null,null],[17,"NID_Independent","","",null,null],[17,"NID_ad_OCSP","","",null,null],[17,"NID_ad_ca_issuers","","",null,null],[17,"NID_ad_timeStamping","","",null,null],[17,"NID_ad_dvcs","","",null,null],[17,"NID_caRepository","","",null,null],[17,"NID_id_pkix_OCSP_basic","","",null,null],[17,"NID_id_pkix_OCSP_Nonce","","",null,null],[17,"NID_id_pkix_OCSP_CrlID","","",null,null],[17,"NID_id_pkix_OCSP_acceptableResponses","","",null,null],[17,"NID_id_pkix_OCSP_noCheck","","",null,null],[17,"NID_id_pkix_OCSP_archiveCutoff","","",null,null],[17,"NID_id_pkix_OCSP_serviceLocator","","",null,null],[17,"NID_id_pkix_OCSP_extendedStatus","","",null,null],[17,"NID_id_pkix_OCSP_valid","","",null,null],[17,"NID_id_pkix_OCSP_path","","",null,null],[17,"NID_id_pkix_OCSP_trustRoot","","",null,null],[17,"NID_algorithm","","",null,null],[17,"NID_md5WithRSA","","",null,null],[17,"NID_des_ecb","","",null,null],[17,"NID_des_cbc","","",null,null],[17,"NID_des_ofb64","","",null,null],[17,"NID_des_cfb64","","",null,null],[17,"NID_rsaSignature","","",null,null],[17,"NID_dsa_2","","",null,null],[17,"NID_dsaWithSHA","","",null,null],[17,"NID_shaWithRSAEncryption","","",null,null],[17,"NID_des_ede_ecb","","",null,null],[17,"NID_des_ede3_ecb","","",null,null],[17,"NID_des_ede_cbc","","",null,null],[17,"NID_des_ede_cfb64","","",null,null],[17,"NID_des_ede3_cfb64","","",null,null],[17,"NID_des_ede_ofb64","","",null,null],[17,"NID_des_ede3_ofb64","","",null,null],[17,"NID_desx_cbc","","",null,null],[17,"NID_sha","","",null,null],[17,"NID_sha1","","",null,null],[17,"NID_dsaWithSHA1_2","","",null,null],[17,"NID_sha1WithRSA","","",null,null],[17,"NID_ripemd160","","",null,null],[17,"NID_ripemd160WithRSA","","",null,null],[17,"NID_sxnet","","",null,null],[17,"NID_X500","","",null,null],[17,"NID_X509","","",null,null],[17,"NID_commonName","","",null,null],[17,"NID_surname","","",null,null],[17,"NID_serialNumber","","",null,null],[17,"NID_countryName","","",null,null],[17,"NID_localityName","","",null,null],[17,"NID_stateOrProvinceName","","",null,null],[17,"NID_streetAddress","","",null,null],[17,"NID_organizationName","","",null,null],[17,"NID_organizationalUnitName","","",null,null],[17,"NID_title","","",null,null],[17,"NID_description","","",null,null],[17,"NID_searchGuide","","",null,null],[17,"NID_businessCategory","","",null,null],[17,"NID_postalAddress","","",null,null],[17,"NID_postalCode","","",null,null],[17,"NID_postOfficeBox","","",null,null],[17,"NID_physicalDeliveryOfficeName","","",null,null],[17,"NID_telephoneNumber","","",null,null],[17,"NID_telexNumber","","",null,null],[17,"NID_teletexTerminalIdentifier","","",null,null],[17,"NID_facsimileTelephoneNumber","","",null,null],[17,"NID_x121Address","","",null,null],[17,"NID_internationaliSDNNumber","","",null,null],[17,"NID_registeredAddress","","",null,null],[17,"NID_destinationIndicator","","",null,null],[17,"NID_preferredDeliveryMethod","","",null,null],[17,"NID_presentationAddress","","",null,null],[17,"NID_supportedApplicationContext","","",null,null],[17,"NID_member","","",null,null],[17,"NID_owner","","",null,null],[17,"NID_roleOccupant","","",null,null],[17,"NID_seeAlso","","",null,null],[17,"NID_userPassword","","",null,null],[17,"NID_userCertificate","","",null,null],[17,"NID_cACertificate","","",null,null],[17,"NID_authorityRevocationList","","",null,null],[17,"NID_certificateRevocationList","","",null,null],[17,"NID_crossCertificatePair","","",null,null],[17,"NID_name","","",null,null],[17,"NID_givenName","","",null,null],[17,"NID_initials","","",null,null],[17,"NID_generationQualifier","","",null,null],[17,"NID_x500UniqueIdentifier","","",null,null],[17,"NID_dnQualifier","","",null,null],[17,"NID_enhancedSearchGuide","","",null,null],[17,"NID_protocolInformation","","",null,null],[17,"NID_distinguishedName","","",null,null],[17,"NID_uniqueMember","","",null,null],[17,"NID_houseIdentifier","","",null,null],[17,"NID_supportedAlgorithms","","",null,null],[17,"NID_deltaRevocationList","","",null,null],[17,"NID_dmdName","","",null,null],[17,"NID_pseudonym","","",null,null],[17,"NID_role","","",null,null],[17,"NID_X500algorithms","","",null,null],[17,"NID_rsa","","",null,null],[17,"NID_mdc2WithRSA","","",null,null],[17,"NID_mdc2","","",null,null],[17,"NID_id_ce","","",null,null],[17,"NID_subject_directory_attributes","","",null,null],[17,"NID_subject_key_identifier","","",null,null],[17,"NID_key_usage","","",null,null],[17,"NID_private_key_usage_period","","",null,null],[17,"NID_subject_alt_name","","",null,null],[17,"NID_issuer_alt_name","","",null,null],[17,"NID_basic_constraints","","",null,null],[17,"NID_crl_number","","",null,null],[17,"NID_crl_reason","","",null,null],[17,"NID_invalidity_date","","",null,null],[17,"NID_delta_crl","","",null,null],[17,"NID_issuing_distribution_point","","",null,null],[17,"NID_certificate_issuer","","",null,null],[17,"NID_name_constraints","","",null,null],[17,"NID_crl_distribution_points","","",null,null],[17,"NID_certificate_policies","","",null,null],[17,"NID_any_policy","","",null,null],[17,"NID_policy_mappings","","",null,null],[17,"NID_authority_key_identifier","","",null,null],[17,"NID_policy_constraints","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_freshest_crl","","",null,null],[17,"NID_inhibit_any_policy","","",null,null],[17,"NID_target_information","","",null,null],[17,"NID_no_rev_avail","","",null,null],[17,"NID_anyExtendedKeyUsage","","",null,null],[17,"NID_netscape","","",null,null],[17,"NID_netscape_cert_extension","","",null,null],[17,"NID_netscape_data_type","","",null,null],[17,"NID_netscape_cert_type","","",null,null],[17,"NID_netscape_base_url","","",null,null],[17,"NID_netscape_revocation_url","","",null,null],[17,"NID_netscape_ca_revocation_url","","",null,null],[17,"NID_netscape_renewal_url","","",null,null],[17,"NID_netscape_ca_policy_url","","",null,null],[17,"NID_netscape_ssl_server_name","","",null,null],[17,"NID_netscape_comment","","",null,null],[17,"NID_netscape_cert_sequence","","",null,null],[17,"NID_ns_sgc","","",null,null],[17,"NID_org","","",null,null],[17,"NID_dod","","",null,null],[17,"NID_iana","","",null,null],[17,"NID_Directory","","",null,null],[17,"NID_Management","","",null,null],[17,"NID_Experimental","","",null,null],[17,"NID_Private","","",null,null],[17,"NID_Security","","",null,null],[17,"NID_SNMPv2","","",null,null],[17,"NID_Mail","","",null,null],[17,"NID_Enterprises","","",null,null],[17,"NID_dcObject","","",null,null],[17,"NID_mime_mhs","","",null,null],[17,"NID_mime_mhs_headings","","",null,null],[17,"NID_mime_mhs_bodies","","",null,null],[17,"NID_id_hex_partial_message","","",null,null],[17,"NID_id_hex_multipart_message","","",null,null],[17,"NID_zlib_compression","","",null,null],[17,"NID_aes_128_ecb","","",null,null],[17,"NID_aes_128_cbc","","",null,null],[17,"NID_aes_128_ofb128","","",null,null],[17,"NID_aes_128_cfb128","","",null,null],[17,"NID_id_aes128_wrap","","",null,null],[17,"NID_aes_128_gcm","","",null,null],[17,"NID_aes_128_ccm","","",null,null],[17,"NID_id_aes128_wrap_pad","","",null,null],[17,"NID_aes_192_ecb","","",null,null],[17,"NID_aes_192_cbc","","",null,null],[17,"NID_aes_192_ofb128","","",null,null],[17,"NID_aes_192_cfb128","","",null,null],[17,"NID_id_aes192_wrap","","",null,null],[17,"NID_aes_192_gcm","","",null,null],[17,"NID_aes_192_ccm","","",null,null],[17,"NID_id_aes192_wrap_pad","","",null,null],[17,"NID_aes_256_ecb","","",null,null],[17,"NID_aes_256_cbc","","",null,null],[17,"NID_aes_256_ofb128","","",null,null],[17,"NID_aes_256_cfb128","","",null,null],[17,"NID_id_aes256_wrap","","",null,null],[17,"NID_aes_256_gcm","","",null,null],[17,"NID_aes_256_ccm","","",null,null],[17,"NID_id_aes256_wrap_pad","","",null,null],[17,"NID_aes_128_cfb1","","",null,null],[17,"NID_aes_192_cfb1","","",null,null],[17,"NID_aes_256_cfb1","","",null,null],[17,"NID_aes_128_cfb8","","",null,null],[17,"NID_aes_192_cfb8","","",null,null],[17,"NID_aes_256_cfb8","","",null,null],[17,"NID_aes_128_ctr","","",null,null],[17,"NID_aes_192_ctr","","",null,null],[17,"NID_aes_256_ctr","","",null,null],[17,"NID_aes_128_xts","","",null,null],[17,"NID_aes_256_xts","","",null,null],[17,"NID_des_cfb1","","",null,null],[17,"NID_des_cfb8","","",null,null],[17,"NID_des_ede3_cfb1","","",null,null],[17,"NID_des_ede3_cfb8","","",null,null],[17,"NID_sha256","","",null,null],[17,"NID_sha384","","",null,null],[17,"NID_sha512","","",null,null],[17,"NID_sha224","","",null,null],[17,"NID_dsa_with_SHA224","","",null,null],[17,"NID_dsa_with_SHA256","","",null,null],[17,"NID_hold_instruction_code","","",null,null],[17,"NID_hold_instruction_none","","",null,null],[17,"NID_hold_instruction_call_issuer","","",null,null],[17,"NID_hold_instruction_reject","","",null,null],[17,"NID_data","","",null,null],[17,"NID_pss","","",null,null],[17,"NID_ucl","","",null,null],[17,"NID_pilot","","",null,null],[17,"NID_pilotAttributeType","","",null,null],[17,"NID_pilotAttributeSyntax","","",null,null],[17,"NID_pilotObjectClass","","",null,null],[17,"NID_pilotGroups","","",null,null],[17,"NID_iA5StringSyntax","","",null,null],[17,"NID_caseIgnoreIA5StringSyntax","","",null,null],[17,"NID_pilotObject","","",null,null],[17,"NID_pilotPerson","","",null,null],[17,"NID_account","","",null,null],[17,"NID_document","","",null,null],[17,"NID_room","","",null,null],[17,"NID_documentSeries","","",null,null],[17,"NID_Domain","","",null,null],[17,"NID_rFC822localPart","","",null,null],[17,"NID_dNSDomain","","",null,null],[17,"NID_domainRelatedObject","","",null,null],[17,"NID_friendlyCountry","","",null,null],[17,"NID_simpleSecurityObject","","",null,null],[17,"NID_pilotOrganization","","",null,null],[17,"NID_pilotDSA","","",null,null],[17,"NID_qualityLabelledData","","",null,null],[17,"NID_userId","","",null,null],[17,"NID_textEncodedORAddress","","",null,null],[17,"NID_rfc822Mailbox","","",null,null],[17,"NID_info","","",null,null],[17,"NID_favouriteDrink","","",null,null],[17,"NID_roomNumber","","",null,null],[17,"NID_photo","","",null,null],[17,"NID_userClass","","",null,null],[17,"NID_host","","",null,null],[17,"NID_manager","","",null,null],[17,"NID_documentIdentifier","","",null,null],[17,"NID_documentTitle","","",null,null],[17,"NID_documentVersion","","",null,null],[17,"NID_documentAuthor","","",null,null],[17,"NID_documentLocation","","",null,null],[17,"NID_homeTelephoneNumber","","",null,null],[17,"NID_secretary","","",null,null],[17,"NID_otherMailbox","","",null,null],[17,"NID_lastModifiedTime","","",null,null],[17,"NID_lastModifiedBy","","",null,null],[17,"NID_domainComponent","","",null,null],[17,"NID_aRecord","","",null,null],[17,"NID_pilotAttributeType27","","",null,null],[17,"NID_mXRecord","","",null,null],[17,"NID_nSRecord","","",null,null],[17,"NID_sOARecord","","",null,null],[17,"NID_cNAMERecord","","",null,null],[17,"NID_associatedDomain","","",null,null],[17,"NID_associatedName","","",null,null],[17,"NID_homePostalAddress","","",null,null],[17,"NID_personalTitle","","",null,null],[17,"NID_mobileTelephoneNumber","","",null,null],[17,"NID_pagerTelephoneNumber","","",null,null],[17,"NID_friendlyCountryName","","",null,null],[17,"NID_organizationalStatus","","",null,null],[17,"NID_janetMailbox","","",null,null],[17,"NID_mailPreferenceOption","","",null,null],[17,"NID_buildingName","","",null,null],[17,"NID_dSAQuality","","",null,null],[17,"NID_singleLevelQuality","","",null,null],[17,"NID_subtreeMinimumQuality","","",null,null],[17,"NID_subtreeMaximumQuality","","",null,null],[17,"NID_personalSignature","","",null,null],[17,"NID_dITRedirect","","",null,null],[17,"NID_audio","","",null,null],[17,"NID_documentPublisher","","",null,null],[17,"NID_id_set","","",null,null],[17,"NID_set_ctype","","",null,null],[17,"NID_set_msgExt","","",null,null],[17,"NID_set_attr","","",null,null],[17,"NID_set_policy","","",null,null],[17,"NID_set_certExt","","",null,null],[17,"NID_set_brand","","",null,null],[17,"NID_setct_PANData","","",null,null],[17,"NID_setct_PANToken","","",null,null],[17,"NID_setct_PANOnly","","",null,null],[17,"NID_setct_OIData","","",null,null],[17,"NID_setct_PI","","",null,null],[17,"NID_setct_PIData","","",null,null],[17,"NID_setct_PIDataUnsigned","","",null,null],[17,"NID_setct_HODInput","","",null,null],[17,"NID_setct_AuthResBaggage","","",null,null],[17,"NID_setct_AuthRevReqBaggage","","",null,null],[17,"NID_setct_AuthRevResBaggage","","",null,null],[17,"NID_setct_CapTokenSeq","","",null,null],[17,"NID_setct_PInitResData","","",null,null],[17,"NID_setct_PI_TBS","","",null,null],[17,"NID_setct_PResData","","",null,null],[17,"NID_setct_AuthReqTBS","","",null,null],[17,"NID_setct_AuthResTBS","","",null,null],[17,"NID_setct_AuthResTBSX","","",null,null],[17,"NID_setct_AuthTokenTBS","","",null,null],[17,"NID_setct_CapTokenData","","",null,null],[17,"NID_setct_CapTokenTBS","","",null,null],[17,"NID_setct_AcqCardCodeMsg","","",null,null],[17,"NID_setct_AuthRevReqTBS","","",null,null],[17,"NID_setct_AuthRevResData","","",null,null],[17,"NID_setct_AuthRevResTBS","","",null,null],[17,"NID_setct_CapReqTBS","","",null,null],[17,"NID_setct_CapReqTBSX","","",null,null],[17,"NID_setct_CapResData","","",null,null],[17,"NID_setct_CapRevReqTBS","","",null,null],[17,"NID_setct_CapRevReqTBSX","","",null,null],[17,"NID_setct_CapRevResData","","",null,null],[17,"NID_setct_CredReqTBS","","",null,null],[17,"NID_setct_CredReqTBSX","","",null,null],[17,"NID_setct_CredResData","","",null,null],[17,"NID_setct_CredRevReqTBS","","",null,null],[17,"NID_setct_CredRevReqTBSX","","",null,null],[17,"NID_setct_CredRevResData","","",null,null],[17,"NID_setct_PCertReqData","","",null,null],[17,"NID_setct_PCertResTBS","","",null,null],[17,"NID_setct_BatchAdminReqData","","",null,null],[17,"NID_setct_BatchAdminResData","","",null,null],[17,"NID_setct_CardCInitResTBS","","",null,null],[17,"NID_setct_MeAqCInitResTBS","","",null,null],[17,"NID_setct_RegFormResTBS","","",null,null],[17,"NID_setct_CertReqData","","",null,null],[17,"NID_setct_CertReqTBS","","",null,null],[17,"NID_setct_CertResData","","",null,null],[17,"NID_setct_CertInqReqTBS","","",null,null],[17,"NID_setct_ErrorTBS","","",null,null],[17,"NID_setct_PIDualSignedTBE","","",null,null],[17,"NID_setct_PIUnsignedTBE","","",null,null],[17,"NID_setct_AuthReqTBE","","",null,null],[17,"NID_setct_AuthResTBE","","",null,null],[17,"NID_setct_AuthResTBEX","","",null,null],[17,"NID_setct_AuthTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBEX","","",null,null],[17,"NID_setct_AcqCardCodeMsgTBE","","",null,null],[17,"NID_setct_AuthRevReqTBE","","",null,null],[17,"NID_setct_AuthRevResTBE","","",null,null],[17,"NID_setct_AuthRevResTBEB","","",null,null],[17,"NID_setct_CapReqTBE","","",null,null],[17,"NID_setct_CapReqTBEX","","",null,null],[17,"NID_setct_CapResTBE","","",null,null],[17,"NID_setct_CapRevReqTBE","","",null,null],[17,"NID_setct_CapRevReqTBEX","","",null,null],[17,"NID_setct_CapRevResTBE","","",null,null],[17,"NID_setct_CredReqTBE","","",null,null],[17,"NID_setct_CredReqTBEX","","",null,null],[17,"NID_setct_CredResTBE","","",null,null],[17,"NID_setct_CredRevReqTBE","","",null,null],[17,"NID_setct_CredRevReqTBEX","","",null,null],[17,"NID_setct_CredRevResTBE","","",null,null],[17,"NID_setct_BatchAdminReqTBE","","",null,null],[17,"NID_setct_BatchAdminResTBE","","",null,null],[17,"NID_setct_RegFormReqTBE","","",null,null],[17,"NID_setct_CertReqTBE","","",null,null],[17,"NID_setct_CertReqTBEX","","",null,null],[17,"NID_setct_CertResTBE","","",null,null],[17,"NID_setct_CRLNotificationTBS","","",null,null],[17,"NID_setct_CRLNotificationResTBS","","",null,null],[17,"NID_setct_BCIDistributionTBS","","",null,null],[17,"NID_setext_genCrypt","","",null,null],[17,"NID_setext_miAuth","","",null,null],[17,"NID_setext_pinSecure","","",null,null],[17,"NID_setext_pinAny","","",null,null],[17,"NID_setext_track2","","",null,null],[17,"NID_setext_cv","","",null,null],[17,"NID_set_policy_root","","",null,null],[17,"NID_setCext_hashedRoot","","",null,null],[17,"NID_setCext_certType","","",null,null],[17,"NID_setCext_merchData","","",null,null],[17,"NID_setCext_cCertRequired","","",null,null],[17,"NID_setCext_tunneling","","",null,null],[17,"NID_setCext_setExt","","",null,null],[17,"NID_setCext_setQualf","","",null,null],[17,"NID_setCext_PGWYcapabilities","","",null,null],[17,"NID_setCext_TokenIdentifier","","",null,null],[17,"NID_setCext_Track2Data","","",null,null],[17,"NID_setCext_TokenType","","",null,null],[17,"NID_setCext_IssuerCapabilities","","",null,null],[17,"NID_setAttr_Cert","","",null,null],[17,"NID_setAttr_PGWYcap","","",null,null],[17,"NID_setAttr_TokenType","","",null,null],[17,"NID_setAttr_IssCap","","",null,null],[17,"NID_set_rootKeyThumb","","",null,null],[17,"NID_set_addPolicy","","",null,null],[17,"NID_setAttr_Token_EMV","","",null,null],[17,"NID_setAttr_Token_B0Prime","","",null,null],[17,"NID_setAttr_IssCap_CVM","","",null,null],[17,"NID_setAttr_IssCap_T2","","",null,null],[17,"NID_setAttr_IssCap_Sig","","",null,null],[17,"NID_setAttr_GenCryptgrm","","",null,null],[17,"NID_setAttr_T2Enc","","",null,null],[17,"NID_setAttr_T2cleartxt","","",null,null],[17,"NID_setAttr_TokICCsig","","",null,null],[17,"NID_setAttr_SecDevSig","","",null,null],[17,"NID_set_brand_IATA_ATA","","",null,null],[17,"NID_set_brand_Diners","","",null,null],[17,"NID_set_brand_AmericanExpress","","",null,null],[17,"NID_set_brand_JCB","","",null,null],[17,"NID_set_brand_Visa","","",null,null],[17,"NID_set_brand_MasterCard","","",null,null],[17,"NID_set_brand_Novus","","",null,null],[17,"NID_des_cdmf","","",null,null],[17,"NID_rsaOAEPEncryptionSET","","",null,null],[17,"NID_ipsec3","","",null,null],[17,"NID_ipsec4","","",null,null],[17,"NID_whirlpool","","",null,null],[17,"NID_cryptopro","","",null,null],[17,"NID_cryptocom","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",null,null],[17,"NID_id_GostR3411_94","","",null,null],[17,"NID_id_HMACGostR3411_94","","",null,null],[17,"NID_id_GostR3410_2001","","",null,null],[17,"NID_id_GostR3410_94","","",null,null],[17,"NID_id_Gost28147_89","","",null,null],[17,"NID_gost89_cnt","","",null,null],[17,"NID_id_Gost28147_89_MAC","","",null,null],[17,"NID_id_GostR3411_94_prf","","",null,null],[17,"NID_id_GostR3410_2001DH","","",null,null],[17,"NID_id_GostR3410_94DH","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",null,null],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",null,null],[17,"NID_id_GostR3411_94_TestParamSet","","",null,null],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",null,null],[17,"NID_id_Gost28147_89_TestParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_TestParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_TestParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_a","","",null,null],[17,"NID_id_GostR3410_94_aBis","","",null,null],[17,"NID_id_GostR3410_94_b","","",null,null],[17,"NID_id_GostR3410_94_bBis","","",null,null],[17,"NID_id_Gost28147_89_cc","","",null,null],[17,"NID_id_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",null,null],[17,"NID_camellia_128_cbc","","",null,null],[17,"NID_camellia_192_cbc","","",null,null],[17,"NID_camellia_256_cbc","","",null,null],[17,"NID_id_camellia128_wrap","","",null,null],[17,"NID_id_camellia192_wrap","","",null,null],[17,"NID_id_camellia256_wrap","","",null,null],[17,"NID_camellia_128_ecb","","",null,null],[17,"NID_camellia_128_ofb128","","",null,null],[17,"NID_camellia_128_cfb128","","",null,null],[17,"NID_camellia_192_ecb","","",null,null],[17,"NID_camellia_192_ofb128","","",null,null],[17,"NID_camellia_192_cfb128","","",null,null],[17,"NID_camellia_256_ecb","","",null,null],[17,"NID_camellia_256_ofb128","","",null,null],[17,"NID_camellia_256_cfb128","","",null,null],[17,"NID_camellia_128_cfb1","","",null,null],[17,"NID_camellia_192_cfb1","","",null,null],[17,"NID_camellia_256_cfb1","","",null,null],[17,"NID_camellia_128_cfb8","","",null,null],[17,"NID_camellia_192_cfb8","","",null,null],[17,"NID_camellia_256_cfb8","","",null,null],[17,"NID_kisa","","",null,null],[17,"NID_seed_ecb","","",null,null],[17,"NID_seed_cbc","","",null,null],[17,"NID_seed_cfb128","","",null,null],[17,"NID_seed_ofb128","","",null,null],[17,"NID_hmac","","",null,null],[17,"NID_cmac","","",null,null],[17,"NID_rc4_hmac_md5","","",null,null],[17,"NID_aes_128_cbc_hmac_sha1","","",null,null],[17,"NID_aes_192_cbc_hmac_sha1","","",null,null],[17,"NID_aes_256_cbc_hmac_sha1","","",null,null],[17,"OCSP_NOCERTS","","",null,null],[17,"OCSP_NOINTERN","","",null,null],[17,"OCSP_NOSIGS","","",null,null],[17,"OCSP_NOCHAIN","","",null,null],[17,"OCSP_NOVERIFY","","",null,null],[17,"OCSP_NOEXPLICIT","","",null,null],[17,"OCSP_NOCASIGN","","",null,null],[17,"OCSP_NODELEGATED","","",null,null],[17,"OCSP_NOCHECKS","","",null,null],[17,"OCSP_TRUSTOTHER","","",null,null],[17,"OCSP_RESPID_KEY","","",null,null],[17,"OCSP_NOTIME","","",null,null],[17,"V_OCSP_CERTSTATUS_GOOD","","",null,null],[17,"V_OCSP_CERTSTATUS_REVOKED","","",null,null],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",null,null],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",null,null],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",null,null],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",null,null],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",null,null],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",null,null],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",null,null],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",null,null],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",null,null],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",null,null],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"OPENSSL_EC_NAMED_CURVE","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"PKCS12_DEFAULT_ITER","","",null,null],[17,"RSA_F4","","",null,null],[17,"RSA_PKCS1_PADDING","","",null,null],[17,"RSA_SSLV23_PADDING","","",null,null],[17,"RSA_NO_PADDING","","",null,null],[17,"RSA_PKCS1_OAEP_PADDING","","",null,null],[17,"RSA_X931_PADDING","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_SET_TMP_ECDH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",null,null],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"TLSEXT_STATUSTYPE_ocsp","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"point_conversion_form_t"}}]],"paths":[[3,"stack_st_ASN1_OBJECT"],[3,"stack_st_X509"],[3,"stack_st_X509_NAME"],[3,"stack_st_X509_ATTRIBUTE"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"stack_st_SSL_CIPHER"],[3,"stack_st_OPENSSL_STRING"],[3,"_STACK"],[3,"BIO_METHOD"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"BIGNUM"],[3,"DH"],[3,"X509"],[3,"X509_CINF"],[3,"X509_ALGOR"],[3,"ASN1_ENCODING"],[3,"X509_VAL"],[3,"X509_REQ_INFO"],[3,"X509_REQ"],[3,"SSL"],[3,"SSL_CTX"],[3,"SSL_SESSION"],[3,"GENERAL_NAME"],[4,"point_conversion_form_t"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the request.  For example, a forward slash indicates a path.  In order for that charcter to exist outside of a path separator, that charcter would need to be encoded.","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"inputs":[{"name":"u8"}],"output":{"name":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"simple_encode_set"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"query_encode_set"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"default_encode_set"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"path_segment_encode_set"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",4,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"userinfo_encode_set"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"percentencode"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"percentdecode"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",7,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"standardnormal"}}],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"exp1"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",20,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"next_u32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",23,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",27,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,{"inputs":[{"name":"self"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["safemem"] = {"doc":"Safe wrappers for memory-accessing functions like `std::ptr::copy()`.","items":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges may overlap.",null,null],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",null,null],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",null,null]],"paths":[]};
searchIndex["scoped_tls"] = {"doc":"Scoped thread-local storage","items":[[3,"ScopedKey","scoped_tls","Type representing a thread local storage key corresponding to a reference to the type parameter `T`.",null,null],[11,"set","","Inserts a value into this scoped thread local storage slot for a duration of a closure.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"scoped_thread_local","","",null,null]],"paths":[[3,"ScopedKey"]]};
searchIndex["slab"] = {"doc":"","items":[[3,"Slab","slab","A preallocated chunk of memory for storing objects of the same type.",null,null],[3,"Entry","","A handle to an occupied slot in the `Slab`",null,null],[3,"VacantEntry","","A handle to a vacant slot in the `Slab`",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"with_capacity","","Returns an empty `Slab` with the requested capacity",0,{"inputs":[{"name":"usize"}],"output":{"name":"slab"}}],[11,"len","","Returns the number of values stored by the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Returns the total capacity of the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `Slab` is storing no values",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"available","","Returns the number of available slots remaining in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"has_available","","Returns true if the `Slab` has available slots",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains","","Returns true if the `Slab` contains a value for the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"get","","Get a reference to the value associated with the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the value associated with the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"insert","","Insert a value into the slab, returning the associated token",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"entry","","Returns a handle to an entry.",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"vacant_entry","","Returns a handle to a vacant entry.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"remove","","Releases the given slot",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"retain","","Retain only the elements specified by the predicate.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"iter","","An iterator for visiting all elements stored in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","A mutable iterator for visiting all elements stored in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"clear","","Empty the slab, by freeing all entries",0,{"inputs":[{"name":"self"}],"output":null}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the given `Slab`. Does nothing if the capacity is already sufficient.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"replace","","Replace the value stored in the entry",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace_with","","Apply the function to the current value, replacing it with the result of the function.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"remove","","Remove and return the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get","","Get a reference to the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_mut","","Convert the entry handle to a mutable reference",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"index","","Return the entry index",1,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"insert","","Insert a value into the entry",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"entry"}}],[11,"index","","Returns the entry index",2,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline and fall back to the heap for larger allocations.","items":[[3,"Drain","smallvec","",null,null],[3,"SmallVec","","",null,null],[3,"IntoIter","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"push","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"set_len","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"inline_size","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"capacity","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"spilled","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drain","","",3,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"push","","",3,null],[11,"push_all_move","","",3,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"pop","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"grow","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"truncate","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"swap_remove","","",3,null],[11,"clear","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","",3,null],[11,"insert","","",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"borrow","","",3,null],[11,"borrow_mut","","",3,null],[11,"from","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"len","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"push","","",3,null],[11,"from_iter","","",3,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",3,{"inputs":[],"output":{"name":"smallvec"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"smallvec"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"ordering"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_iter","","",3,null]],"paths":[[8,"VecLike"],[8,"Array"],[3,"Drain"],[3,"SmallVec"],[3,"IntoIter"]]};
searchIndex["take"] = {"doc":"Cell allowing the inner value to be consumed without a mutable reference.","items":[[3,"Take","take","Cell allowing the inner value to be consumed without a mutable reference.",null,null],[11,"new","","Create and return a new `Take` value containing the given inner value.",0,{"inputs":[{"name":"t"}],"output":{"name":"take"}}],[11,"take","","Consume and return the inner value.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Take"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is -76060 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"outofrangeerror"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,{"inputs":[{"name":"self"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["tokio_core"] = {"doc":"`Future`-powered I/O at the core of Tokio","items":[[0,"io","tokio_core","I/O conveniences when working with primitives in `tokio-core`",null,null],[3,"Copy","tokio_core::io","A future which will copy all data from a reader into a writer.",null,null],[3,"EasyBuf","","A reference counted buffer of bytes.",null,null],[3,"EasyBufMut","","An RAII object returned from `get_mut` which provides mutable access to the underlying `Vec<u8>`.",null,null],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying `Io` object, using the `Codec` trait to encode and decode frames.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a  vector until the delimiter is reached.",null,null],[3,"ReadHalf","","The readable half of an object returned from `Io::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `Io::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to another.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"copy"}}],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the object itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"flush"}}],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"readexact"}}],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided.",null,{"inputs":[{"name":"a"},{"name":"vec"}],"output":{"name":"readtoend"}}],[5,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",null,{"inputs":[{"name":"r"},{"name":"t"}],"output":{"name":"read"}}],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`].",null,{"inputs":[{"name":"a"},{"name":"u8"},{"name":"vec"}],"output":{"name":"readuntil"}}],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"writeall"}}],[11,"poll","","",0,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"easybuf"}}],[11,"new","","Creates a new EasyBuf with no data and the default capacity.",1,{"inputs":[],"output":{"name":"easybuf"}}],[11,"with_capacity","","Creates a new EasyBuf with `cap` capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"easybuf"}}],[11,"len","","Returns the number of bytes contained in this `EasyBuf`.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_slice","","Returns the inner contents of this `EasyBuf` as a slice.",1,null],[11,"split_off","","Splits the buffer into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"easybuf"}}],[11,"drain_to","","Splits the buffer into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"easybuf"}}],[11,"get_mut","","Returns a mutable reference to the underlying growable buffer of bytes.",1,{"inputs":[{"name":"self"}],"output":{"name":"easybufmut"}}],[11,"as_ref","","",1,null],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"easybuf"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",3,null],[11,"poll_complete","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll_read","","Calls the underlying `poll_read` function on this handling, testing to see if it's ready to be read from.",9,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Calls the underlying `poll_write` function on this handling, testing to see if it's ready to be written to.",10,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"read","","",9,null],[11,"write","","",10,null],[11,"flush","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",11,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"as_ref","","",11,null],[11,"as_mut","","",11,null],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[6,"IoFuture","","A convenience typedef around a `Future` whose error component is `io::Error`",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error component is `io::Error`",null,null],[8,"Codec","","Encoding and decoding of frames via buffers.",null,null],[16,"In","","The type of decoded frames.",13,null],[16,"Out","","The type of frames to be encoded.",13,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",13,{"inputs":[{"name":"self"},{"name":"easybuf"}],"output":{"name":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",13,{"inputs":[{"name":"self"},{"name":"easybuf"}],"output":{"name":"result"}}],[10,"encode","","Encodes a frame into the buffer provided.",13,null],[8,"Io","","A trait for read/write I/O objects",null,null],[11,"poll_read","","Tests to see if this I/O object may be readable.",14,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Tests to see if this I/O object may be writable.",14,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"read_vec","","Read in a list of buffers all at once.",14,null],[11,"write_vec","","Write a list of buffers all at once.",14,null],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",14,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",14,null],[0,"net","tokio_core","TCP/UDP bindings for `tokio-core`",null,null],[3,"TcpStream","tokio_core::net","An I/O object representing a TCP stream connected to a remote endpoint.",null,null],[3,"TcpStreamNew","","Future returned by `TcpStream::connect` which will resolve to a `TcpStream` when the stream is connected.",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for incoming connections.",null,null],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function representing the stream of sockets received from a listener.",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using the `UdpCodec` trait to encode and decode frames.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to a UDP socket.",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[11,"as_raw_fd","","",15,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",16,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"bind","","Create a new TCP listener associated with this event loop.",16,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"accept","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_listener","","Create a new TCP listener from the standard library's TCP listener.",16,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",16,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"local_addr","","Returns the local address that this listener is bound to.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"incoming","","Consumes this listener, returning a stream of the sockets this listener accepts.",16,{"inputs":[{"name":"self"}],"output":{"name":"incoming"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"connect","","Create a new TCP stream connected to the specified address.",15,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"tcpstreamnew"}}],[11,"from_stream","","Create a new `TcpStream` from a `net::TcpStream`.",15,{"inputs":[{"name":"tcpstream"},{"name":"handle"}],"output":{"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpStream`, connecting it to the address specified.",15,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"box"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",15,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Test whether this socket is ready to be written to or not.",15,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the remote address that this stream is connected to.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",15,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",15,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",15,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",15,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",15,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"prepare_uninitialized_buffer","","",15,null],[11,"read_buf","","",15,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[11,"shutdown","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"write_buf","","",15,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[11,"poll_read","","",15,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","",15,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"read_vec","","",15,null],[11,"write_vec","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",19,null],[11,"poll_complete","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",19,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",19,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"as_raw_fd","","",20,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"bind","","Create a new UDP socket bound to the specified address.",20,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"from_socket","","Creates a new `UdpSocket` from the previously bound socket provided.",20,{"inputs":[{"name":"udpsocket"},{"name":"handle"}],"output":{"name":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `UdpSocket` object, using the provided `UdpCodec` to read and write the raw data.",20,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"udpframed"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",20,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Test whether this socket is ready to be written to or not.",20,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",20,null],[11,"send_dgram","","Creates a future that will write the entire contents of the buffer `buf` provided as a datagram to this socket.",20,{"inputs":[{"name":"self"},{"name":"t"},{"name":"socketaddr"}],"output":{"name":"senddgram"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",20,null],[11,"recv_dgram","","Creates a future that receive a datagram to be written to the buffer provided.",20,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"recvdgram"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",20,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",20,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",20,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",20,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[8,"UdpCodec","","Encoding of frames via buffers.",null,null],[16,"In","","The type of decoded frames.",23,null],[16,"Out","","The type of frames to be encoded.",23,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",23,null],[10,"encode","","Encodes a frame into the buffer provided.",23,null],[0,"reactor","tokio_core","The core reactor driving all I/O",null,null],[3,"PollEvented","tokio_core::reactor","A concrete implementation of a stream of readiness notifications for I/O objects that originates from an event loop.",null,null],[3,"Timeout","","A future representing the notification that a timeout has occurred.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[3,"Core","","An event loop.",null,null],[3,"CoreId","","An unique ID for a Core",null,null],[3,"Remote","","Handle to an event loop, used to construct I/O objects, send messages, and otherwise interact indirectly with the event loop itself.",null,null],[3,"Handle","","A non-sendable handle to an event loop, useful for manufacturing instances of `LoopData`.",null,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new readiness stream associated with the provided `loop_handle` and for the given `source`.",24,{"inputs":[{"name":"e"},{"name":"handle"}],"output":{"name":"result"}}],[11,"deregister","","Deregisters this source of events from the reactor core specified.",24,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll_read","","Tests to see if this source is ready to be read from or not.",24,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Tests to see if this source is ready to be written to or not.",24,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_ready","","Test to see whether this source fulfills any condition listed in `mask` provided.",24,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"async"}}],[11,"need_read","","Indicates to this source of events that the corresponding I/O object is no longer readable, but it needs to be.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"need_write","","Indicates to this source of events that the corresponding I/O object is no longer writable, but it needs to be.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"remote","","Returns a reference to the event loop handle that this readiness stream is associated with.",24,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"get_ref","","Returns a shared reference to the underlying I/O object this readiness stream is wrapping.",24,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O object this readiness stream is wrapping.",24,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"read","","",24,null],[11,"write","","",24,null],[11,"flush","","",24,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll_read","","",24,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","",24,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"drop","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new timeout which will fire at `dur` time into the future.",25,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"new_at","","Creates a new timeout which will fire at the time specified by `at`.",25,{"inputs":[{"name":"instant"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new interval which will fire at `dur` time into the future, and will repeat every `dur` interval after",26,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"new_at","","Creates a new interval which will fire at the time specified by `at`, and then will repeat every `dur` interval after",26,{"inputs":[{"name":"instant"},{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"coreid"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"coreid"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"new","","Creates a new event loop, returning any error that happened during the creation.",30,{"inputs":[],"output":{"name":"result"}}],[11,"handle","","Returns a handle to this event loop which cannot be sent across threads but can be used as a proxy to the event loop itself.",30,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"remote","","Generates a remote handle to this event loop which can be used to spawn tasks from other threads into this event loop.",30,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"run","","Runs a future until completion, driving the event loop while we're otherwise waiting for the future to complete.",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"turn","","Performs one iteration of the event loop, blocking on waiting for events for at most `max_wait` (forever if `None`).",30,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"id","","Get the ID of this loop",30,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"execute","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"spawn","","Spawns a new future into the event loop this remote is associated with.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"id","","Return the ID of the represented Core",28,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"handle","","Attempts to \"promote\" this remote to a handle, if possible.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"execute","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"remote","","Returns a reference to the underlying remote handle to the event loop.",29,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"spawn","","Spawns a new future on the event loop this handle is associated with.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"spawn_fn","","Spawns a closure on this event loop.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"id","","Return the ID of the represented Core",29,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"execute","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"try_nb","tokio_core","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits.",null,null],[11,"decode_eof","tokio_core::io","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",13,{"inputs":[{"name":"self"},{"name":"easybuf"}],"output":{"name":"result"}}]],"paths":[[3,"Copy"],[3,"EasyBuf"],[3,"EasyBufMut"],[3,"Framed"],[3,"Flush"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"Read"],[3,"ReadUntil"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"Codec"],[8,"Io"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"TcpStreamNew"],[3,"UdpFramed"],[3,"UdpSocket"],[3,"SendDgram"],[3,"RecvDgram"],[8,"UdpCodec"],[3,"PollEvented"],[3,"Timeout"],[3,"Interval"],[3,"CoreId"],[3,"Remote"],[3,"Handle"],[3,"Core"]]};
searchIndex["tokio_io"] = {"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in `tokio-core`",null,null],[3,"Copy","tokio_io::io","A future which will copy all data from a reader into a writer.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Lines","","Combinator created by the top-level `lines` method which is a stream over the lines of text on an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a vector until the delimiter is reached.",null,null],[3,"Shutdown","","A future used to fully shutdown an I/O object.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to another.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"copy"}}],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the object itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"flush"}}],[5,"lines","","Creates a new stream from the I/O object given representing the lines of input that are found on `A`.",null,{"inputs":[{"name":"a"}],"output":{"name":"lines"}}],[5,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",null,{"inputs":[{"name":"r"},{"name":"t"}],"output":{"name":"read"}}],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"readexact"}}],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided.",null,{"inputs":[{"name":"a"},{"name":"vec"}],"output":{"name":"readtoend"}}],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`].",null,{"inputs":[{"name":"a"},{"name":"u8"},{"name":"vec"}],"output":{"name":"readuntil"}}],[5,"shutdown","","Creates a future which will entirely shutdown an I/O object and then yield the object itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"shutdown"}}],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"writeall"}}],[0,"codec","tokio_io","Utilities for encoding and decoding frames.",null,null],[3,"Framed","tokio_io::codec","A unified `Stream` and `Sink` interface to an underlying I/O object, using the `Encoder` and `Decoder` traits to encode and decode frames.",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed transport. It can be used to construct a new `Framed` with a different codec. It contains all current buffers and the inner transport.",null,null],[12,"inner","","The inner transport used to read bytes to and write bytes to",0,null],[12,"readbuf","","The buffer with read but unprocessed data.",0,null],[12,"writebuf","","A buffer with unprocessed data which are not written yet.",0,null],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",null,null],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",null,null],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_io::codec::length_delimited","Configure length delimited `FramedRead`, `FramedWrite`, and `Framed` values.",null,null],[3,"Framed","","Adapts a byte stream into a unified `Stream` and `Sink` that works over entire frame values.",null,null],[3,"FramedRead","","Adapts a byte stream to a `Stream` yielding entire frame values.",null,null],[3,"FramedWrite","","Adapts a byte stream to a `Sink` accepting entire frame values.",null,null],[8,"Decoder","tokio_io::codec","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",1,null],[16,"Error","","The type of unrecoverable frame decoding errors.",1,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"result"}}],[8,"Encoder","","Trait of helper objects to write out messages as bytes, for use with `FramedWrite`.",null,null],[16,"Item","","The type of items consumed by the `Encoder`",2,null],[16,"Error","","The type of encoding errors.",2,null],[10,"encode","","Encodes a frame into the buffer provided.",2,null],[11,"fmt","tokio_io::io","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from_parts","tokio_io::codec","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",5,{"inputs":[{"name":"framedparts"},{"name":"u"}],"output":{"name":"framed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Frame`.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Frame`.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream and the buffer with unprocessed data.",5,{"inputs":[{"name":"self"}],"output":{"name":"framedparts"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",5,null],[11,"poll_complete","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"result"}}],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",6,{"inputs":[{"name":"t"},{"name":"d"}],"output":{"name":"framedread"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedRead`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedRead`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O stream.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"decoder","","Returns a reference to the underlying decoder.",6,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",6,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",6,null],[11,"poll_complete","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",7,{"inputs":[{"name":"t"},{"name":"e"}],"output":{"name":"framedwrite"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedWrite`.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedWrite`.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O stream.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"encoder","","Returns a reference to the underlying decoder.",7,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",7,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"start_send","","",7,null],[11,"poll_complete","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","tokio_io::codec::length_delimited","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Framed` with default configuration values.",10,{"inputs":[{"name":"t"}],"output":{"name":"framed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",10,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `FramedRead` with default configuration values.",9,{"inputs":[{"name":"t"}],"output":{"name":"framedread"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedRead`.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedRead`.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",9,null],[11,"poll_complete","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"write","","",9,null],[11,"flush","","",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"write_buf","","",9,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[11,"new","","Creates a new `FramedWrite` with default configuration values.",11,{"inputs":[{"name":"t"}],"output":{"name":"framedwrite"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedWrite`.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedWrite`.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O stream.",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start_send","","",11,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"read","","",11,null],[11,"read_buf","","",11,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[11,"prepare_uninitialized_buffer","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new length delimited framer builder with default configuration values.",8,{"inputs":[],"output":{"name":"builder"}}],[11,"big_endian","","Read the length field as a big endian integer",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"little_endian","","Read the length field as a little endian integer",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"max_frame_length","","Sets the max frame length",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_field_length","","Sets the number of bytes used to represent the length field",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_field_offset","","Sets the number of bytes in the header before the length field",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_adjustment","","Delta between the payload length specified in the header and the real payload length",8,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"self"}}],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new_read","","Create a configured length delimited `FramedRead`",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framedread"}}],[11,"new_write","","Create a configured length delimited `FramedWrite`",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framedwrite"}}],[11,"new_framed","","Create a configured length delimited `Framed`",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framed"}}],[11,"fmt","tokio_io::io","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Returns the underlying I/O object.",12,{"inputs":[{"name":"self"}],"output":{"name":"a"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",18,null],[11,"write","","",19,null],[11,"flush","","",19,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",20,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",20,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",20,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",20,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"as_ref","","",20,null],[11,"as_mut","","",20,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error component is `io::Error`",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error component is `io::Error`",null,null],[8,"AsyncRead","","A trait for readable objects which operated in an asynchronous and futures-aware fashion.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",22,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",22,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",22,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",22,null],[8,"AsyncWrite","","A trait for writable objects which operated in an asynchronous and futures-aware fashion.",null,null],[10,"shutdown","","Initiates or attempts to shut down this writer, returning success when the I/O connection has completely shut down.",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",23,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"poll"}}],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits.",null,null]],"paths":[[3,"FramedParts"],[8,"Decoder"],[8,"Encoder"],[3,"Copy"],[3,"Flush"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"Builder"],[3,"FramedRead"],[3,"Framed"],[3,"FramedWrite"],[3,"Lines"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"AsyncRead"],[8,"AsyncWrite"]]};
searchIndex["tokio_proto"] = {"doc":"This library provides a toolkit for rapid protocol development and usage, working with the rest of the Tokio stack.","items":[[3,"TcpClient","tokio_proto","Builds client connections to external services.",null,null],[3,"Connect","","A future for establishing a client connection.",null,null],[3,"TcpServer","","A builder for TCP servers.",null,null],[0,"pipeline","","Pipelined RPC protocols.",null,null],[3,"ClientService","tokio_proto::pipeline","Client `Service` for simple pipeline protocols",null,null],[3,"Pipeline","","A marker used to flag protocols as being pipelined RPC.",null,null],[8,"ClientProto","","A pipelined client protocol.",null,null],[16,"Request","","Request messages.",0,null],[16,"Response","","Response messages.",0,null],[16,"Transport","","The message transport, which works with I/O objects of type `T`.",0,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",0,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",0,null],[8,"ServerProto","","A pipelined server protocol.",null,null],[16,"Request","","Request messages.",1,null],[16,"Response","","Response messages.",1,null],[16,"Transport","","The message transport, which works with I/O objects of type `T`.",1,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",1,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",1,null],[0,"multiplex","tokio_proto","Multiplexed RPC protocols.",null,null],[3,"ClientService","tokio_proto::multiplex","Client `Service` for simple multiplex protocols",null,null],[3,"Multiplex","","A marker used to flag protocols as being multiplexed RPC.",null,null],[6,"RequestId","","Identifies a request / response thread",null,null],[8,"ClientProto","","An multiplexed client protocol.",null,null],[16,"Request","","Request messages.",2,null],[16,"Response","","Response messages.",2,null],[16,"Transport","","The message transport, which usually take `T` as a parameter.",2,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",2,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",2,null],[8,"ServerProto","","An multiplexed server protocol.",null,null],[16,"Request","","Request messages.",3,null],[16,"Response","","Response messages.",3,null],[16,"Transport","","The message transport, which usually take `T` as a parameter.",3,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",3,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",3,null],[0,"streaming","tokio_proto","Streaming protocols.",null,null],[3,"Body","tokio_proto::streaming","Body stream",null,null],[4,"Message","","Message sent and received from a multiplexed service",null,null],[13,"WithoutBody","","Has no associated streaming body",4,null],[13,"WithBody","","Has associated streaming body",4,null],[0,"pipeline","","Pipelined, streaming protocols.",null,null],[3,"StreamingPipeline","tokio_proto::streaming::pipeline","A marker used to flag protocols as being streaming and pipelined.",null,null],[4,"Frame","","A pipelined protocol frame",null,null],[13,"Message","","Either a request or a response",5,null],[12,"message","tokio_proto::streaming::pipeline::Frame","The message value",5,null],[12,"body","","Set to true when body frames will follow",5,null],[13,"Body","tokio_proto::streaming::pipeline","Body frame. None indicates that the body is done streaming.",5,null],[12,"chunk","tokio_proto::streaming::pipeline::Frame","Body chunk. Setting to `None` indicates that the body is done streaming and there will be no further body frames sent with the given request ID.",5,null],[13,"Error","tokio_proto::streaming::pipeline","Error",5,null],[12,"error","tokio_proto::streaming::pipeline::Frame","Error value",5,null],[11,"fmt","tokio_proto::streaming::pipeline","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"unwrap_msg","","Unwraps a frame, yielding the content of the `Message`.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_body","","Unwraps a frame, yielding the content of the `Body`.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"unwrap_err","","Unwraps a frame, yielding the content of the `Error`.",5,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[0,"advanced","","Provides the substrate for implementing pipelined, streaming protocols.",null,null],[3,"Pipeline","tokio_proto::streaming::pipeline::advanced","Provides protocol pipelining functionality in a generic way over clients and servers. Used internally by `pipeline::Client` and `pipeline::Server`.",null,null],[6,"PipelineMessage","","Message used to communicate through the multiplex dispatch",null,null],[8,"Dispatch","","Dispatch messages from the transport to the service",null,null],[16,"Io","","Type of underlying I/O object",6,null],[16,"In","","Message written to transport",6,null],[16,"BodyIn","","Body written to transport",6,null],[16,"Out","","Messages read from the transport",6,null],[16,"BodyOut","","Outbound body frame",6,null],[16,"Error","","Transport error",6,null],[16,"Stream","","Body stream written to transport",6,null],[16,"Transport","","Transport type",6,null],[10,"transport","","Mutable reference to the transport",6,null],[10,"dispatch","","Process an out message",6,{"inputs":[{"name":"self"},{"name":"pipelinemessage"}],"output":{"name":"result"}}],[10,"poll","","Poll the next completed message",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[10,"has_in_flight","","RPC currently in flight TODO: Get rid of",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new pipeline `Pipeline` dispatcher with the given service and transport",7,{"inputs":[{"name":"t"}],"output":{"name":"pipeline"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"ClientProto","tokio_proto::streaming::pipeline","A streaming, pipelined client protocol.",null,null],[16,"Request","","The type of request headers.",8,null],[16,"RequestBody","","The type of request body chunks.",8,null],[16,"Response","","The type of response headers.",8,null],[16,"ResponseBody","","The type of response body chunks.",8,null],[16,"Error","","The type of error frames.",8,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",8,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",8,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",8,null],[8,"ServerProto","","A streaming, pipelined server protocol.",null,null],[16,"Request","","Request headers.",9,null],[16,"RequestBody","","Request body chunks.",9,null],[16,"Response","","Response headers.",9,null],[16,"ResponseBody","","Response body chunks.",9,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",9,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",9,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",9,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",9,null],[8,"Transport","","Additional transport details relevant to streaming, pipelined protocols.",null,null],[11,"tick","","Allow the transport to do miscellaneous work (e.g., sending ping-pong messages) that is not directly connected to sending or receiving frames.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"cancel","","Cancel interest in the current stream",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"multiplex","tokio_proto::streaming","Pipelined, multiplexed protocols.",null,null],[3,"StreamingMultiplex","tokio_proto::streaming::multiplex","A marker used to flag protocols as being streaming and multiplexed.",null,null],[4,"Frame","","A multiplexed protocol frame",null,null],[13,"Message","","Either a request or a response.",12,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",12,null],[12,"message","","The message value",12,null],[12,"body","","Set to true when body frames will follow with the same request ID.",12,null],[12,"solo","","Set to `true` when this message does not have a pair in the other direction",12,null],[13,"Body","tokio_proto::streaming::multiplex","Body frame.",12,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",12,null],[12,"chunk","","Body chunk. Setting to `None` indicates that the body is done streaming and there will be no further body frames sent with the given request ID.",12,null],[13,"Error","tokio_proto::streaming::multiplex","Error",12,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",12,null],[12,"error","","Error value",12,null],[11,"fmt","tokio_proto::streaming::multiplex","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"request_id","","Return the request ID associated with the frame.",12,{"inputs":[{"name":"self"}],"output":{"name":"requestid"}}],[11,"unwrap_msg","","Unwraps a frame, yielding the content of the `Message`.",12,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_body","","Unwraps a frame, yielding the content of the `Body`.",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"unwrap_err","","Unwraps a frame, yielding the content of the `Error`.",12,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[0,"advanced","","Provides the substrate for implementing multiplexed, streaming protocols.",null,null],[3,"Multiplex","tokio_proto::streaming::multiplex::advanced","Task that drives multiplexed protocols",null,null],[3,"MultiplexMessage","","Message used to communicate through the multiplex dispatch",null,null],[12,"id","","Request ID",13,null],[12,"message","","Message",13,null],[12,"solo","","True if message has no pair (request / response)",13,null],[8,"Dispatch","","Dispatch messages from the transport to the service",null,null],[16,"Io","","Type of underlying I/O object",14,null],[16,"In","","Messages written to the transport",14,null],[16,"BodyIn","","Inbound body frame",14,null],[16,"Out","","Messages read from the transport",14,null],[16,"BodyOut","","Outbound body frame",14,null],[16,"Error","","Transport error",14,null],[16,"Stream","","Inbound body stream type",14,null],[16,"Transport","","Transport type",14,null],[10,"transport","","Mutable reference to the transport",14,null],[10,"poll","","Poll the next available message",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[10,"poll_ready","","The `Dispatch` is ready to accept another message",14,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[10,"dispatch","","Process an out message",14,{"inputs":[{"name":"self"},{"name":"multiplexmessage"}],"output":{"name":"result"}}],[10,"cancel","","Cancel interest in the exchange identified by RequestId",14,{"inputs":[{"name":"self"},{"name":"requestid"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new pipeline `Multiplex` dispatcher with the given service and transport",15,{"inputs":[{"name":"t"}],"output":{"name":"multiplex"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new MultiplexMessage",13,{"inputs":[{"name":"requestid"},{"name":"message"}],"output":{"name":"multiplexmessage"}}],[11,"error","","Create a new errored MultiplexMessage",13,{"inputs":[{"name":"requestid"},{"name":"e"}],"output":{"name":"multiplexmessage"}}],[6,"RequestId","tokio_proto::streaming::multiplex","Identifies a request / response thread",null,null],[8,"ClientProto","","A streaming, multiplexed client protocol.",null,null],[16,"Request","","Request headers.",16,null],[16,"RequestBody","","Request body chunks.",16,null],[16,"Response","","Response headers.",16,null],[16,"ResponseBody","","Response body chunks.",16,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",16,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",16,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",16,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",16,null],[8,"ServerProto","","A streaming, multiplexed server protocol.",null,null],[16,"Request","","Request headers.",17,null],[16,"RequestBody","","Request body chunks.",17,null],[16,"Response","","Response headers.",17,null],[16,"ResponseBody","","Response body chunks.",17,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",17,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",17,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",17,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any configuration.",17,null],[8,"Transport","","Additional transport details relevant to streaming, multiplexed protocols.",null,null],[11,"tick","","Allow the transport to do miscellaneous work (e.g., sending ping-pong messages) that is not directly connected to sending or receiving frames.",18,{"inputs":[{"name":"self"}],"output":null}],[11,"cancel","","Cancel interest in the exchange identified by RequestId",18,{"inputs":[{"name":"self"},{"name":"requestid"}],"output":{"name":"result"}}],[11,"poll_write_body","","Tests to see if this I/O object may accept a body frame for the given request ID",18,{"inputs":[{"name":"self"},{"name":"requestid"}],"output":{"name":"async"}}],[11,"dispatching_body","","Invoked before the multiplexer dispatches the body chunk to the body stream.",18,{"inputs":[{"name":"self"},{"name":"requestid"},{"name":"readbody"}],"output":null}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","tokio_proto::streaming","Return an empty body stream",20,{"inputs":[],"output":{"name":"body"}}],[11,"pair","","Return a body stream with an associated sender half",20,null],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from","","",20,{"inputs":[{"name":"receiver"}],"output":{"name":"body"}}],[11,"from","","",20,{"inputs":[{"name":"t"}],"output":{"name":"body"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the inner value",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the inner value",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the value and returns the inner value",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"take_body","","If the `Message` value has an associated body stream, return it. The original `Message` value will then become a `WithoutBody` variant.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"util","tokio_proto","Utilities for building protocols",null,null],[0,"client_proxy","tokio_proto::util","Utilities for building protocol clients",null,null],[3,"ClientProxy","tokio_proto::util::client_proxy","Client `Service` for pipeline or multiplex protocols",null,null],[3,"Response","","Response future returned from a client",null,null],[5,"pair","","Return a client handle and a handle used to receive requests on",null,{"inputs":[],"output":{"name":"pair"}}],[6,"Pair","","A client / receiver pair",null,null],[6,"Receiver","","Receive requests submitted to the client",null,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"call","","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","tokio_proto","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Create a builder for the given client protocol.",23,{"inputs":[{"name":"p"}],"output":{"name":"tcpclient"}}],[11,"connect","","Establish a connection to the given address.",23,{"inputs":[{"name":"self"},{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"connect"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Starts building a server for the given protocol and address, with default configuration.",25,{"inputs":[{"name":"p"},{"name":"socketaddr"}],"output":{"name":"tcpserver"}}],[11,"addr","","Set the address for the server.",25,{"inputs":[{"name":"self"},{"name":"socketaddr"}],"output":null}],[11,"threads","","Set the number of threads running simultaneous event loops (Unix only).",25,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"serve","","Start up the server, providing the given service on it.",25,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"with_handle","","Start up the server, providing the given service on it, and providing access to the event loop handle.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[8,"BindServer","","Binds a service to an I/O object.",null,null],[16,"ServiceRequest","","The request type for the service.",26,null],[16,"ServiceResponse","","The response type for the service.",26,null],[16,"ServiceError","","The error type for the service.",26,null],[10,"bind_server","","Bind the service.",26,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"t"},{"name":"s"}],"output":null}],[8,"BindClient","","Binds an I/O object as a client of a service.",null,null],[16,"ServiceRequest","","The request type for the service.",27,null],[16,"ServiceResponse","","The response type for the service.",27,null],[16,"ServiceError","","The error type for the service.",27,null],[16,"BindClient","","The bound service.",27,null],[10,"bind_client","","Bind an I/O object as a service.",27,null],[11,"clone","tokio_proto::pipeline","",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"call","","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"call","tokio_proto::multiplex","",30,null],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[8,"ClientProto"],[8,"ServerProto"],[8,"ClientProto"],[8,"ServerProto"],[4,"Message"],[4,"Frame"],[8,"Dispatch"],[3,"Pipeline"],[8,"ClientProto"],[8,"ServerProto"],[8,"Transport"],[3,"StreamingPipeline"],[4,"Frame"],[3,"MultiplexMessage"],[8,"Dispatch"],[3,"Multiplex"],[8,"ClientProto"],[8,"ServerProto"],[8,"Transport"],[3,"StreamingMultiplex"],[3,"Body"],[3,"ClientProxy"],[3,"Response"],[3,"TcpClient"],[3,"Connect"],[3,"TcpServer"],[8,"BindServer"],[8,"BindClient"],[3,"ClientService"],[3,"Pipeline"],[3,"ClientService"],[3,"Multiplex"]]};
searchIndex["tokio_service"] = {"doc":"Definition of the core `Service` trait to Tokio","items":[[8,"Service","tokio_service","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",0,null],[16,"Response","","Responses given by the service.",0,null],[16,"Error","","Errors produced by the service.",0,null],[16,"Future","","The future response value.",0,null],[10,"call","","Process the request and return the response asynchronously.",0,null],[8,"NewService","","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",1,null],[16,"Response","","Responses given by the service",1,null],[16,"Error","","Errors produced by the service",1,null],[16,"Instance","","The `Service` value created by this factory",1,null],[10,"new_service","","Create and return a new service value.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[8,"Service"],[8,"NewService"]]};
searchIndex["unicase"] = {"doc":"UniCase","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",null,null],[5,"eq","","Compare two string-like types for case-less equality, using unicode folding.",null,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"bool"}}],[5,"eq_ascii","","Compare two string-like types for case-less equality, ignoring ASCII case.",null,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"bool"}}],[11,"new","","",0,{"inputs":[{"name":"s"}],"output":{"name":"ascii"}}],[11,"deref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"s2"}],"output":{"name":"bool"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unicase"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ascii"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `UniCase`.",1,{"inputs":[{"name":"s"}],"output":{"name":"unicase"}}],[11,"unicode","","Creates a new `UniCase`, skipping the ASCII check.",1,{"inputs":[{"name":"s"}],"output":{"name":"unicase"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"unicase"}],"output":{"name":"bool"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Ascii"],[3,"UniCase"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed right-to-left and left-to-right text.  It is written in safe Rust, compatible with the current stable release.","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text. If a character is multiple bytes, its class will appear multiple times in the vector.",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",2,null],[4,"BidiClass","","Represents values of the Unicode character property Bidi_Class, also known as the bidirectional character type.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the BidiClass of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in visual order.",null,null],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,null],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go as high as `max_depth`.",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go as high as `max_depth + 1`.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"level"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ltr","","New LTR level with smallest number value (0).",5,{"inputs":[],"output":{"name":"level"}}],[11,"rtl","","New RTL level with smallest number value (1).",5,{"inputs":[],"output":{"name":"level"}}],[11,"max_implicit_depth","","Maximum depth of the directional status stack during implicit resolutions.",5,{"inputs":[],"output":{"name":"u8"}}],[11,"max_explicit_depth","","Maximum depth of the directional status stack during explicit resolutions.",5,{"inputs":[],"output":{"name":"u8"}}],[11,"new","","Create new level, fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"u8"}],"output":{"name":"result"}}],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"u8"}],"output":{"name":"result"}}],[11,"number","","The level number.",5,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"is_ltr","","If this level is left-to-right.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_rtl","","If this level is right-to-left.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raise","","Raise level by `amount`, fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this, or fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"bidi_class","","Generate a character type based on a level (as specified in steps X10 and N2).",5,{"inputs":[{"name":"self"}],"output":{"name":"bidiclass"}}],[11,"vec","","",5,null],[11,"into","","Convert to the level number",5,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from","","Create level by number",5,{"inputs":[{"name":"u8"}],"output":{"name":"level"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","unicode_bidi","",3,{"inputs":[{"name":"self"}],"output":{"name":"bidiclass"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bidiclass"}],"output":{"name":"bool"}}],[6,"LevelRun","","A maximal substring of characters with the same embedding level.",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"paragraphinfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"paragraphinfo"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"initialinfo"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"initialinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"initialinfo"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"bidiinfo"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"bidiinfo"}],"output":{"name":"bool"}}],[11,"new","","Split the text into paragraphs and determine the bidi embedding levels for each paragraph.",2,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"bidiinfo"}}],[11,"reordered_levels","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per byte.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"name":"range"}],"output":{"name":"vec"}}],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per character.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"name":"range"}],"output":{"name":"vec"}}],[11,"reorder_line","","Re-order a line based on resolved levels and return the line in display order.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"name":"range"}],"output":{"name":"cow"}}],[11,"visual_runs","","Find the level runs within a line and return them in visual order.",2,null],[11,"has_rtl","","If processed text has any computed RTL levels",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of Unicode that this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the Rust programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA.",2,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",2,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"hostandport"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",0,{"inputs":[{"name":"self"}],"output":{"name":"hostandport"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"opaqueorigin"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"opaqueorigin"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"opaqueorigin"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty, except if these was only one segment to begin with.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"pop","","Remove the last segment of this URL’s path.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"push","","Append the given segment at the end of this URL’s path.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",7,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"str"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"form_urlencoded","","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"finish","","",9,null],[16,"Finished","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",10,{"inputs":[{"name":"self"}],"output":{"name":"parseintoowned"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_mut_string","url","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"finish","","",14,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",13,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",13,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Remove any existing name/value pair.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"append_pair","","Serialize and append a name/value pair.",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",13,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"finish","","If this serializer was constructed with a string, take and return that string.",13,null],[0,"quirks","url","Getters and setters for URL components implemented per https://url.spec.whatwg.org/#api",null,null],[5,"domain_to_ascii","url::quirks","https://url.spec.whatwg.org/#dom-url-domaintoascii",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#dom-url-domaintounicode",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"href","","Getter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_href","","Setter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"origin","","Getter for https://url.spec.whatwg.org/#dom-url-origin",null,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[5,"protocol","","Getter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_protocol","","Setter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"username","","Getter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_username","","Setter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"password","","Getter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_password","","Setter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"host","","Getter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_host","","Setter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"hostname","","Getter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hostname","","Setter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"port","","Getter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_port","","Setter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"pathname","","Getter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_pathname","","Setter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"search","","Getter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_search","","Setter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"hash","","Getter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hash","","Setter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[11,"clone","url","",8,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"parseoptions"}}],[11,"base_url","","Change the base URL",15,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"self"}}],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",15,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"self"}}],[11,"parse","","Parse an URL string with the configuration so far.",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",8,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","Return the serialization of this URL.",8,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"port","","Return the port number for this URL, if any.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",8,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"set_query","","Change this URL’s query string.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",8,{"inputs":[{"name":"self"}],"output":{"name":"serializer"}}],[11,"set_path","","Change this URL’s path.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_port","","Change this URL’s port number.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_host","","Change this URL’s host.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",8,{"inputs":[{"name":"self"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_password","","Change this URL’s password.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_username","","Change this URL’s username.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"hash","","",8,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"UrlQuery"],[3,"ParseOptions"]]};
initSearch(searchIndex);
